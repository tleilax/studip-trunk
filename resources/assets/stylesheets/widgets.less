@import (reference) "less/variables.less";
@import (reference) "studip-jquery-ui.less";
// @import (reference) "assets/stylesheets/less/jquery-ui/studip.less";
@import (reference) "less/start.less";

.grid-stack-item-content a {
    color: @base-color;

    &:hover,
    &:active {
        color: @active-color;
    }
}

@content-padding: 0.5em;

/* disabled for now
#layout_content {
    overflow-x: hidden;
}
*/

.grid-stack > .grid-stack-item > .grid-stack-item-content {
    overflow: hidden;
}
.grid-stack > .grid-stack-placeholder > .placeholder-content {
    background: @yellow-20;
    border: 1px dashed @base-color-80;
}

.grid-stack {
    position: relative;
    margin: 0 -10px;

    // TODO: REACTIVATE

    // // Hide widget grid until initialised
    // &:not(.studip-widget-grid) {
    //     .grid-stack-item {
    //         display: none;
    //     }
    //
    //     &::before {
    //         position: absolute;
    //         top: 0;
    //         right: 0;
    //         left: 0;
    //         height: 200px;
    //         background: url("@{image-path}/ajax-indicator-black.svg") no-repeat center;
    //         background-size: 4em;
    //
    //         display: block;
    //         content: '';
    //     }
    // }

    &.admin-mode .widget-content {
        .disable-select();

        background-color: @yellow-20;
        color: @light-gray-color;

        > * {
            pointer-events: none;
        }

        .icon('before', 'edit', 'inactive');
        &::before {
            .square(4em);
            position: absolute;
            right: 1em;
            bottom: 1em;
            background-repeat: no-repeat;
            background-size: contain;
            filter: blur(1px);
        }
    }

    transition: padding 300ms;
    &.resizing {
        padding-bottom: 4em;
    }

    &.ui-droppable-active {
        min-height: 50vh;
    }

}
.grid-stack-item {
    .ui-resizable-handle {
        transition: opacity 300ms;
        opacity: 0.3;
    }
    &:hover .ui-resizable-handle {
        opacity: 1;
    }

    .grid-stack > & > .ui-resizable-se {
        transform: rotate(0deg);
        background-image: url("@{image-path}/icons/resize-2.svg");
        margin-right: 2px;
        margin-bottom: 2px;
    }

    // TODO: Remove debug
    .grid-stack.r2 > & > .ui-resizable-se {
        background-image: url("@{image-path}/icons/resize-1.svg");
    }
}


// Spans a grid of @widget-grid-size elements with flexible element's widths
.grid-stack {
    .grid-stack-item[data-gs-width="1"] {
        width: unit((1 / 6 * 100), %);
    }
    .grid-stack-item[data-gs-width="2"] {
        width: unit((2 / 6 * 100), %);
    }
    .grid-stack-item[data-gs-width="3"] {
        width: unit((3 / 6 * 100), %);
    }
    .grid-stack-item[data-gs-width="4"] {
        width: unit((4 / 6 * 100), %);
    }
    .grid-stack-item[data-gs-width="5"] {
        width: unit((5 / 6 * 100), %);
    }
    .grid-stack-item[data-gs-width="6"] {
        width: unit((6 / 6 * 100), %);
    }

    .grid-stack-item[data-gs-x="0"] {
        left: unit((0 / 6 * 100), %);
    }
    .grid-stack-item[data-gs-x="1"] {
        left: unit((1 / 6 * 100), %);
    }
    .grid-stack-item[data-gs-x="2"] {
        left: unit((2 / 6 * 100), %);
    }
    .grid-stack-item[data-gs-x="3"] {
        left: unit((3 / 6 * 100), %);
    }
    .grid-stack-item[data-gs-x="4"] {
        left: unit((4 / 6 * 100), %);
    }
    .grid-stack-item[data-gs-x="5"] {
        left: unit((5 / 6 * 100), %);
    }
}

.grid-stack-item[data-gs-height="1"] {
    height: 100px;
}

.grid-stack-item.ui-draggable-dragging .grid-stack-item-content {
    background: @activity-color;
    z-index: 10; /* keep dragged item on top */
}

/*******************
 ** Widget layout **
 *******************/
/* Wrapper around widgets */
// TODO: Neccessary to seperate widget from grid but the widget itself
// currently has no own wrapper
.grid-stack-item-content {
    &:extend(.ui-widget-content all);
    &:extend(.studip-widget);

    display: flex;
    align-items: stretch;
    flex-direction: row;
    flex-wrap: wrap;

    background: transparent;
    border: 1px solid @base-color-20;
    transition: border 300ms;

    // &:hover {
    //     border-color: @base-color;
    // }

//    transition: all 300ms;

    &.may-drop {
        .widget-header,
        .widget-content {
            background-color: @red !important;
        }
    }

    .widget-header {
        &:extend(.studip-widget .widget-header);

        flex: 1 0 0;
        order: 1;
        white-space: nowrap;
        z-index: 2;
    }

    .widget-content {
        box-sizing: border-box;
        flex: 1 0 100%;
        transition: all 300ms;

        background: #fff;
        order: 3;

        margin-top: 0;
        max-height: 1000px;
        overflow: auto;
        padding: @content-padding;
        height: calc(100% - 2em - 4px);

        transition: opacity 300ms, margin-top 300ms, z-index 300ms step-start;
    }

    .widget-actions {
        flex: 0 0 auto;
        order: 2;

        display: inline-flex;
        align-items: flex-start;

        list-style: none;
        margin: 0;
        padding: 0.5em 0.5em 0;

        white-space: nowrap;

        &:extend(.studip-widget .widget-header);
        overflow: visible;
        z-index: 3;

        // Legacy icons
        .widget-action,
        img {
            margin-right: 2px;
            vertical-align: top;
        }
     }

     &.widget-disabled {
         &,
         .widget-header,
         .widget-title,
         .widget-content,
         .widget-actions {
             background-color: @light-gray-color-20;
         }

         .widget-title {
             color: @black;
             font-weight: normal;
         }

         .widget-content {
             .background-icon('decline-circle-full', 'inactive');
             background-position: center;
             background-repeat: no-repeat;
             background-size: auto 75%;
             opacity: 0.5;
         }

         transition: opacity 300ms;
         &:not(:hover) {
             opacity: 0.3;
         }
     }
}

/* Widget definitions */
.widget-header {
    .disable-select();
    &:extend(.ui-widget_head);

    .grid-stack-item:not([data-gs-locked]) & {
        cursor: move;
    }

    .widget-title {
        // All of this removes global styles from the h2
        border: 0;
        color: inherit;
        font-weight: inherit;
        line-height: 2;
        margin: 0;
        padding: 0;
        text-decoration: none;
        max-width: 100%;
        text-overflow: ellipsis;
        overflow: hidden;
    }
}

// Action remove (.widget-action() is defined in mixins/studip.less so that
// plugins have access to it as well)
.widget-action('edit');
.widget-action('remove', 'decline');
.widget-action('lock', 'lock-unlocked');
.grid-stack-item[data-gs-locked] {
    .widget-action('lock', 'lock-locked');
}
.widget-action('removable', 'accept/group');
.grid-stack-item[data-gs-removable] {
    .widget-action('removable', 'decline/group');
}
.widget-action('add');
.widget-action('admin');
.widget-action('refresh');
.widget-action('rss');
.widget-action('rss-edit', 'add/rss');

.widget-action('visibility', 'visibility-invisible', 'clickable', {
    &.visible {
        .background-icon('visibility-visible', 'clickable');
    }
});

// Sidebar related
/* disabled for now
#layout-sidebar {
    display: flex;
    align-items: flex-start;
    max-width: 270px;

    @distance: 270px;

//    overflow: hidden;

    .sidebar-widget {
        box-sizing: border-box;
        transition: all 300ms linear;
        max-height: 1000px;
//        overflow: hidden;
    }

    &.second-display {
        .sidebar-widget:not(.sidebar-secondary-widget) {
            border: 0;
            margin: 0;
            max-height: 0;
            opacity: 0;
        }
        .sidebar-secondary-widget {
            max-height: 100vh;

            .sidebar-widget-content {
                max-height: 60vh;
                overflow-y: auto;
            }
        }
    }
    &:not(.second-display) {
        .sidebar-secondary-widget {
            max-height: 0;
            opacity: 0;
        }
    }
}
*/

.addable-widgets {
    padding: 0;

    ul, li {
        list-style: none;
        margin: 0;
        padding: 0;
    }

    li {
        padding: 4px;
        overflow: hidden;
        position: relative;

        &:not(:last-child) {
            border-bottom: 1px solid @content-color-40;
            padding-bottom: 0.5em;
        }
        &:not(:first-child) {
            padding-top: 0.5em;
        }

        &:hover {
            background-color: @activity-color-20;
        }
    }

    h2 {
        margin-top: 0;
        margin-bottom: 0;
    }

    .widget-to-add {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;

        cursor: move;
        opacity: 0;
    }
}

// Columns
.grid-stack .widget-columns {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: flex-start;
    width: 100%;

    > .widget-column {
        flex: 1;
    }
}

// Tabs
.tabbable-widget {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;

    height: 100%;
    margin: (-@content-padding);
    overflow: hidden;

    > nav {
        flex: 0;

        display: flex;
        flex-direction: row;

        > a {
            flex: 1;
            transition: background-color 300ms;

            background-color: @dark-gray-color-10;
            overflow: hidden;
            padding: 0.25em 0;
            text-align: center;
            text-overflow: ellipsis;
            white-space: nowrap;

            &:not(:last-child) {
                border-right: 1px solid @dark-gray-color-40;
            }
            &:hover:not(.active) {
                background-color: fadeout(@base-color-20, 20%);
            }
            &.active {
                background-color: @base-color-20;
                font-weight: bold;
            }

            img, svg {
                transition: opacity 300ms;
            }

            &:not(.active):not(:hover) {
                img, svg {
                    opacity: 0;
                }
            }
        }
    }
    > section {
        flex: 1;

        overflow-y: auto;
        padding: @content-padding;

        &:not(.active) {
            display: none;
        }
    }
}

// Preview
table.widget-container-preview {
    width: 100%;

    td {
        box-sizing: border-box;
        text-align: center;

        &:not(.empty) {
            background-color: @light-gray-color-20;
            border: 1px solid @light-gray-color;
        }
    }
}

form.add-widget {
    .position {
        input[type="radio"] {
            margin-left: 2.5em;
            margin-top: 3em;
            opacity: 0;
            position: absolute;

            + label {
                .background-icon('span-empty', 'clickable');
                background-position: left 1em center;
                background-repeat: no-repeat;
                background-size: 2em;
                border: 1px solid @light-gray-color;
                cursor: pointer;
                font-size: 1.5em;
                padding: 1em 0;
                text-align: center;
            }

            &:checked + label {
                background-color: @green-20;
                .background-icon('check-circle-full', 'clickable');
                background-size: 2em;
                font-weight: bold;
            }
        }
    }

    .widgets {
        label:not(:last-child) {
            border-bottom: 1px solid @content-color-40;
        }
    }
}

// TODO: REMOVE
.grid-stack > .grid-stack-item > .grid-stack-item-content {
    bottom: initial;
}

// temporary fix for responsive display
html.responsive-display {
    .grid-stack {
        margin: 0;
        > .grid-stack-item {
            position: relative;
            &[data-gs-width] {
                width: auto;
            }
            &[data-gs-x] {
                left: auto;
            }

            &:not(:last-child) {
                margin-bottom: 1em;
            }

            > .grid-stack-item-content {
                position: relative;
                left: 0;
                right: 0;
            }
        }
    }
}
