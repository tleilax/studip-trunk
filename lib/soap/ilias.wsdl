<?xml version="1.0" encoding="ISO-8859-1"?>
<definitions xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:si="http://soapinterop.org/xsd" xmlns:tns="urn:ilUserAdministration" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="urn:ilUserAdministration"><types><xsd:schema targetNamespace="urn:ilUserAdministration">
 <xsd:import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
 <xsd:import namespace="http://schemas.xmlsoap.org/wsdl/"/>
 <xsd:complexType name="intArray">
  <xsd:complexContent>
   <xsd:restriction base="SOAP-ENC:Array">
    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="xsd:int[]"/>
   </xsd:restriction>
  </xsd:complexContent>
 </xsd:complexType>
 <xsd:complexType name="stringArray">
  <xsd:complexContent>
   <xsd:restriction base="SOAP-ENC:Array">
    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="xsd:string[]"/>
   </xsd:restriction>
  </xsd:complexContent>
 </xsd:complexType>
 <xsd:complexType name="ilUserData">
  <xsd:all>
   <xsd:element name="usr_id" type="xsd:int" minOccurs="0"/>
   <xsd:element name="login" type="xsd:string"/>
   <xsd:element name="passwd" type="xsd:string"/>
   <xsd:element name="firstname" type="xsd:string"/>
   <xsd:element name="lastname" type="xsd:string"/>
   <xsd:element name="title" type="xsd:string"/>
   <xsd:element name="gender" type="xsd:string"/>
   <xsd:element name="email" type="xsd:string"/>
   <xsd:element name="institution" type="xsd:string" minOccurs="0"/>
   <xsd:element name="street" type="xsd:string" minOccurs="0"/>
   <xsd:element name="city" type="xsd:string" minOccurs="0"/>
   <xsd:element name="zipcode" type="xsd:string" minOccurs="0"/>
   <xsd:element name="country" type="xsd:string" minOccurs="0"/>
   <xsd:element name="phone_office" type="xsd:string" minOccurs="0"/>
   <xsd:element name="last_login" type="xsd:string" minOccurs="0"/>
   <xsd:element name="last_update" type="xsd:string" minOccurs="0"/>
   <xsd:element name="create_date" type="xsd:string" minOccurs="0"/>
   <xsd:element name="hobby" type="xsd:string" minOccurs="0"/>
   <xsd:element name="department" type="xsd:string" minOccurs="0"/>
   <xsd:element name="phone_home" type="xsd:string" minOccurs="0"/>
   <xsd:element name="phone_mobile" type="xsd:string" minOccurs="0"/>
   <xsd:element name="fax" type="xsd:string" minOccurs="0"/>
   <xsd:element name="time_limit_owner" type="xsd:int" minOccurs="0"/>
   <xsd:element name="time_limit_unlimited" type="xsd:int" minOccurs="0"/>
   <xsd:element name="time_limit_from" type="xsd:int" minOccurs="0"/>
   <xsd:element name="time_limit_until" type="xsd:int" minOccurs="0"/>
   <xsd:element name="time_limit_message" type="xsd:int" minOccurs="0"/>
   <xsd:element name="referral_comment" type="xsd:string" minOccurs="0"/>
   <xsd:element name="matriculation" type="xsd:string" minOccurs="0"/>
   <xsd:element name="active" type="xsd:int" minOccurs="0"/>
   <xsd:element name="accepted_agreement" type="xsd:boolean" minOccurs="0"/>
   <xsd:element name="approve_date" type="xsd:string" minOccurs="0"/>
   <xsd:element name="user_skin" type="xsd:string" minOccurs="0"/>
   <xsd:element name="user_style" type="xsd:string" minOccurs="0"/>
   <xsd:element name="user_language" type="xsd:string" minOccurs="0"/>
   <xsd:element name="import_id" type="xsd:string" minOccurs="0"/>
  </xsd:all>
 </xsd:complexType>
 <xsd:complexType name="ilOperation">
  <xsd:all>
   <xsd:element name="ops_id" type="xsd:int"/>
   <xsd:element name="operation" type="xsd:string"/>
   <xsd:element name="description" type="xsd:string"/>
  </xsd:all>
 </xsd:complexType>
 <xsd:complexType name="ilOperations">
  <xsd:complexContent>
   <xsd:restriction base="SOAP-ENC:Array">
    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="tns:ilOperation[]"/>
   </xsd:restriction>
  </xsd:complexContent>
 </xsd:complexType>
 <xsd:complexType name="ilOperationIds">
  <xsd:complexContent>
   <xsd:restriction base="SOAP-ENC:Array">
    <xsd:attribute ref="SOAP-ENC:arrayType" wsdl:arrayType="xsd:int[]"/>
   </xsd:restriction>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:schema>
</types><message name="loginRequest"><part name="client" type="xsd:string"/><part name="username" type="xsd:string"/><part name="password" type="xsd:string"/></message><message name="loginResponse"><part name="sid" type="xsd:string"/></message><message name="loginCASRequest"><part name="client" type="xsd:string"/><part name="PT" type="xsd:string"/><part name="user" type="xsd:string"/></message><message name="loginCASResponse"><part name="sid" type="xsd:string"/></message><message name="logoutRequest"><part name="sid" type="xsd:string"/></message><message name="logoutResponse"><part name="success" type="xsd:boolean"/></message><message name="lookupUserRequest"><part name="sid" type="xsd:string"/><part name="user_name" type="xsd:string"/></message><message name="lookupUserResponse"><part name="usr_id" type="xsd:int"/></message><message name="getUserRequest"><part name="sid" type="xsd:string"/><part name="user_id" type="xsd:int"/></message><message name="getUserResponse"><part name="user_data" type="tns:ilUserData"/></message><message name="updateUserRequest"><part name="sid" type="xsd:string"/><part name="user_data" type="tns:ilUserData"/></message><message name="updateUserResponse"><part name="success" type="xsd:boolean"/></message><message name="updatePasswordRequest"><part name="sid" type="xsd:string"/><part name="user_id" type="xsd:int"/><part name="new_password" type="xsd:string"/></message><message name="updatePasswordResponse"><part name="success" type="xsd:boolean"/></message><message name="addUserRequest"><part name="sid" type="xsd:string"/><part name="user_data" type="tns:ilUserData"/><part name="global_role_id" type="xsd:int"/></message><message name="addUserResponse"><part name="user_id" type="xsd:int"/></message><message name="deleteUserRequest"><part name="sid" type="xsd:string"/><part name="user_id" type="xsd:int"/></message><message name="deleteUserResponse"><part name="success" type="xsd:boolean"/></message><message name="addCourseRequest"><part name="sid" type="xsd:string"/><part name="target_id" type="xsd:int"/><part name="crs_xml" type="xsd:string"/></message><message name="addCourseResponse"><part name="course_id" type="xsd:int"/></message><message name="deleteCourseRequest"><part name="sid" type="xsd:string"/><part name="course_id" type="xsd:int"/></message><message name="deleteCourseResponse"><part name="success" type="xsd:boolean"/></message><message name="assignCourseMemberRequest"><part name="sid" type="xsd:string"/><part name="course_id" type="xsd:int"/><part name="user_id" type="xsd:int"/><part name="type" type="xsd:string"/></message><message name="assignCourseMemberResponse"><part name="success" type="xsd:boolean"/></message><message name="excludeCourseMemberRequest"><part name="sid" type="xsd:string"/><part name="course_id" type="xsd:int"/><part name="user_id" type="xsd:int"/></message><message name="excludeCourseMemberResponse"><part name="success" type="xsd:boolean"/></message><message name="isAssignedToCourseRequest"><part name="sid" type="xsd:string"/><part name="course_id" type="xsd:int"/><part name="user_id" type="xsd:int"/></message><message name="isAssignedToCourseResponse"><part name="role" type="xsd:int"/></message><message name="getCourseXMLRequest"><part name="sid" type="xsd:string"/><part name="course_id" type="xsd:int"/></message><message name="getCourseXMLResponse"><part name="xml" type="xsd:string"/></message><message name="updateCourseRequest"><part name="sid" type="xsd:string"/><part name="course_id" type="xsd:int"/><part name="xml" type="xsd:string"/></message><message name="updateCourseResponse"><part name="success" type="xsd:boolean"/></message><message name="getObjIdByImportIdRequest"><part name="sid" type="xsd:string"/><part name="import_id" type="xsd:string"/></message><message name="getObjIdByImportIdResponse"><part name="obj_id" type="xsd:int"/></message><message name="getRefIdsByImportIdRequest"><part name="sid" type="xsd:string"/><part name="import_id" type="xsd:string"/></message><message name="getRefIdsByImportIdResponse"><part name="ref_ids" type="tns:intArray"/></message><message name="getRefIdsByObjIdRequest"><part name="sid" type="xsd:string"/><part name="obj_id" type="xsd:string"/></message><message name="getRefIdsByObjIdResponse"><part name="ref_ids" type="tns:intArray"/></message><message name="getObjectByReferenceRequest"><part name="sid" type="xsd:string"/><part name="reference_id" type="xsd:int"/><part name="user_id" type="xsd:int"/></message><message name="getObjectByReferenceResponse"><part name="object_xml" type="xsd:string"/></message><message name="getObjectsByTitleRequest"><part name="sid" type="xsd:string"/><part name="title" type="xsd:string"/><part name="user_id" type="xsd:int"/></message><message name="getObjectsByTitleResponse"><part name="object_xml" type="xsd:string"/></message><message name="searchObjectsRequest"><part name="sid" type="xsd:string"/><part name="types" type="tns:stringArray"/><part name="key" type="xsd:string"/><part name="combination" type="xsd:string"/><part name="user_id" type="xsd:int"/></message><message name="searchObjectsResponse"><part name="object_xml" type="xsd:string"/></message><message name="getTreeChildsRequest"><part name="sid" type="xsd:string"/><part name="ref_id" type="xsd:int"/><part name="types" type="tns:stringArray"/><part name="user_id" type="xsd:int"/></message><message name="getTreeChildsResponse"><part name="object_xml" type="xsd:string"/></message><message name="getXMLTreeRequest"><part name="sid" type="xsd:string"/><part name="ref_id" type="xsd:int"/><part name="types" type="tns:stringArray"/><part name="user_id" type="xsd:int"/></message><message name="getXMLTreeResponse"><part name="object_xml" type="xsd:string"/></message><message name="addObjectRequest"><part name="sid" type="xsd:string"/><part name="target_id" type="xsd:int"/><part name="object_xml" type="xsd:string"/></message><message name="addObjectResponse"><part name="ref_id" type="xsd:int"/></message><message name="updateObjectsRequest"><part name="sid" type="xsd:string"/><part name="object_xml" type="xsd:string"/></message><message name="updateObjectsResponse"><part name="success" type="xsd:boolean"/></message><message name="addReferenceRequest"><part name="sid" type="xsd:string"/><part name="source_id" type="xsd:int"/><part name="target_id" type="xsd:int"/></message><message name="addReferenceResponse"><part name="ref_id" type="xsd:int"/></message><message name="deleteObjectRequest"><part name="sid" type="xsd:string"/><part name="reference_id" type="xsd:int"/></message><message name="deleteObjectResponse"><part name="success" type="xsd:boolean"/></message><message name="removeFromSystemByImportIdRequest"><part name="sid" type="xsd:string"/><part name="import_id" type="xsd:string"/></message><message name="removeFromSystemByImportIdResponse"><part name="success" type="xsd:boolean"/></message><message name="addUserRoleEntryRequest"><part name="sid" type="xsd:string"/><part name="user_id" type="xsd:int"/><part name="role_id" type="xsd:int"/></message><message name="addUserRoleEntryResponse"><part name="success" type="xsd:boolean"/></message><message name="deleteUserRoleEntryRequest"><part name="sid" type="xsd:string"/><part name="user_id" type="xsd:int"/><part name="role_id" type="xsd:int"/></message><message name="deleteUserRoleEntryResponse"><part name="success" type="xsd:boolean"/></message><message name="getOperationsRequest"><part name="sid" type="xsd:string"/></message><message name="getOperationsResponse"><part name="operations" type="tns:ilOperations"/></message><message name="revokePermissionsRequest"><part name="sid" type="xsd:string"/><part name="ref_id" type="xsd:int"/><part name="role_id" type="xsd:int"/></message><message name="revokePermissionsResponse"><part name="success" type="xsd:boolean"/></message><message name="grantPermissionsRequest"><part name="sid" type="xsd:string"/><part name="ref_id" type="xsd:int"/><part name="role_id" type="xsd:int"/><part name="operations" type="tns:intArray"/></message><message name="grantPermissionsResponse"><part name="success" type="xsd:boolean"/></message><message name="getLocalRolesRequest"><part name="sid" type="xsd:string"/><part name="ref_id" type="xsd:int"/></message><message name="getLocalRolesResponse"><part name="role_xml" type="xsd:string"/></message><message name="getUserRolesRequest"><part name="sid" type="xsd:string"/><part name="user_id" type="xsd:int"/></message><message name="getUserRolesResponse"><part name="role_xml" type="xsd:string"/></message><message name="addRoleRequest"><part name="sid" type="xsd:string"/><part name="target_id" type="xsd:int"/><part name="obj_xml" type="xsd:string"/></message><message name="addRoleResponse"><part name="role_ids" type="tns:intArray"/></message><message name="deleteRoleRequest"><part name="sid" type="xsd:string"/><part name="role_id" type="xsd:int"/></message><message name="deleteRoleResponse"><part name="success" type="xsd:boolean"/></message><message name="addRoleFromTemplateRequest"><part name="sid" type="xsd:string"/><part name="target_id" type="xsd:int"/><part name="obj_xml" type="xsd:string"/><part name="role_template_id" type="xsd:int"/></message><message name="addRoleFromTemplateResponse"><part name="role_ids" type="tns:intArray"/></message><message name="getObjectTreeOperationsRequest"><part name="sid" type="xsd:string"/><part name="ref_id" type="xsd:int"/><part name="user_id" type="xsd:int"/></message><message name="getObjectTreeOperationsResponse"><part name="operations" type="tns:ilOperations"/></message><message name="addGroupRequest"><part name="sid" type="xsd:string"/><part name="target_id" type="xsd:int"/><part name="group_xml" type="xsd:string"/></message><message name="addGroupResponse"><part name="ref_id" type="xsd:int"/></message><message name="groupExistsRequest"><part name="sid" type="xsd:string"/><part name="title" type="xsd:string"/></message><message name="groupExistsResponse"><part name="exists" type="xsd:boolean"/></message><message name="getGroupRequest"><part name="sid" type="xsd:string"/><part name="ref_id" type="xsd:int"/></message><message name="getGroupResponse"><part name="group_xml" type="xsd:string"/></message><message name="assignGroupMemberRequest"><part name="sid" type="xsd:string"/><part name="group_id" type="xsd:int"/><part name="user_id" type="xsd:int"/><part name="type" type="xsd:string"/></message><message name="assignGroupMemberResponse"><part name="success" type="xsd:boolean"/></message><message name="excludeGroupMemberRequest"><part name="sid" type="xsd:string"/><part name="group_id" type="xsd:int"/><part name="user_id" type="xsd:int"/></message><message name="excludeGroupMemberResponse"><part name="success" type="xsd:boolean"/></message><message name="isAssignedToGroupRequest"><part name="sid" type="xsd:string"/><part name="group_id" type="xsd:int"/><part name="user_id" type="xsd:int"/></message><message name="isAssignedToGroupResponse"><part name="role" type="xsd:int"/></message><message name="sendMailRequest"><part name="sid" type="xsd:string"/><part name="rcp_to" type="xsd:string"/><part name="rcp_cc" type="xsd:string"/><part name="rcp_bcc" type="xsd:string"/><part name="sender" type="xsd:string"/><part name="subject" type="xsd:string"/><part name="message" type="xsd:string"/><part name="attachments" type="xsd:string"/></message><message name="sendMailResponse"><part name="status" type="xsd:boolean"/></message><message name="saveQuestionResultRequest"><part name="sid" type="xsd:string"/><part name="user_id" type="xsd:int"/><part name="test_id" type="xsd:int"/><part name="question_id" type="xsd:int"/><part name="pass" type="xsd:int"/><part name="solution" type="tns:stringArray"/></message><message name="saveQuestionResultResponse"><part name="status" type="xsd:boolean"/></message><message name="getStructureObjectsRequest"><part name="sid" type="xsd:string"/><part name="ref_id" type="xsd:int"/></message><message name="getStructureObjectsResponse"><part name="xml" type="xsd:string"/></message><message name="importUsersRequest"><part name="sid" type="xsd:string"/><part name="folder_id" type="xsd:int"/><part name="usr_xml" type="xsd:string"/><part name="conflict_rule" type="xsd:int"/><part name="send_account_mail" type="xsd:int"/></message><message name="importUsersResponse"><part name="protocol" type="xsd:string"/></message><message name="getRolesRequest"><part name="sid" type="xsd:string"/><part name="role_type" type="xsd:string"/><part name="id" type="xsd:string"/></message><message name="getRolesResponse"><part name="role_xml" type="xsd:string"/></message><message name="getUsersForContainerRequest"><part name="sid" type="xsd:string"/><part name="ref_id" type="xsd:int"/><part name="attach_roles" type="xsd:int"/><part name="active" type="xsd:int"/></message><message name="getUsersForContainerResponse"><part name="user_xml" type="xsd:string"/></message><message name="getUsersForRoleRequest"><part name="sid" type="xsd:string"/><part name="role_id" type="xsd:int"/><part name="attach_roles" type="xsd:int"/><part name="active" type="xsd:int"/></message><message name="getUsersForRoleResponse"><part name="user_xml" type="xsd:string"/></message><message name="searchUserRequest"><part name="sid" type="xsd:string"/><part name="key_fields" type="tns:stringArray"/><part name="query_operator" type="xsd:string"/><part name="key_values" type="tns:stringArray"/><part name="attach_roles" type="xsd:int"/><part name="active" type="xsd:int"/></message><message name="searchUserResponse"><part name="user_xml" type="xsd:string"/></message><message name="hasNewMailRequest"><part name="sid" type="xsd:string"/></message><message name="hasNewMailResponse"><part name="status" type="xsd:boolean"/></message><portType name="ILIAS Soap WebservicePortType"><operation name="login"><documentation>ILIAS login function</documentation><input message="tns:loginRequest"/><output message="tns:loginResponse"/></operation><operation name="loginCAS"><documentation>ILIAS login function via CAS</documentation><input message="tns:loginCASRequest"/><output message="tns:loginCASResponse"/></operation><operation name="logout"><documentation>ILIAS logout function</documentation><input message="tns:logoutRequest"/><output message="tns:logoutResponse"/></operation><operation name="lookupUser"><documentation>ILIAS lookupUser(): check if username exists. Return usr_id or 0 if lookup fails.</documentation><input message="tns:lookupUserRequest"/><output message="tns:lookupUserResponse"/></operation><operation name="getUser"><documentation>ILIAS getUser(): get complete set of user data.</documentation><input message="tns:getUserRequest"/><output message="tns:getUserResponse"/></operation><operation name="updateUser"><documentation>ILIAS updateUser(). Updates all user data. Use getUser(), then modify desired fields and finally start the updateUser() call.</documentation><input message="tns:updateUserRequest"/><output message="tns:updateUserResponse"/></operation><operation name="updatePassword"><documentation>ILIAS updatePassword(). Updates password of given user. Password must be MD5 hash</documentation><input message="tns:updatePasswordRequest"/><output message="tns:updatePasswordResponse"/></operation><operation name="addUser"><documentation>ILIAS addUser() user. Add new ILIAS user. Requires complete or subset of user_data structure</documentation><input message="tns:addUserRequest"/><output message="tns:addUserResponse"/></operation><operation name="deleteUser"><documentation>ILIAS deleteUser(). Deletes all user related data (Bookmarks, Mails ...)</documentation><input message="tns:deleteUserRequest"/><output message="tns:deleteUserResponse"/></operation><operation name="addCourse"><documentation>ILIAS addCourse(). Course import. See ilias_course_0_1.dtd for details about course xml structure</documentation><input message="tns:addCourseRequest"/><output message="tns:addCourseResponse"/></operation><operation name="deleteCourse"><documentation>ILIAS deleteCourse(). Deletes a course. Delete courses are stored in "Trash" and can be undeleted in  the ILIAS administration. </documentation><input message="tns:deleteCourseRequest"/><output message="tns:deleteCourseResponse"/></operation><operation name="assignCourseMember"><documentation>ILIAS assignCourseMember(). Assigns an user to an existing course. Type should be "Admin", "Tutor" or "Member"</documentation><input message="tns:assignCourseMemberRequest"/><output message="tns:assignCourseMemberResponse"/></operation><operation name="excludeCourseMember"><documentation>ILIAS excludeCourseMember(). Excludes an user from an existing course.</documentation><input message="tns:excludeCourseMemberRequest"/><output message="tns:excludeCourseMemberResponse"/></operation><operation name="isAssignedToCourse"><documentation>ILIAS isAssignedToCourse(). Checks whether an user is assigned to a given course. Returns 0 =&gt; not assigned, 1 =&gt; course admin, 2 =&gt; course member or 3 =&gt; course tutor</documentation><input message="tns:isAssignedToCourseRequest"/><output message="tns:isAssignedToCourseResponse"/></operation><operation name="getCourseXML"><documentation>ILIAS getCourseXML(). Get a xml description of a specific course.</documentation><input message="tns:getCourseXMLRequest"/><output message="tns:getCourseXMLResponse"/></operation><operation name="updateCourse"><documentation>ILIAS updateCourse(). Update course settings, assigned members, tutors, administrators with a given xml description</documentation><input message="tns:updateCourseRequest"/><output message="tns:updateCourseResponse"/></operation><operation name="getObjIdByImportId"><documentation>ILIAS getObjIdByImportId(). Get the obj_id of an ILIAS obj by a given import id.</documentation><input message="tns:getObjIdByImportIdRequest"/><output message="tns:getObjIdByImportIdResponse"/></operation><operation name="getRefIdsByImportId"><documentation>ILIAS getRefIdsByImportId(). Get all reference ids by a given import id.</documentation><input message="tns:getRefIdsByImportIdRequest"/><output message="tns:getRefIdsByImportIdResponse"/></operation><operation name="getRefIdsByObjId"><documentation>ILIAS getRefIdsByObjId(). Get all reference ids by a given object id.</documentation><input message="tns:getRefIdsByObjIdRequest"/><output message="tns:getRefIdsByObjIdResponse"/></operation><operation name="getObjectByReference"><documentation>ILIAS getObjectByReference(). Get XML-description of an ILIAS object. If a user id is given, this methods also checks the permissions of that user on the object.</documentation><input message="tns:getObjectByReferenceRequest"/><output message="tns:getObjectByReferenceResponse"/></operation><operation name="getObjectsByTitle"><documentation>ILIAS getObjectsByTitle(). Get XML-description of an ILIAS object with given title. If a user id is given this method also checks the permissions of that user on the object.</documentation><input message="tns:getObjectsByTitleRequest"/><output message="tns:getObjectsByTitleResponse"/></operation><operation name="searchObjects"><documentation>ILIAS searchObjects(): Searches for objects. Key is within "title" or "description" Typical calls are searchObject($sid,array("lm","crs"),"\"this and that\"","and");  If an optional user id is given, this methods also return the permissions for that user on the found objects</documentation><input message="tns:searchObjectsRequest"/><output message="tns:searchObjectsResponse"/></operation><operation name="getTreeChilds"><documentation>ILIAS getTreeChilds(): Get all child objects of a given object.Choose array of types to filter the output. Choose empty type array to receive all object types</documentation><input message="tns:getTreeChildsRequest"/><output message="tns:getTreeChildsResponse"/></operation><operation name="getXMLTree"><documentation>ILIAS getXMLTree(): Returns a xml stream with the subtree objects.</documentation><input message="tns:getXMLTreeRequest"/><output message="tns:getXMLTreeResponse"/></operation><operation name="addObject"><documentation>ILIAS addObject. Create new object based on xml description under a given node ("category,course,group or folder). Return created reference id of the new object.</documentation><input message="tns:addObjectRequest"/><output message="tns:addObjectResponse"/></operation><operation name="updateObjects"><documentation>ILIAS updateObjects. Update object data (title,description,owner)</documentation><input message="tns:updateObjectsRequest"/><output message="tns:updateObjectsResponse"/></operation><operation name="addReference"><documentation>ILIAS addReference. Create new link of given object to new object. Return the new reference id</documentation><input message="tns:addReferenceRequest"/><output message="tns:addReferenceResponse"/></operation><operation name="deleteObject"><documentation>ILIAS deleteObject. Stores object in trash. If multiple references exist, only the reference is deleted </documentation><input message="tns:deleteObjectRequest"/><output message="tns:deleteObjectResponse"/></operation><operation name="removeFromSystemByImportId"><documentation>ILIAS removeFromSystemByImportId(). Removes an object identified by its import id permanently from the system. All data will be deleted. There will be no possibility to restore it from the trash. Do not use this function for deleting roles or users. Use deleteUser() or deleteRole() instead.</documentation><input message="tns:removeFromSystemByImportIdRequest"/><output message="tns:removeFromSystemByImportIdResponse"/></operation><operation name="addUserRoleEntry"><documentation>ILIAS addUserRoleEntry. Assign user to role.</documentation><input message="tns:addUserRoleEntryRequest"/><output message="tns:addUserRoleEntryResponse"/></operation><operation name="deleteUserRoleEntry"><documentation>ILIAS deleteUserRoleEntry. Deassign user from role.</documentation><input message="tns:deleteUserRoleEntryRequest"/><output message="tns:deleteUserRoleEntryResponse"/></operation><operation name="getOperations"><documentation>ILIAS getOperations(): get complete set of RBAC operations.</documentation><input message="tns:getOperationsRequest"/><output message="tns:getOperationsResponse"/></operation><operation name="revokePermissions"><documentation>ILIAS revokePermissions(): Revoke all permissions for a specific role on an object.</documentation><input message="tns:revokePermissionsRequest"/><output message="tns:revokePermissionsResponse"/></operation><operation name="grantPermissions"><documentation>ILIAS grantPermissions(): Grant permissions for a specific role on an object. (Substitutes existing permission settings)</documentation><input message="tns:grantPermissionsRequest"/><output message="tns:grantPermissionsResponse"/></operation><operation name="getLocalRoles"><documentation>ILIAS getLocalRoles(): Get all local roles assigned to an specific object.</documentation><input message="tns:getLocalRolesRequest"/><output message="tns:getLocalRolesResponse"/></operation><operation name="getUserRoles"><documentation>ILIAS getUserRoles(): Get all local roles assigned to an specific user. </documentation><input message="tns:getUserRolesRequest"/><output message="tns:getUserRolesResponse"/></operation><operation name="addRole"><documentation>ILIAS addRole(): Creates new role under given node. "target_id" is the reference id of an ILIAS ILIAS object. E.g ref_id of crs,grp. If no role folder exists, a new role folder will be created.</documentation><input message="tns:addRoleRequest"/><output message="tns:addRoleResponse"/></operation><operation name="deleteRole"><documentation>ILIAS deleteRole(): Deletes an role and all user assignments. Fails if it is the last role of an user</documentation><input message="tns:deleteRoleRequest"/><output message="tns:deleteRoleResponse"/></operation><operation name="addRoleFromTemplate"><documentation>ILIAS addRole(): Creates new role under given node. "target_id" is the reference id of an ILIAS ILIAS object. E.g ref_id of crs,grp. If no role folder exists, a new role folder will be created. In addition to addRole the template permissions will be copied from the given role template</documentation><input message="tns:addRoleFromTemplateRequest"/><output message="tns:addRoleFromTemplateResponse"/></operation><operation name="getObjectTreeOperations"><documentation>ILIAS getObjectTreeOperations(): Get all granted permissions for all references of an object for a specific user. Returns array of granted operations or empty array</documentation><input message="tns:getObjectTreeOperationsRequest"/><output message="tns:getObjectTreeOperationsResponse"/></operation><operation name="addGroup"><documentation>ILIAS addGroup(): Add grop according to valid group XML @See ilias_group_0_1.dtd</documentation><input message="tns:addGroupRequest"/><output message="tns:addGroupResponse"/></operation><operation name="groupExists"><documentation>ILIAS addGroup(): Check if group with given name exists. </documentation><input message="tns:groupExistsRequest"/><output message="tns:groupExistsResponse"/></operation><operation name="getGroup"><documentation>ILIAS getGroup(): get xml description of grouip with given reference id.</documentation><input message="tns:getGroupRequest"/><output message="tns:getGroupResponse"/></operation><operation name="assignGroupMember"><documentation>ILIAS assignGroupMember(). Assigns an user to an existing group. Type should be "Admin","Member"</documentation><input message="tns:assignGroupMemberRequest"/><output message="tns:assignGroupMemberResponse"/></operation><operation name="excludeGroupMember"><documentation>ILIAS excludeGroupMember(). Excludes an user from an existing group.</documentation><input message="tns:excludeGroupMemberRequest"/><output message="tns:excludeGroupMemberResponse"/></operation><operation name="isAssignedToGroup"><documentation>ILIAS isAssignedToGroup(). Checks whether an user is assigned to a given group. Returns 0 =&gt; not assigned, 1 =&gt; group admin, 2 =&gt; group member</documentation><input message="tns:isAssignedToGroupRequest"/><output message="tns:isAssignedToGroupResponse"/></operation><operation name="sendMail"><documentation>ILIAS sendMail(): Send mime mails according to xml description. Only for internal usage syntax, parameters may change in future releases</documentation><input message="tns:sendMailRequest"/><output message="tns:sendMailResponse"/></operation><operation name="saveQuestionResult"><documentation>ILIAS saveQuesionResult(): Typically called from Java Applet questions. Only for internal usage Sntax, parameters may change in future releases</documentation><input message="tns:saveQuestionResultRequest"/><output message="tns:saveQuestionResultResponse"/></operation><operation name="getStructureObjects"><documentation>ILIAS getStructureObjects: delivers structure of content objects like learning modules (chapters/pages) or glossary (terms)</documentation><input message="tns:getStructureObjectsRequest"/><output message="tns:getStructureObjectsResponse"/></operation><operation name="importUsers"><documentation>ILIAS import users into folder id, which should be ref_id of folder or user folder: conflict_rule: IL_FAIL_ON_CONFLICT = 1, IL_UPDATE_ON_CONFLICT = 2, IL_IGNORE_ON_CONFLICT = 3. The Return-Value is a protocol with the columns userid, login, action, message, following xmlresultset dtd. Send Account Mail = 0 deactivates sending a mail to each user, 1 activates it</documentation><input message="tns:importUsersRequest"/><output message="tns:importUsersResponse"/></operation><operation name="getRoles"><documentation>ILIAS getRoles():if id equals -1, get all roles specified by type (global|local|user or empty), if type is empty all roles with all types are delivered, if id &gt; -1 and role_type &lt;&gt; user, delivers all roles which belong to a repository object with specified ref_id, if roletype is user a numeric id is interpreted as userid otherwise as login.</documentation><input message="tns:getRolesRequest"/><output message="tns:getRolesResponse"/></operation><operation name="getUsersForContainer"><documentation>ILIAS getUsersForContainer(): get all users of a specific ref_id, which can be crs, group, category or user folder (value: -1). Choose if all roles of a user should be attached (1) or not (0). set active to -1 to get all, 0, to get inactive users only, 1 to get active users only</documentation><input message="tns:getUsersForContainerRequest"/><output message="tns:getUsersForContainerResponse"/></operation><operation name="getUsersForRole"><documentation>ILIAS getUsersForRole(): get all users of a role with specified id, specify attach_roles to 1, to attach all role assignmnents; specify active: 1, to import active only, 0: inactive only, -1: both</documentation><input message="tns:getUsersForRoleRequest"/><output message="tns:getUsersForRoleResponse"/></operation><operation name="searchUser"><documentation>ILIAS searchUser(): get all users, which match a query, consisting of the keyfields, matched with values of the field values, concatenated with the logical query operator. Specify attach_roles to 1, to attach all role assignmnents; specify active: 1, to import active only, 0: inactive only, -1: both</documentation><input message="tns:searchUserRequest"/><output message="tns:searchUserResponse"/></operation><operation name="hasNewMail"><documentation>ILIAS hasNewMail(): Checks whether the current authenticated user has a new mail.</documentation><input message="tns:hasNewMailRequest"/><output message="tns:hasNewMailResponse"/></operation></portType><binding name="ILIAS Soap WebserviceBinding" type="tns:ILIAS Soap WebservicePortType"><soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/><operation name="login"><soap:operation soapAction="urn:ilUserAdministration#login" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="loginCAS"><soap:operation soapAction="urn:ilUserAdministration#loginCAS" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="logout"><soap:operation soapAction="urn:ilUserAdministration#logout" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="lookupUser"><soap:operation soapAction="urn:ilUserAdministration#lookupUser" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getUser"><soap:operation soapAction="urn:ilUserAdministration#getUser" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="updateUser"><soap:operation soapAction="urn:ilUserAdministration#updateUser" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="updatePassword"><soap:operation soapAction="urn:ilUserAdministration#updatePassword" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="addUser"><soap:operation soapAction="urn:ilUserAdministration#addUser" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="deleteUser"><soap:operation soapAction="urn:ilUserAdministration#deleteUser" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="addCourse"><soap:operation soapAction="urn:ilUserAdministration#addCourse" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="deleteCourse"><soap:operation soapAction="urn:ilUserAdministration#deleteCourse" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="assignCourseMember"><soap:operation soapAction="urn:ilUserAdministration#assignCourseMember" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="excludeCourseMember"><soap:operation soapAction="urn:ilUserAdministration#excludeCourseMember" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="isAssignedToCourse"><soap:operation soapAction="urn:ilUserAdministration#isAssignedToCourse" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getCourseXML"><soap:operation soapAction="urn:ilUserAdministration#getCourseXML" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="updateCourse"><soap:operation soapAction="urn:ilUserAdministration#updateCourse" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getObjIdByImportId"><soap:operation soapAction="urn:ilUserAdministration#getCourseIdByImportId" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getRefIdsByImportId"><soap:operation soapAction="urn:ilUserAdministration#getRefIdsByImportId" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getRefIdsByObjId"><soap:operation soapAction="urn:ilUserAdministration#getRefIdsByObjId" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getObjectByReference"><soap:operation soapAction="urn:ilUserAdministration#getObjectByReference" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getObjectsByTitle"><soap:operation soapAction="urn:ilUserAdministration#getObjectsByTitle" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="searchObjects"><soap:operation soapAction="urn:ilUserAdministration#searchObjects" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getTreeChilds"><soap:operation soapAction="urn:ilUserAdministration#getTreeChilds" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getXMLTree"><soap:operation soapAction="urn:ilUserAdministration#getXMLTree" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="addObject"><soap:operation soapAction="urn:ilUserAdministration#addObject" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="updateObjects"><soap:operation soapAction="urn:ilUserAdministration#updateObjects" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="addReference"><soap:operation soapAction="urn:ilUserAdministration#addReference" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="deleteObject"><soap:operation soapAction="urn:ilUserAdministration#deleteObject" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="removeFromSystemByImportId"><soap:operation soapAction="urn:ilUserAdministration#removeFromSystemByImportId" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="addUserRoleEntry"><soap:operation soapAction="urn:ilUserAdministration#addUserRoleEntry" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="deleteUserRoleEntry"><soap:operation soapAction="urn:ilUserAdministration#deleteUserRoleEntry" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getOperations"><soap:operation soapAction="urn:ilUserAdministration#getOperations" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="revokePermissions"><soap:operation soapAction="urn:ilUserAdministration#revokePermissions" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="grantPermissions"><soap:operation soapAction="urn:ilUserAdministration#grantPermissions" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getLocalRoles"><soap:operation soapAction="urn:ilUserAdministration#getLocalRoles" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getUserRoles"><soap:operation soapAction="urn:ilUserAdministration#getLocalRoles" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="addRole"><soap:operation soapAction="urn:ilUserAdministration#addRole" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="deleteRole"><soap:operation soapAction="urn:ilUserAdministration#deleteRole" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="addRoleFromTemplate"><soap:operation soapAction="urn:ilUserAdministration#addRole" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getObjectTreeOperations"><soap:operation soapAction="urn:ilUserAdministration#getPermissionsForObject" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="addGroup"><soap:operation soapAction="urn:ilUserAdministration#addGroup" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="groupExists"><soap:operation soapAction="urn:ilUserAdministration#groupExists" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getGroup"><soap:operation soapAction="urn:ilUserAdministration#getGroup" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="assignGroupMember"><soap:operation soapAction="urn:ilUserAdministration#assignGroupMember" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="excludeGroupMember"><soap:operation soapAction="urn:ilUserAdministration#excludeGroupMember" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="isAssignedToGroup"><soap:operation soapAction="urn:ilUserAdministration#isAssignedToGroup" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="sendMail"><soap:operation soapAction="urn:ilUserAdministration#sendMail" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="saveQuestionResult"><soap:operation soapAction="urn:ilUserAdministration#saveQuestionResult" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getStructureObjects"><soap:operation soapAction="urn:ilUserAdministration#getStructureObjects" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="importUsers"><soap:operation soapAction="urn:ilUserAdministration#importUsers" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getRoles"><soap:operation soapAction="urn:ilUserAdministration#getRoles" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getUsersForContainer"><soap:operation soapAction="urn:ilUserAdministration#getUsersForContainer" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="getUsersForRole"><soap:operation soapAction="urn:ilUserAdministration#getUsersForRole" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="searchUser"><soap:operation soapAction="urn:ilUserAdministration#searchUsers" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation><operation name="hasNewMail"><soap:operation soapAction="urn:ilUserAdministration#hasNewMail" style="rpc"/><input><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input><output><soap:body use="encoded" namespace="urn:ilUserAdministration" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output></operation></binding>
<service name="ILIAS Soap Webservice">
<port name="ILIAS Soap WebservicePort" binding="tns:ILIAS Soap WebserviceBinding">
<soap:address location="http://develop.studip.de/ilias3/webservice/soap/server.php"/>
</port>
</service>
</definitions>