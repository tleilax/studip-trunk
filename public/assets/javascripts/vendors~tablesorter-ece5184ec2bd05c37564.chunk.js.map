{"version":3,"sources":["webpack:///./node_modules/tablesorter/dist/js/jquery.tablesorter.js","webpack:///./node_modules/tablesorter/dist/js/extras/jquery.tablesorter.pager.min.js","webpack:///./node_modules/tablesorter/dist/js/jquery.tablesorter.widgets.js"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","__webpack_require__","undefined","jQuery","$","ts","tablesorter","version","parsers","widgets","defaults","theme","widthFixed","showProcessing","headerTemplate","onRenderTemplate","onRenderHeader","cancelSelection","tabIndex","dateFormat","sortMultiSortKey","sortResetKey","usNumberFormat","delayInit","serverSideSorting","resort","headers","ignoreCase","sortForce","sortList","sortAppend","sortStable","sortInitialOrder","sortLocaleCompare","sortReset","sortRestart","emptyTo","stringTo","duplicateSpan","textExtraction","textAttribute","textSorter","numberSorter","initWidgets","widgetClass","widgetOptions","zebra","initialized","tableClass","cssAsc","cssDesc","cssNone","cssHeader","cssHeaderRow","cssProcessing","cssChildRow","cssInfoBlock","cssNoSort","cssIgnoreRow","cssIcon","cssIconNone","cssIconAsc","cssIconDesc","cssIconDisabled","pointerClick","pointerDown","pointerUp","selectorHeaders","selectorSort","selectorRemove","debug","headerList","empties","strings","globalize","imgAttr","css","table","cssHasChild","childRow","colgroup","header","headerRow","headerIn","icon","processing","sortAsc","sortDesc","sortNone","language","sortDisabled","nextAsc","nextDesc","nextNone","regex","templateContent","templateIcon","templateName","spaces","nonWord","formElements","chunk","chunks","hex","comma","digitNonUS","digitNegativeTest","digitNegativeReplace","digitTest","digitReplace","string","max","min","emptymin","emptymax","zero","none","null","top","bottom","keyCodes","enter","dates","instanceMethods","setup","c","tHead","tBodies","length","hasInitialized","tmp","$table","meta","metadata","isProcessing","config","data","console","group","Date","supportsDataObject","fn","jquery","split","parseInt","toLowerCase","last","clickedIndex","test","attr","namespace","replace","Math","random","toString","slice","addClass","$headers","find","children","$tbodies","aria-live","aria-relevant","id","widgetInit","buildHeaders","fixColumnWidth","addWidgetFromClass","applyWidgetOptions","setupParsers","totalRows","validateOptions","buildCache","bindEvents","bindMethods","sortlist","applyWidget","sortOn","setHeadersCss","unbind","bind","e","clearTimeout","timerProcessing","type","setTimeout","log","benchmark","groupEnd","triggerHandler","warn","error","events","join","callback","stopPropagation","this","isApplyingWidgets","updateAll","update","updateHeaders","cell","updateCell","$row","addRows","isUpdating","list","init","appendCache","isFunction","updateCache","applyWidgetId","all","dontapply","refreshWidgets","name","refreshing","removeWidget","removeClasses","destroy","extend","originalSettings","core","downTarget","getClosest","nodeName","add","filter","external","$cell","temp","$target","target","which","button","match","preventDefault","hasClass","parents","isEmptyObject","cache","index","$headerIndexed","initSort","user-select","MozUserSelect","$temp","timer","indx","headerContent","sortVars","columns","computeColumnIndex","map","elem","configHeaders","column","template","$elem","getColumnData","html","apply","getOrder","getData","count","order","lockedOrder","sortedBy","not","scope","role","updateHeader","addInstanceMethods","methods","rows","span","colIndex","noParser","parser","extractor","time","tbody","len","tbodyIndex","debugOutput","extractors","getParserById","emptyToBottom","detectParserForColumn","text","empty","colSpan","addParser","rowIndex","cellIndex","cur","$node","row","node","nodeValue","keepLooking","className","indexOf","cells","getElementText","is","extract","trim","textContent","getParsedText","txt","val","format","$tbody","cols","$cells","cacheTime","rowData","prevRowData","colMax","cacheIndex","hasParser","normalized","child","raw","prev","abs","getColumnText","rowFilter","tbodyLen","rowLen","parsed","result","hasCallback","allColumns","eq","aria","updateColumnSort","$el","removeClass","$extras","$sorted","end","i","include","col","isValueInArray","setColumnAriaLabel","selector","closest","$header","nextSort","vars","removeAttr","isDisabled","setColumnSort","updateHeaderSortCount","dir","primary","inArray","commonUpdate","resortComplete","remove","icell","tbcache","checkResort","valid","append","$curTbody","appendTime","appender","processTbody","pager","removeRows","ajax","event","arry","headerIndx","notMultiSort","th","each","splice","isArray","multisort","sortTime","sorter","sortLen","sort","a","b","sortIndex","num","x","y","getSortType","sortNatural","aNum","bNum","aFloat","bFloat","isNaN","parseFloat","sortNaturalAsc","sortNaturalDesc","sortText","getTextValue","n","charCodeAt","sortNumericAsc","sortNumericDesc","sortNumeric","addWidget","widget","getWidgetById","hasWidget","wo","options","RegExp","applied","names","timerReady","grep","priority","doAll","curWidgets","diff","getTime","arguments","obj","formatFloat","str","isDigit","$rows","j","k","l","rowSpan","firstAvailCol","matrix","matrixrow","Array","setAttribute","checkColumnCount","el","parentElement","push","overallWidth","percent","$colgroup","width","prepend","configHeader","key","cl4ss","getCell","toggle","$tb","getIt","before","detach","holdr","insertAfter","clearTableBody","characterEquivalents","A","C","E","I","o","O","ss","SS","u","U","replaceAccents","chr","acc","characterRegex","characterRegexArray","setting","setting2","typ","ignore","orig","restoreHeaders","$t","$h","$r","$f","removeData","toggleClass","settings","buildTable","window","logs","arg","date","now","toLocaleLowerCase","nondigit","currencyReplace","currencyTest","urlProtocolTest","urlProtocolReplace","dash","isoDate","isFinite","percentTest","dateReplace","usLongDateTest1","usLongDateTest2","shortDateTest","shortDateReplace","shortDateXXY","shortDateYMD","convertFormat","dateString","timeTest","timeMatch","timePart","p","parserMetadataName","$visibleRows","isEven","toRemove","exports","module","M","T","tablesorterPager","container","ajaxUrl","customAjaxUrl","t","ajaxError","ajaxObject","dataType","processAjaxOnInit","ajaxProcessing","output","updateArrows","page","pageReset","size","maxOptionSize","savePages","storageKey","fixedHeight","countChildRows","cssFirst","cssPrev","cssNext","cssLast","cssGoto","cssPageDisplay","cssPageSize","cssErrorRow","cssDisabled","totalPages","filteredRows","filteredPages","ajaxCounter","currentFilters","startRow","endRow","$size","h","s","r","g","$container","ariaDisabled","w","regexRows","initializing","d","f","ceil","N","ajaxData","floor","R","storage","prototype","concat","height","z","regexFiltered","style","display","F","P","v","m","showError","total","$sticky","clone","q","rowsCopy","disabled","S","filter_initialized","url","optAjaxUrl","initialRows","encodeURIComponent","document","success","oldAjaxSuccess","filtered","L","D","H","show","setSize","filter_filteredRow","equalFilters","lastSearch","hide","filter_serversideFiltering","construct","pager_css","errorRow","pager_ajaxError","status","statusText","click","appendTo","fixedUrl","storage_fixedUrl","storage_group","storage_page","storage_storageType","storage_tableId","storage_useSessionStorage","value","cookieIndex","cookies","hasStorage","values","storageType","charAt","session","useSessionStorage","location","pathname","setItem","removeItem","parseJSON","cookie","JSON","hasOwnProperty","stringify","setTime","toGMTString","themes","bootstrap","caption","active","hover","icons","iconSortNone","iconSortAsc","iconSortDesc","filterRow","footerRow","footerCells","even","odd","jui","wrapper","hdr","$icon","$tfoot","oldtheme","oldremove","oldIconRmv","hasOldTheme","themesAll","iconRmv","appliedTheme","uitheme_applied","$this","wrapInner","one","columns_thead","columns_tfoot","tsf","tsfRegex","tscss","tskeyCodes","filterDisabled","filterRowHide","backSpace","escape","space","left","down","filter_cellFilter","filter_childRows","filter_childByColumn","filter_childWithSibs","filter_columnAnyMatch","filter_columnFilters","filter_cssFilter","filter_defaultAttrib","filter_defaultFilter","filter_excludeFilter","filter_external","filter_filterLabel","filter_formatter","filter_functions","filter_hideEmpty","filter_hideFilters","filter_ignoreCase","filter_liveSearch","filter_matchType","input","select","filter_onlyAvail","filter_placeholder","search","filter_reset","filter_resetOnEsc","filter_saveFilters","filter_searchDelay","filter_searchFiltered","filter_selectSource","filter_selectSourceSeparator","filter_startsWith","filter_useParsedData","undelegate","exact","operators","query","wild01","wild0More","quote","isNeg1","isNeg2","types","or","orTest","iFilter","orSplit","filterMatched","data2","nestedFilters","parseFilter","isMatch","processTypes","and","andTest","andSplit","matches","filter_regexCache","exec","isRegex","operTest","iExact","cachedValue","savedSearch","gtTest","gteTest","ltTest","lteTest","notMatch","notTest","anyMatch","rowArray","range","toTest","range1","range2","toSplit","wild","wildOrTest","wildTest","fuzzy","fuzzyTest","patternIndx","pattern","to","fxn","noSelect","processStr","prefix","suffix","filter_searchTimer","filter_initTimer","filter_formatterCount","filter_formatterInit","filter_anyColumnSelector","filter_multipleColumnSelector","alreadyFiltered","iQuery","igQuery","exactTest","buildRow","buildDefault","filter_$externalFilters","searching","lastCombinedFilter","delegate","buildSelect","bindSearch","hideFilters","completeInit","filterInitComplete","filters","setDefaults","setFilters","formatterUpdated","completed","findRows","processFilters","encode","mode","decodeURIComponent","saved","$filters","getFilters","$filter","makeSelect","ffxn","cellFilter","buildFilter","getColumnElm","parent","data-column","aria-label","internal","$ext","filter_$anyMatch","liveSearch","fallback","eventType","skipFirst","checkFilters","filter1","filter2","f1","f2","filterArray","hideFiltersCheck","String","activeElement","defaultFilter","mask","maskLen","getLatestSearch","$input","findRange","ignoreRanges","ranges","start","singles","$elements","multipleColumns","targets","excludeMatch","matchedOn","matchType","columnIndex","processRow","showRow","hasAnyMatchInput","anyMatchFlag","anyMatchFilter","cacheArray","rawArray","get","iAnyMatchFilter","noAnyMatch","childRowText","excludeFilter","defaultColFilter","functions","norm_rows","showParent","notFiltered","searchFiltered","injected","res","storedFilters","defaultAnyFilter","getOptionSource","onlyAvail","source","getOptions","processOptions","cts","parsedTxt","validColumn","direction","childLen","updating","option","currentValue","getRaw","$column","trigger","getStickyOffset","stickyHeaders_offset","sticky","stickyVis","stickyHide","stickyWrap","addHeaderResizeEvent","disable","checkSizes","triggerEvent","sizes","resize_flag","offsetWidth","offsetHeight","clearInterval","resize_timer","setInterval","stickyHeaders","stickyHeaders_appendTo","stickyHeaders_attachTo","stickyHeaders_xScroll","stickyHeaders_yScroll","stickyHeaders_filteredToTop","stickyHeaders_cloneId","stickyHeaders_addResizeEvent","stickyHeaders_includeCaption","stickyHeaders_zIndex","$stickyCells","$attach","$yScroll","$xScroll","stickyOffset","$nestedSticky","nestedStickyTop","$stickyTable","wrap","$stickyWrap","position","padding","visibility","zIndex","$stickyThead","laststate","setWidth","$orig","$clone","border","outerWidth","getComputedStyle","min-width","max-width","getLeftPosition","yWindow","offset","scrollLeft","resizeHeader","scrollSticky","resizing","scrollTop","isWindow","yScroll","attachTop","captionHeight","tableHeight","isVisible","state","needsUpdating","cssSettings","margin","resizer","after","$td","scrollTo","focus","next","resizableContainer","resizableHandle","resizableNoSelect","resizableStorage","resizable","storedSizes","$parent","marginTop","resizable_vars","useStorage","$wrap","mouseXPosition","$next","overflow","resizableReset","tableWidth","fullWidth","setWidths","updateStoredSizes","$resizable_container","insertBefore","unselectable","bindings","$extra","$col","setHandlePosition","startPosition","$handles","handleCenter","scrollerWrap","resizable_includeFooter","resizable_addLastColumn","checkVisibleColumns","toggleTextSelection","shiftKey","resizable_targetLast","nextAll","pageX","resizable_throttle","mouseMove","stopResize","allowClick","tar","leftEdge","resizable_widths","thisWidget","getStoredSortList","stored","sortListChanged","saveSort"],"mappings":"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","file":"javascripts/vendors~tablesorter-ece5184ec2bd05c37564.chunk.js","sourcesContent":["(function(factory){if (typeof define === 'function' && define.amd){define(['jquery'], factory);} else if (typeof module === 'object' && typeof module.exports === 'object'){module.exports = factory(require('jquery'));} else {factory(jQuery);}}(function(jQuery){\n/*! TableSorter (FORK) v2.31.0 *//*\n* Client-side table sorting with ease!\n* @requires jQuery v1.2.6+\n*\n* Copyright (c) 2007 Christian Bach\n* fork maintained by Rob Garrison\n*\n* Examples and original docs at: http://tablesorter.com\n* Dual licensed under the MIT and GPL licenses:\n* http://www.opensource.org/licenses/mit-license.php\n* http://www.gnu.org/licenses/gpl.html\n*\n* @type jQuery\n* @name tablesorter (FORK)\n* @cat Plugins/Tablesorter\n* @author Christian Bach - christian.bach@polyester.se\n* @contributor Rob Garrison - https://github.com/Mottie/tablesorter\n* @docs (fork) - https://mottie.github.io/tablesorter/docs/\n*/\n/*jshint browser:true, jquery:true, unused:false, expr: true */\n;( function( $ ) {\n\t'use strict';\n\tvar ts = $.tablesorter = {\n\n\t\tversion : '2.31.0',\n\n\t\tparsers : [],\n\t\twidgets : [],\n\t\tdefaults : {\n\n\t\t\t// *** appearance\n\t\t\ttheme            : 'default',  // adds tablesorter-{theme} to the table for styling\n\t\t\twidthFixed       : false,      // adds colgroup to fix widths of columns\n\t\t\tshowProcessing   : false,      // show an indeterminate timer icon in the header when the table is sorted or filtered.\n\n\t\t\theaderTemplate   : '{content}',// header layout template (HTML ok); {content} = innerHTML, {icon} = <i/> // class from cssIcon\n\t\t\tonRenderTemplate : null,       // function( index, template ) { return template; }, // template is a string\n\t\t\tonRenderHeader   : null,       // function( index ) {}, // nothing to return\n\n\t\t\t// *** functionality\n\t\t\tcancelSelection  : true,       // prevent text selection in the header\n\t\t\ttabIndex         : true,       // add tabindex to header for keyboard accessibility\n\t\t\tdateFormat       : 'mmddyyyy', // other options: 'ddmmyyy' or 'yyyymmdd'\n\t\t\tsortMultiSortKey : 'shiftKey', // key used to select additional columns\n\t\t\tsortResetKey     : 'ctrlKey',  // key used to remove sorting on a column\n\t\t\tusNumberFormat   : true,       // false for German '1.234.567,89' or French '1 234 567,89'\n\t\t\tdelayInit        : false,      // if false, the parsed table contents will not update until the first sort\n\t\t\tserverSideSorting: false,      // if true, server-side sorting should be performed because client-side sorting will be disabled, but the ui and events will still be used.\n\t\t\tresort           : true,       // default setting to trigger a resort after an 'update', 'addRows', 'updateCell', etc has completed\n\n\t\t\t// *** sort options\n\t\t\theaders          : {},         // set sorter, string, empty, locked order, sortInitialOrder, filter, etc.\n\t\t\tignoreCase       : true,       // ignore case while sorting\n\t\t\tsortForce        : null,       // column(s) first sorted; always applied\n\t\t\tsortList         : [],         // Initial sort order; applied initially; updated when manually sorted\n\t\t\tsortAppend       : null,       // column(s) sorted last; always applied\n\t\t\tsortStable       : false,      // when sorting two rows with exactly the same content, the original sort order is maintained\n\n\t\t\tsortInitialOrder : 'asc',      // sort direction on first click\n\t\t\tsortLocaleCompare: false,      // replace equivalent character (accented characters)\n\t\t\tsortReset        : false,      // third click on the header will reset column to default - unsorted\n\t\t\tsortRestart      : false,      // restart sort to 'sortInitialOrder' when clicking on previously unsorted columns\n\n\t\t\temptyTo          : 'bottom',   // sort empty cell to bottom, top, none, zero, emptyMax, emptyMin\n\t\t\tstringTo         : 'max',      // sort strings in numerical column as max, min, top, bottom, zero\n\t\t\tduplicateSpan    : true,       // colspan cells in the tbody will have duplicated content in the cache for each spanned column\n\t\t\ttextExtraction   : 'basic',    // text extraction method/function - function( node, table, cellIndex ) {}\n\t\t\ttextAttribute    : 'data-text',// data-attribute that contains alternate cell text (used in default textExtraction function)\n\t\t\ttextSorter       : null,       // choose overall or specific column sorter function( a, b, direction, table, columnIndex ) [alt: ts.sortText]\n\t\t\tnumberSorter     : null,       // choose overall numeric sorter function( a, b, direction, maxColumnValue )\n\n\t\t\t// *** widget options\n\t\t\tinitWidgets      : true,       // apply widgets on tablesorter initialization\n\t\t\twidgetClass      : 'widget-{name}', // table class name template to match to include a widget\n\t\t\twidgets          : [],         // method to add widgets, e.g. widgets: ['zebra']\n\t\t\twidgetOptions    : {\n\t\t\t\tzebra : [ 'even', 'odd' ]  // zebra widget alternating row class names\n\t\t\t},\n\n\t\t\t// *** callbacks\n\t\t\tinitialized      : null,       // function( table ) {},\n\n\t\t\t// *** extra css class names\n\t\t\ttableClass       : '',\n\t\t\tcssAsc           : '',\n\t\t\tcssDesc          : '',\n\t\t\tcssNone          : '',\n\t\t\tcssHeader        : '',\n\t\t\tcssHeaderRow     : '',\n\t\t\tcssProcessing    : '', // processing icon applied to header during sort/filter\n\n\t\t\tcssChildRow      : 'tablesorter-childRow', // class name indiciating that a row is to be attached to its parent\n\t\t\tcssInfoBlock     : 'tablesorter-infoOnly', // don't sort tbody with this class name (only one class name allowed here!)\n\t\t\tcssNoSort        : 'tablesorter-noSort',   // class name added to element inside header; clicking on it won't cause a sort\n\t\t\tcssIgnoreRow     : 'tablesorter-ignoreRow',// header row to ignore; cells within this row will not be added to c.$headers\n\n\t\t\tcssIcon          : 'tablesorter-icon', // if this class does not exist, the {icon} will not be added from the headerTemplate\n\t\t\tcssIconNone      : '', // class name added to the icon when there is no column sort\n\t\t\tcssIconAsc       : '', // class name added to the icon when the column has an ascending sort\n\t\t\tcssIconDesc      : '', // class name added to the icon when the column has a descending sort\n\t\t\tcssIconDisabled  : '', // class name added to the icon when the column has a disabled sort\n\n\t\t\t// *** events\n\t\t\tpointerClick     : 'click',\n\t\t\tpointerDown      : 'mousedown',\n\t\t\tpointerUp        : 'mouseup',\n\n\t\t\t// *** selectors\n\t\t\tselectorHeaders  : '> thead th, > thead td',\n\t\t\tselectorSort     : 'th, td', // jQuery selector of content within selectorHeaders that is clickable to trigger a sort\n\t\t\tselectorRemove   : '.remove-me',\n\n\t\t\t// *** advanced\n\t\t\tdebug            : false,\n\n\t\t\t// *** Internal variables\n\t\t\theaderList: [],\n\t\t\tempties: {},\n\t\t\tstrings: {},\n\t\t\tparsers: [],\n\n\t\t\t// *** parser options for validator; values must be falsy!\n\t\t\tglobalize: 0,\n\t\t\timgAttr: 0\n\n\t\t\t// removed: widgetZebra: { css: ['even', 'odd'] }\n\n\t\t},\n\n\t\t// internal css classes - these will ALWAYS be added to\n\t\t// the table and MUST only contain one class name - fixes #381\n\t\tcss : {\n\t\t\ttable      : 'tablesorter',\n\t\t\tcssHasChild: 'tablesorter-hasChildRow',\n\t\t\tchildRow   : 'tablesorter-childRow',\n\t\t\tcolgroup   : 'tablesorter-colgroup',\n\t\t\theader     : 'tablesorter-header',\n\t\t\theaderRow  : 'tablesorter-headerRow',\n\t\t\theaderIn   : 'tablesorter-header-inner',\n\t\t\ticon       : 'tablesorter-icon',\n\t\t\tprocessing : 'tablesorter-processing',\n\t\t\tsortAsc    : 'tablesorter-headerAsc',\n\t\t\tsortDesc   : 'tablesorter-headerDesc',\n\t\t\tsortNone   : 'tablesorter-headerUnSorted'\n\t\t},\n\n\t\t// labels applied to sortable headers for accessibility (aria) support\n\t\tlanguage : {\n\t\t\tsortAsc      : 'Ascending sort applied, ',\n\t\t\tsortDesc     : 'Descending sort applied, ',\n\t\t\tsortNone     : 'No sort applied, ',\n\t\t\tsortDisabled : 'sorting is disabled',\n\t\t\tnextAsc      : 'activate to apply an ascending sort',\n\t\t\tnextDesc     : 'activate to apply a descending sort',\n\t\t\tnextNone     : 'activate to remove the sort'\n\t\t},\n\n\t\tregex : {\n\t\t\ttemplateContent : /\\{content\\}/g,\n\t\t\ttemplateIcon    : /\\{icon\\}/g,\n\t\t\ttemplateName    : /\\{name\\}/i,\n\t\t\tspaces          : /\\s+/g,\n\t\t\tnonWord         : /\\W/g,\n\t\t\tformElements    : /(input|select|button|textarea)/i,\n\n\t\t\t// *** sort functions ***\n\t\t\t// regex used in natural sort\n\t\t\t// chunk/tokenize numbers & letters\n\t\t\tchunk  : /(^([+\\-]?(?:\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?$|^0x[0-9a-f]+$|\\d+)/gi,\n\t\t\t// replace chunks @ ends\n\t\t\tchunks : /(^\\\\0|\\\\0$)/,\n\t\t\thex    : /^0x[0-9a-f]+$/i,\n\n\t\t\t// *** formatFloat ***\n\t\t\tcomma                : /,/g,\n\t\t\tdigitNonUS           : /[\\s|\\.]/g,\n\t\t\tdigitNegativeTest    : /^\\s*\\([.\\d]+\\)/,\n\t\t\tdigitNegativeReplace : /^\\s*\\(([.\\d]+)\\)/,\n\n\t\t\t// *** isDigit ***\n\t\t\tdigitTest    : /^[\\-+(]?\\d+[)]?$/,\n\t\t\tdigitReplace : /[,.'\"\\s]/g\n\n\t\t},\n\n\t\t// digit sort, text location\n\t\tstring : {\n\t\t\tmax      : 1,\n\t\t\tmin      : -1,\n\t\t\temptymin : 1,\n\t\t\temptymax : -1,\n\t\t\tzero     : 0,\n\t\t\tnone     : 0,\n\t\t\t'null'   : 0,\n\t\t\ttop      : true,\n\t\t\tbottom   : false\n\t\t},\n\n\t\tkeyCodes : {\n\t\t\tenter : 13\n\t\t},\n\n\t\t// placeholder date parser data (globalize)\n\t\tdates : {},\n\n\t\t// These methods can be applied on table.config instance\n\t\tinstanceMethods : {},\n\n\t\t/*\n\t\t▄█████ ██████ ██████ ██  ██ █████▄\n\t\t▀█▄    ██▄▄     ██   ██  ██ ██▄▄██\n\t\t   ▀█▄ ██▀▀     ██   ██  ██ ██▀▀▀\n\t\t█████▀ ██████   ██   ▀████▀ ██\n\t\t*/\n\n\t\tsetup : function( table, c ) {\n\t\t\t// if no thead or tbody, or tablesorter is already present, quit\n\t\t\tif ( !table || !table.tHead || table.tBodies.length === 0 || table.hasInitialized === true ) {\n\t\t\t\tif ( ts.debug(c, 'core') ) {\n\t\t\t\t\tif ( table.hasInitialized ) {\n\t\t\t\t\t\tconsole.warn( 'Stopping initialization. Tablesorter has already been initialized' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error( 'Stopping initialization! No table, thead or tbody', table );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tmp = '',\n\t\t\t\t$table = $( table ),\n\t\t\t\tmeta = $.metadata;\n\t\t\t// initialization flag\n\t\t\ttable.hasInitialized = false;\n\t\t\t// table is being processed flag\n\t\t\ttable.isProcessing = true;\n\t\t\t// make sure to store the config object\n\t\t\ttable.config = c;\n\t\t\t// save the settings where they read\n\t\t\t$.data( table, 'tablesorter', c );\n\t\t\tif ( ts.debug(c, 'core') ) {\n\t\t\t\tconsole[ console.group ? 'group' : 'log' ]( 'Initializing tablesorter v' + ts.version );\n\t\t\t\t$.data( table, 'startoveralltimer', new Date() );\n\t\t\t}\n\n\t\t\t// removing this in version 3 (only supports jQuery 1.7+)\n\t\t\tc.supportsDataObject = ( function( version ) {\n\t\t\t\tversion[ 0 ] = parseInt( version[ 0 ], 10 );\n\t\t\t\treturn ( version[ 0 ] > 1 ) || ( version[ 0 ] === 1 && parseInt( version[ 1 ], 10 ) >= 4 );\n\t\t\t})( $.fn.jquery.split( '.' ) );\n\t\t\t// ensure case insensitivity\n\t\t\tc.emptyTo = c.emptyTo.toLowerCase();\n\t\t\tc.stringTo = c.stringTo.toLowerCase();\n\t\t\tc.last = { sortList : [], clickedIndex : -1 };\n\t\t\t// add table theme class only if there isn't already one there\n\t\t\tif ( !/tablesorter\\-/.test( $table.attr( 'class' ) ) ) {\n\t\t\t\ttmp = ( c.theme !== '' ? ' tablesorter-' + c.theme : '' );\n\t\t\t}\n\n\t\t\t// give the table a unique id, which will be used in namespace binding\n\t\t\tif ( !c.namespace ) {\n\t\t\t\tc.namespace = '.tablesorter' + Math.random().toString( 16 ).slice( 2 );\n\t\t\t} else {\n\t\t\t\t// make sure namespace starts with a period & doesn't have weird characters\n\t\t\t\tc.namespace = '.' + c.namespace.replace( ts.regex.nonWord, '' );\n\t\t\t}\n\n\t\t\tc.table = table;\n\t\t\tc.$table = $table\n\t\t\t\t// add namespace to table to allow bindings on extra elements to target\n\t\t\t\t// the parent table (e.g. parser-input-select)\n\t\t\t\t.addClass( ts.css.table + ' ' + c.tableClass + tmp + ' ' + c.namespace.slice(1) )\n\t\t\t\t.attr( 'role', 'grid' );\n\t\t\tc.$headers = $table.find( c.selectorHeaders );\n\n\t\t\tc.$table.children().children( 'tr' ).attr( 'role', 'row' );\n\t\t\tc.$tbodies = $table.children( 'tbody:not(.' + c.cssInfoBlock + ')' ).attr({\n\t\t\t\t'aria-live' : 'polite',\n\t\t\t\t'aria-relevant' : 'all'\n\t\t\t});\n\t\t\tif ( c.$table.children( 'caption' ).length ) {\n\t\t\t\ttmp = c.$table.children( 'caption' )[ 0 ];\n\t\t\t\tif ( !tmp.id ) { tmp.id = c.namespace.slice( 1 ) + 'caption'; }\n\t\t\t\tc.$table.attr( 'aria-labelledby', tmp.id );\n\t\t\t}\n\t\t\tc.widgetInit = {}; // keep a list of initialized widgets\n\t\t\t// change textExtraction via data-attribute\n\t\t\tc.textExtraction = c.$table.attr( 'data-text-extraction' ) || c.textExtraction || 'basic';\n\t\t\t// build headers\n\t\t\tts.buildHeaders( c );\n\t\t\t// fixate columns if the users supplies the fixedWidth option\n\t\t\t// do this after theme has been applied\n\t\t\tts.fixColumnWidth( table );\n\t\t\t// add widgets from class name\n\t\t\tts.addWidgetFromClass( table );\n\t\t\t// add widget options before parsing (e.g. grouping widget has parser settings)\n\t\t\tts.applyWidgetOptions( table );\n\t\t\t// try to auto detect column type, and store in tables config\n\t\t\tts.setupParsers( c );\n\t\t\t// start total row count at zero\n\t\t\tc.totalRows = 0;\n\t\t\t// only validate options while debugging. See #1528\n\t\t\tif (c.debug) {\n\t\t\t\tts.validateOptions( c );\n\t\t\t}\n\t\t\t// build the cache for the tbody cells\n\t\t\t// delayInit will delay building the cache until the user starts a sort\n\t\t\tif ( !c.delayInit ) { ts.buildCache( c ); }\n\t\t\t// bind all header events and methods\n\t\t\tts.bindEvents( table, c.$headers, true );\n\t\t\tts.bindMethods( c );\n\t\t\t// get sort list from jQuery data or metadata\n\t\t\t// in jQuery < 1.4, an error occurs when calling $table.data()\n\t\t\tif ( c.supportsDataObject && typeof $table.data().sortlist !== 'undefined' ) {\n\t\t\t\tc.sortList = $table.data().sortlist;\n\t\t\t} else if ( meta && ( $table.metadata() && $table.metadata().sortlist ) ) {\n\t\t\t\tc.sortList = $table.metadata().sortlist;\n\t\t\t}\n\t\t\t// apply widget init code\n\t\t\tts.applyWidget( table, true );\n\t\t\t// if user has supplied a sort list to constructor\n\t\t\tif ( c.sortList.length > 0 ) {\n\t\t\t\tts.sortOn( c, c.sortList, {}, !c.initWidgets );\n\t\t\t} else {\n\t\t\t\tts.setHeadersCss( c );\n\t\t\t\tif ( c.initWidgets ) {\n\t\t\t\t\t// apply widget format\n\t\t\t\t\tts.applyWidget( table, false );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// show processesing icon\n\t\t\tif ( c.showProcessing ) {\n\t\t\t\t$table\n\t\t\t\t.unbind( 'sortBegin' + c.namespace + ' sortEnd' + c.namespace )\n\t\t\t\t.bind( 'sortBegin' + c.namespace + ' sortEnd' + c.namespace, function( e ) {\n\t\t\t\t\tclearTimeout( c.timerProcessing );\n\t\t\t\t\tts.isProcessing( table );\n\t\t\t\t\tif ( e.type === 'sortBegin' ) {\n\t\t\t\t\t\tc.timerProcessing = setTimeout( function() {\n\t\t\t\t\t\t\tts.isProcessing( table, true );\n\t\t\t\t\t\t}, 500 );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// initialized\n\t\t\ttable.hasInitialized = true;\n\t\t\ttable.isProcessing = false;\n\t\t\tif ( ts.debug(c, 'core') ) {\n\t\t\t\tconsole.log( 'Overall initialization time:' + ts.benchmark( $.data( table, 'startoveralltimer' ) ) );\n\t\t\t\tif ( ts.debug(c, 'core') && console.groupEnd ) { console.groupEnd(); }\n\t\t\t}\n\t\t\t$table.triggerHandler( 'tablesorter-initialized', table );\n\t\t\tif ( typeof c.initialized === 'function' ) {\n\t\t\t\tc.initialized( table );\n\t\t\t}\n\t\t},\n\n\t\tbindMethods : function( c ) {\n\t\t\tvar $table = c.$table,\n\t\t\t\tnamespace = c.namespace,\n\t\t\t\tevents = ( 'sortReset update updateRows updateAll updateHeaders addRows updateCell updateComplete ' +\n\t\t\t\t\t'sorton appendCache updateCache applyWidgetId applyWidgets refreshWidgets destroy mouseup ' +\n\t\t\t\t\t'mouseleave ' ).split( ' ' )\n\t\t\t\t\t.join( namespace + ' ' );\n\t\t\t// apply easy methods that trigger bound events\n\t\t\t$table\n\t\t\t.unbind( events.replace( ts.regex.spaces, ' ' ) )\n\t\t\t.bind( 'sortReset' + namespace, function( e, callback ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\t// using this.config to ensure functions are getting a non-cached version of the config\n\t\t\t\tts.sortReset( this.config, function( table ) {\n\t\t\t\t\tif (table.isApplyingWidgets) {\n\t\t\t\t\t\t// multiple triggers in a row... filterReset, then sortReset - see #1361\n\t\t\t\t\t\t// wait to update widgets\n\t\t\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t\t\tts.applyWidget( table, '', callback );\n\t\t\t\t\t\t}, 100 );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tts.applyWidget( table, '', callback );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t\t.bind( 'updateAll' + namespace, function( e, resort, callback ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tts.updateAll( this.config, resort, callback );\n\t\t\t})\n\t\t\t.bind( 'update' + namespace + ' updateRows' + namespace, function( e, resort, callback ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tts.update( this.config, resort, callback );\n\t\t\t})\n\t\t\t.bind( 'updateHeaders' + namespace, function( e, callback ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tts.updateHeaders( this.config, callback );\n\t\t\t})\n\t\t\t.bind( 'updateCell' + namespace, function( e, cell, resort, callback ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tts.updateCell( this.config, cell, resort, callback );\n\t\t\t})\n\t\t\t.bind( 'addRows' + namespace, function( e, $row, resort, callback ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tts.addRows( this.config, $row, resort, callback );\n\t\t\t})\n\t\t\t.bind( 'updateComplete' + namespace, function() {\n\t\t\t\tthis.isUpdating = false;\n\t\t\t})\n\t\t\t.bind( 'sorton' + namespace, function( e, list, callback, init ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tts.sortOn( this.config, list, callback, init );\n\t\t\t})\n\t\t\t.bind( 'appendCache' + namespace, function( e, callback, init ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tts.appendCache( this.config, init );\n\t\t\t\tif ( $.isFunction( callback ) ) {\n\t\t\t\t\tcallback( this );\n\t\t\t\t}\n\t\t\t})\n\t\t\t// $tbodies variable is used by the tbody sorting widget\n\t\t\t.bind( 'updateCache' + namespace, function( e, callback, $tbodies ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tts.updateCache( this.config, callback, $tbodies );\n\t\t\t})\n\t\t\t.bind( 'applyWidgetId' + namespace, function( e, id ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tts.applyWidgetId( this, id );\n\t\t\t})\n\t\t\t.bind( 'applyWidgets' + namespace, function( e, callback ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\t// apply widgets (false = not initializing)\n\t\t\t\tts.applyWidget( this, false, callback );\n\t\t\t})\n\t\t\t.bind( 'refreshWidgets' + namespace, function( e, all, dontapply ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tts.refreshWidgets( this, all, dontapply );\n\t\t\t})\n\t\t\t.bind( 'removeWidget' + namespace, function( e, name, refreshing ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tts.removeWidget( this, name, refreshing );\n\t\t\t})\n\t\t\t.bind( 'destroy' + namespace, function( e, removeClasses, callback ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tts.destroy( this, removeClasses, callback );\n\t\t\t})\n\t\t\t.bind( 'resetToLoadState' + namespace, function( e ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\t// remove all widgets\n\t\t\t\tts.removeWidget( this, true, false );\n\t\t\t\tvar tmp = $.extend( true, {}, c.originalSettings );\n\t\t\t\t// restore original settings; this clears out current settings, but does not clear\n\t\t\t\t// values saved to storage.\n\t\t\t\tc = $.extend( true, {}, ts.defaults, tmp );\n\t\t\t\tc.originalSettings = tmp;\n\t\t\t\tthis.hasInitialized = false;\n\t\t\t\t// setup the entire table again\n\t\t\t\tts.setup( this, c );\n\t\t\t});\n\t\t},\n\n\t\tbindEvents : function( table, $headers, core ) {\n\t\t\ttable = $( table )[ 0 ];\n\t\t\tvar tmp,\n\t\t\t\tc = table.config,\n\t\t\t\tnamespace = c.namespace,\n\t\t\t\tdownTarget = null;\n\t\t\tif ( core !== true ) {\n\t\t\t\t$headers.addClass( namespace.slice( 1 ) + '_extra_headers' );\n\t\t\t\ttmp = ts.getClosest( $headers, 'table' );\n\t\t\t\tif ( tmp.length && tmp[ 0 ].nodeName === 'TABLE' && tmp[ 0 ] !== table ) {\n\t\t\t\t\t$( tmp[ 0 ] ).addClass( namespace.slice( 1 ) + '_extra_table' );\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = ( c.pointerDown + ' ' + c.pointerUp + ' ' + c.pointerClick + ' sort keyup ' )\n\t\t\t\t.replace( ts.regex.spaces, ' ' )\n\t\t\t\t.split( ' ' )\n\t\t\t\t.join( namespace + ' ' );\n\t\t\t// apply event handling to headers and/or additional headers (stickyheaders, scroller, etc)\n\t\t\t$headers\n\t\t\t// http://stackoverflow.com/questions/5312849/jquery-find-self;\n\t\t\t.find( c.selectorSort )\n\t\t\t.add( $headers.filter( c.selectorSort ) )\n\t\t\t.unbind( tmp )\n\t\t\t.bind( tmp, function( e, external ) {\n\t\t\t\tvar $cell, cell, temp,\n\t\t\t\t\t$target = $( e.target ),\n\t\t\t\t\t// wrap event type in spaces, so the match doesn't trigger on inner words\n\t\t\t\t\ttype = ' ' + e.type + ' ';\n\t\t\t\t// only recognize left clicks\n\t\t\t\tif ( ( ( e.which || e.button ) !== 1 && !type.match( ' ' + c.pointerClick + ' | sort | keyup ' ) ) ||\n\t\t\t\t\t// allow pressing enter\n\t\t\t\t\t( type === ' keyup ' && e.which !== ts.keyCodes.enter ) ||\n\t\t\t\t\t// allow triggering a click event (e.which is undefined) & ignore physical clicks\n\t\t\t\t\t( type.match( ' ' + c.pointerClick + ' ' ) && typeof e.which !== 'undefined' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// ignore mouseup if mousedown wasn't on the same target\n\t\t\t\tif ( type.match( ' ' + c.pointerUp + ' ' ) && downTarget !== e.target && external !== true ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// set target on mousedown\n\t\t\t\tif ( type.match( ' ' + c.pointerDown + ' ' ) ) {\n\t\t\t\t\tdownTarget = e.target;\n\t\t\t\t\t// preventDefault needed or jQuery v1.3.2 and older throws an\n\t\t\t\t\t// \"Uncaught TypeError: handler.apply is not a function\" error\n\t\t\t\t\ttemp = $target.jquery.split( '.' );\n\t\t\t\t\tif ( temp[ 0 ] === '1' && temp[ 1 ] < 4 ) { e.preventDefault(); }\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdownTarget = null;\n\t\t\t\t$cell = ts.getClosest( $( this ), '.' + ts.css.header );\n\t\t\t\t// prevent sort being triggered on form elements\n\t\t\t\tif ( ts.regex.formElements.test( e.target.nodeName ) ||\n\t\t\t\t\t// nosort class name, or elements within a nosort container\n\t\t\t\t\t$target.hasClass( c.cssNoSort ) || $target.parents( '.' + c.cssNoSort ).length > 0 ||\n\t\t\t\t\t// disabled cell directly clicked\n\t\t\t\t\t$cell.hasClass( 'sorter-false' ) ||\n\t\t\t\t\t// elements within a button\n\t\t\t\t\t$target.parents( 'button' ).length > 0 ) {\n\t\t\t\t\treturn !c.cancelSelection;\n\t\t\t\t}\n\t\t\t\tif ( c.delayInit && ts.isEmptyObject( c.cache ) ) {\n\t\t\t\t\tts.buildCache( c );\n\t\t\t\t}\n\t\t\t\t// use column index from data-attribute or index of current row; fixes #1116\n\t\t\t\tc.last.clickedIndex = $cell.attr( 'data-column' ) || $cell.index();\n\t\t\t\tcell = c.$headerIndexed[ c.last.clickedIndex ][0];\n\t\t\t\tif ( cell && !cell.sortDisabled ) {\n\t\t\t\t\tts.initSort( c, cell, e );\n\t\t\t\t}\n\t\t\t});\n\t\t\tif ( c.cancelSelection ) {\n\t\t\t\t// cancel selection\n\t\t\t\t$headers\n\t\t\t\t\t.attr( 'unselectable', 'on' )\n\t\t\t\t\t.bind( 'selectstart', false )\n\t\t\t\t\t.css({\n\t\t\t\t\t\t'user-select' : 'none',\n\t\t\t\t\t\t'MozUserSelect' : 'none' // not needed for jQuery 1.8+\n\t\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tbuildHeaders : function( c ) {\n\t\t\tvar $temp, icon, timer, indx;\n\t\t\tc.headerList = [];\n\t\t\tc.headerContent = [];\n\t\t\tc.sortVars = [];\n\t\t\tif ( ts.debug(c, 'core') ) {\n\t\t\t\ttimer = new Date();\n\t\t\t}\n\t\t\t// children tr in tfoot - see issue #196 & #547\n\t\t\t// don't pass table.config to computeColumnIndex here - widgets (math) pass it to \"quickly\" index tbody cells\n\t\t\tc.columns = ts.computeColumnIndex( c.$table.children( 'thead, tfoot' ).children( 'tr' ) );\n\t\t\t// add icon if cssIcon option exists\n\t\t\ticon = c.cssIcon ?\n\t\t\t\t'<i class=\"' + ( c.cssIcon === ts.css.icon ? ts.css.icon : c.cssIcon + ' ' + ts.css.icon ) + '\"></i>' :\n\t\t\t\t'';\n\t\t\t// redefine c.$headers here in case of an updateAll that replaces or adds an entire header cell - see #683\n\t\t\tc.$headers = $( $.map( c.$table.find( c.selectorHeaders ), function( elem, index ) {\n\t\t\t\tvar configHeaders, header, column, template, tmp,\n\t\t\t\t\t$elem = $( elem );\n\t\t\t\t// ignore cell (don't add it to c.$headers) if row has ignoreRow class\n\t\t\t\tif ( ts.getClosest( $elem, 'tr' ).hasClass( c.cssIgnoreRow ) ) { return; }\n\t\t\t\t// transfer data-column to element if not th/td - #1459\n\t\t\t\tif ( !/(th|td)/i.test( elem.nodeName ) ) {\n\t\t\t\t\ttmp = ts.getClosest( $elem, 'th, td' );\n\t\t\t\t\t$elem.attr( 'data-column', tmp.attr( 'data-column' ) );\n\t\t\t\t}\n\t\t\t\t// make sure to get header cell & not column indexed cell\n\t\t\t\tconfigHeaders = ts.getColumnData( c.table, c.headers, index, true );\n\t\t\t\t// save original header content\n\t\t\t\tc.headerContent[ index ] = $elem.html();\n\t\t\t\t// if headerTemplate is empty, don't reformat the header cell\n\t\t\t\tif ( c.headerTemplate !== '' && !$elem.find( '.' + ts.css.headerIn ).length ) {\n\t\t\t\t\t// set up header template\n\t\t\t\t\ttemplate = c.headerTemplate\n\t\t\t\t\t\t.replace( ts.regex.templateContent, $elem.html() )\n\t\t\t\t\t\t.replace( ts.regex.templateIcon, $elem.find( '.' + ts.css.icon ).length ? '' : icon );\n\t\t\t\t\tif ( c.onRenderTemplate ) {\n\t\t\t\t\t\theader = c.onRenderTemplate.apply( $elem, [ index, template ] );\n\t\t\t\t\t\t// only change t if something is returned\n\t\t\t\t\t\tif ( header && typeof header === 'string' ) {\n\t\t\t\t\t\t\ttemplate = header;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$elem.html( '<div class=\"' + ts.css.headerIn + '\">' + template + '</div>' ); // faster than wrapInner\n\t\t\t\t}\n\t\t\t\tif ( c.onRenderHeader ) {\n\t\t\t\t\tc.onRenderHeader.apply( $elem, [ index, c, c.$table ] );\n\t\t\t\t}\n\t\t\t\tcolumn = parseInt( $elem.attr( 'data-column' ), 10 );\n\t\t\t\telem.column = column;\n\t\t\t\ttmp = ts.getOrder( ts.getData( $elem, configHeaders, 'sortInitialOrder' ) || c.sortInitialOrder );\n\t\t\t\t// this may get updated numerous times if there are multiple rows\n\t\t\t\tc.sortVars[ column ] = {\n\t\t\t\t\tcount : -1, // set to -1 because clicking on the header automatically adds one\n\t\t\t\t\torder : tmp ?\n\t\t\t\t\t\t( c.sortReset ? [ 1, 0, 2 ] : [ 1, 0 ] ) : // desc, asc, unsorted\n\t\t\t\t\t\t( c.sortReset ? [ 0, 1, 2 ] : [ 0, 1 ] ),  // asc, desc, unsorted\n\t\t\t\t\tlockedOrder : false,\n\t\t\t\t\tsortedBy : ''\n\t\t\t\t};\n\t\t\t\ttmp = ts.getData( $elem, configHeaders, 'lockedOrder' ) || false;\n\t\t\t\tif ( typeof tmp !== 'undefined' && tmp !== false ) {\n\t\t\t\t\tc.sortVars[ column ].lockedOrder = true;\n\t\t\t\t\tc.sortVars[ column ].order = ts.getOrder( tmp ) ? [ 1, 1 ] : [ 0, 0 ];\n\t\t\t\t}\n\t\t\t\t// add cell to headerList\n\t\t\t\tc.headerList[ index ] = elem;\n\t\t\t\t$elem.addClass( ts.css.header + ' ' + c.cssHeader );\n\t\t\t\t// add to parent in case there are multiple rows\n\t\t\t\tts.getClosest( $elem, 'tr' )\n\t\t\t\t\t.addClass( ts.css.headerRow + ' ' + c.cssHeaderRow )\n\t\t\t\t\t.attr( 'role', 'row' );\n\t\t\t\t// allow keyboard cursor to focus on element\n\t\t\t\tif ( c.tabIndex ) {\n\t\t\t\t\t$elem.attr( 'tabindex', 0 );\n\t\t\t\t}\n\t\t\t\treturn elem;\n\t\t\t}) );\n\t\t\t// cache headers per column\n\t\t\tc.$headerIndexed = [];\n\t\t\tfor ( indx = 0; indx < c.columns; indx++ ) {\n\t\t\t\t// colspan in header making a column undefined\n\t\t\t\tif ( ts.isEmptyObject( c.sortVars[ indx ] ) ) {\n\t\t\t\t\tc.sortVars[ indx ] = {};\n\t\t\t\t}\n\t\t\t\t// Use c.$headers.parent() in case selectorHeaders doesn't point to the th/td\n\t\t\t\t$temp = c.$headers.filter( '[data-column=\"' + indx + '\"]' );\n\t\t\t\t// target sortable column cells, unless there are none, then use non-sortable cells\n\t\t\t\t// .last() added in jQuery 1.4; use .filter(':last') to maintain compatibility with jQuery v1.2.6\n\t\t\t\tc.$headerIndexed[ indx ] = $temp.length ?\n\t\t\t\t\t$temp.not( '.sorter-false' ).length ?\n\t\t\t\t\t\t$temp.not( '.sorter-false' ).filter( ':last' ) :\n\t\t\t\t\t\t$temp.filter( ':last' ) :\n\t\t\t\t\t$();\n\t\t\t}\n\t\t\tc.$table.find( c.selectorHeaders ).attr({\n\t\t\t\tscope: 'col',\n\t\t\t\trole : 'columnheader'\n\t\t\t});\n\t\t\t// enable/disable sorting\n\t\t\tts.updateHeader( c );\n\t\t\tif ( ts.debug(c, 'core') ) {\n\t\t\t\tconsole.log( 'Built headers:' + ts.benchmark( timer ) );\n\t\t\t\tconsole.log( c.$headers );\n\t\t\t}\n\t\t},\n\n\t\t// Use it to add a set of methods to table.config which will be available for all tables.\n\t\t// This should be done before table initialization\n\t\taddInstanceMethods : function( methods ) {\n\t\t\t$.extend( ts.instanceMethods, methods );\n\t\t},\n\n\t\t/*\n\t\t█████▄ ▄████▄ █████▄ ▄█████ ██████ █████▄ ▄█████\n\t\t██▄▄██ ██▄▄██ ██▄▄██ ▀█▄    ██▄▄   ██▄▄██ ▀█▄\n\t\t██▀▀▀  ██▀▀██ ██▀██     ▀█▄ ██▀▀   ██▀██     ▀█▄\n\t\t██     ██  ██ ██  ██ █████▀ ██████ ██  ██ █████▀\n\t\t*/\n\t\tsetupParsers : function( c, $tbodies ) {\n\t\t\tvar rows, list, span, max, colIndex, indx, header, configHeaders,\n\t\t\t\tnoParser, parser, extractor, time, tbody, len,\n\t\t\t\ttable = c.table,\n\t\t\t\ttbodyIndex = 0,\n\t\t\t\tdebug = ts.debug(c, 'core'),\n\t\t\t\tdebugOutput = {};\n\t\t\t// update table bodies in case we start with an empty table\n\t\t\tc.$tbodies = c.$table.children( 'tbody:not(.' + c.cssInfoBlock + ')' );\n\t\t\ttbody = typeof $tbodies === 'undefined' ? c.$tbodies : $tbodies;\n\t\t\tlen = tbody.length;\n\t\t\tif ( len === 0 ) {\n\t\t\t\treturn debug ? console.warn( 'Warning: *Empty table!* Not building a parser cache' ) : '';\n\t\t\t} else if ( debug ) {\n\t\t\t\ttime = new Date();\n\t\t\t\tconsole[ console.group ? 'group' : 'log' ]( 'Detecting parsers for each column' );\n\t\t\t}\n\t\t\tlist = {\n\t\t\t\textractors: [],\n\t\t\t\tparsers: []\n\t\t\t};\n\t\t\twhile ( tbodyIndex < len ) {\n\t\t\t\trows = tbody[ tbodyIndex ].rows;\n\t\t\t\tif ( rows.length ) {\n\t\t\t\t\tcolIndex = 0;\n\t\t\t\t\tmax = c.columns;\n\t\t\t\t\tfor ( indx = 0; indx < max; indx++ ) {\n\t\t\t\t\t\theader = c.$headerIndexed[ colIndex ];\n\t\t\t\t\t\tif ( header && header.length ) {\n\t\t\t\t\t\t\t// get column indexed table cell; adding true parameter fixes #1362 but\n\t\t\t\t\t\t\t// it would break backwards compatibility...\n\t\t\t\t\t\t\tconfigHeaders = ts.getColumnData( table, c.headers, colIndex ); // , true );\n\t\t\t\t\t\t\t// get column parser/extractor\n\t\t\t\t\t\t\textractor = ts.getParserById( ts.getData( header, configHeaders, 'extractor' ) );\n\t\t\t\t\t\t\tparser = ts.getParserById( ts.getData( header, configHeaders, 'sorter' ) );\n\t\t\t\t\t\t\tnoParser = ts.getData( header, configHeaders, 'parser' ) === 'false';\n\t\t\t\t\t\t\t// empty cells behaviour - keeping emptyToBottom for backwards compatibility\n\t\t\t\t\t\t\tc.empties[colIndex] = (\n\t\t\t\t\t\t\t\tts.getData( header, configHeaders, 'empty' ) ||\n\t\t\t\t\t\t\t\tc.emptyTo || ( c.emptyToBottom ? 'bottom' : 'top' ) ).toLowerCase();\n\t\t\t\t\t\t\t// text strings behaviour in numerical sorts\n\t\t\t\t\t\t\tc.strings[colIndex] = (\n\t\t\t\t\t\t\t\tts.getData( header, configHeaders, 'string' ) ||\n\t\t\t\t\t\t\t\tc.stringTo ||\n\t\t\t\t\t\t\t\t'max' ).toLowerCase();\n\t\t\t\t\t\t\tif ( noParser ) {\n\t\t\t\t\t\t\t\tparser = ts.getParserById( 'no-parser' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( !extractor ) {\n\t\t\t\t\t\t\t\t// For now, maybe detect someday\n\t\t\t\t\t\t\t\textractor = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( !parser ) {\n\t\t\t\t\t\t\t\tparser = ts.detectParserForColumn( c, rows, -1, colIndex );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( debug ) {\n\t\t\t\t\t\t\t\tdebugOutput[ '(' + colIndex + ') ' + header.text() ] = {\n\t\t\t\t\t\t\t\t\tparser : parser.id,\n\t\t\t\t\t\t\t\t\textractor : extractor ? extractor.id : 'none',\n\t\t\t\t\t\t\t\t\tstring : c.strings[ colIndex ],\n\t\t\t\t\t\t\t\t\tempty  : c.empties[ colIndex ]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlist.parsers[ colIndex ] = parser;\n\t\t\t\t\t\t\tlist.extractors[ colIndex ] = extractor;\n\t\t\t\t\t\t\tspan = header[ 0 ].colSpan - 1;\n\t\t\t\t\t\t\tif ( span > 0 ) {\n\t\t\t\t\t\t\t\tcolIndex += span;\n\t\t\t\t\t\t\t\tmax += span;\n\t\t\t\t\t\t\t\twhile ( span + 1 > 0 ) {\n\t\t\t\t\t\t\t\t\t// set colspan columns to use the same parsers & extractors\n\t\t\t\t\t\t\t\t\tlist.parsers[ colIndex - span ] = parser;\n\t\t\t\t\t\t\t\t\tlist.extractors[ colIndex - span ] = extractor;\n\t\t\t\t\t\t\t\t\tspan--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttbodyIndex += ( list.parsers.length ) ? len : 1;\n\t\t\t}\n\t\t\tif ( debug ) {\n\t\t\t\tif ( !ts.isEmptyObject( debugOutput ) ) {\n\t\t\t\t\tconsole[ console.table ? 'table' : 'log' ]( debugOutput );\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn( '  No parsers detected!' );\n\t\t\t\t}\n\t\t\t\tconsole.log( 'Completed detecting parsers' + ts.benchmark( time ) );\n\t\t\t\tif ( console.groupEnd ) { console.groupEnd(); }\n\t\t\t}\n\t\t\tc.parsers = list.parsers;\n\t\t\tc.extractors = list.extractors;\n\t\t},\n\n\t\taddParser : function( parser ) {\n\t\t\tvar indx,\n\t\t\t\tlen = ts.parsers.length,\n\t\t\t\tadd = true;\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\tif ( ts.parsers[ indx ].id.toLowerCase() === parser.id.toLowerCase() ) {\n\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( add ) {\n\t\t\t\tts.parsers[ ts.parsers.length ] = parser;\n\t\t\t}\n\t\t},\n\n\t\tgetParserById : function( name ) {\n\t\t\t/*jshint eqeqeq:false */ // eslint-disable-next-line eqeqeq\n\t\t\tif ( name == 'false' ) { return false; }\n\t\t\tvar indx,\n\t\t\t\tlen = ts.parsers.length;\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\tif ( ts.parsers[ indx ].id.toLowerCase() === ( name.toString() ).toLowerCase() ) {\n\t\t\t\t\treturn ts.parsers[ indx ];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tdetectParserForColumn : function( c, rows, rowIndex, cellIndex ) {\n\t\t\tvar cur, $node, row,\n\t\t\t\tindx = ts.parsers.length,\n\t\t\t\tnode = false,\n\t\t\t\tnodeValue = '',\n\t\t\t\tdebug = ts.debug(c, 'core'),\n\t\t\t\tkeepLooking = true;\n\t\t\twhile ( nodeValue === '' && keepLooking ) {\n\t\t\t\trowIndex++;\n\t\t\t\trow = rows[ rowIndex ];\n\t\t\t\t// stop looking after 50 empty rows\n\t\t\t\tif ( row && rowIndex < 50 ) {\n\t\t\t\t\tif ( row.className.indexOf( ts.cssIgnoreRow ) < 0 ) {\n\t\t\t\t\t\tnode = rows[ rowIndex ].cells[ cellIndex ];\n\t\t\t\t\t\tnodeValue = ts.getElementText( c, node, cellIndex );\n\t\t\t\t\t\t$node = $( node );\n\t\t\t\t\t\tif ( debug ) {\n\t\t\t\t\t\t\tconsole.log( 'Checking if value was empty on row ' + rowIndex + ', column: ' +\n\t\t\t\t\t\t\t\tcellIndex + ': \"' + nodeValue + '\"' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tkeepLooking = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile ( --indx >= 0 ) {\n\t\t\t\tcur = ts.parsers[ indx ];\n\t\t\t\t// ignore the default text parser because it will always be true\n\t\t\t\tif ( cur && cur.id !== 'text' && cur.is && cur.is( nodeValue, c.table, node, $node ) ) {\n\t\t\t\t\treturn cur;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// nothing found, return the generic parser (text)\n\t\t\treturn ts.getParserById( 'text' );\n\t\t},\n\n\t\tgetElementText : function( c, node, cellIndex ) {\n\t\t\tif ( !node ) { return ''; }\n\t\t\tvar tmp,\n\t\t\t\textract = c.textExtraction || '',\n\t\t\t\t// node could be a jquery object\n\t\t\t\t// http://jsperf.com/jquery-vs-instanceof-jquery/2\n\t\t\t\t$node = node.jquery ? node : $( node );\n\t\t\tif ( typeof extract === 'string' ) {\n\t\t\t\t// check data-attribute first when set to 'basic'; don't use node.innerText - it's really slow!\n\t\t\t\t// http://www.kellegous.com/j/2013/02/27/innertext-vs-textcontent/\n\t\t\t\tif ( extract === 'basic' && typeof ( tmp = $node.attr( c.textAttribute ) ) !== 'undefined' ) {\n\t\t\t\t\treturn $.trim( tmp );\n\t\t\t\t}\n\t\t\t\treturn $.trim( node.textContent || $node.text() );\n\t\t\t} else {\n\t\t\t\tif ( typeof extract === 'function' ) {\n\t\t\t\t\treturn $.trim( extract( $node[ 0 ], c.table, cellIndex ) );\n\t\t\t\t} else if ( typeof ( tmp = ts.getColumnData( c.table, extract, cellIndex ) ) === 'function' ) {\n\t\t\t\t\treturn $.trim( tmp( $node[ 0 ], c.table, cellIndex ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// fallback\n\t\t\treturn $.trim( $node[ 0 ].textContent || $node.text() );\n\t\t},\n\n\t\t// centralized function to extract/parse cell contents\n\t\tgetParsedText : function( c, cell, colIndex, txt ) {\n\t\t\tif ( typeof txt === 'undefined' ) {\n\t\t\t\ttxt = ts.getElementText( c, cell, colIndex );\n\t\t\t}\n\t\t\t// if no parser, make sure to return the txt\n\t\t\tvar val = '' + txt,\n\t\t\t\tparser = c.parsers[ colIndex ],\n\t\t\t\textractor = c.extractors[ colIndex ];\n\t\t\tif ( parser ) {\n\t\t\t\t// do extract before parsing, if there is one\n\t\t\t\tif ( extractor && typeof extractor.format === 'function' ) {\n\t\t\t\t\ttxt = extractor.format( txt, c.table, cell, colIndex );\n\t\t\t\t}\n\t\t\t\t// allow parsing if the string is empty, previously parsing would change it to zero,\n\t\t\t\t// in case the parser needs to extract data from the table cell attributes\n\t\t\t\tval = parser.id === 'no-parser' ? '' :\n\t\t\t\t\t// make sure txt is a string (extractor may have converted it)\n\t\t\t\t\tparser.format( '' + txt, c.table, cell, colIndex );\n\t\t\t\tif ( c.ignoreCase && typeof val === 'string' ) {\n\t\t\t\t\tval = val.toLowerCase();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn val;\n\t\t},\n\n\t\t/*\n\t\t▄████▄ ▄████▄ ▄████▄ ██  ██ ██████\n\t\t██  ▀▀ ██▄▄██ ██  ▀▀ ██▄▄██ ██▄▄\n\t\t██  ▄▄ ██▀▀██ ██  ▄▄ ██▀▀██ ██▀▀\n\t\t▀████▀ ██  ██ ▀████▀ ██  ██ ██████\n\t\t*/\n\t\tbuildCache : function( c, callback, $tbodies ) {\n\t\t\tvar cache, val, txt, rowIndex, colIndex, tbodyIndex, $tbody, $row,\n\t\t\t\tcols, $cells, cell, cacheTime, totalRows, rowData, prevRowData,\n\t\t\t\tcolMax, span, cacheIndex, hasParser, max, len, index,\n\t\t\t\ttable = c.table,\n\t\t\t\tparsers = c.parsers,\n\t\t\t\tdebug = ts.debug(c, 'core');\n\t\t\t// update tbody variable\n\t\t\tc.$tbodies = c.$table.children( 'tbody:not(.' + c.cssInfoBlock + ')' );\n\t\t\t$tbody = typeof $tbodies === 'undefined' ? c.$tbodies : $tbodies,\n\t\t\tc.cache = {};\n\t\t\tc.totalRows = 0;\n\t\t\t// if no parsers found, return - it's an empty table.\n\t\t\tif ( !parsers ) {\n\t\t\t\treturn debug ? console.warn( 'Warning: *Empty table!* Not building a cache' ) : '';\n\t\t\t}\n\t\t\tif ( debug ) {\n\t\t\t\tcacheTime = new Date();\n\t\t\t}\n\t\t\t// processing icon\n\t\t\tif ( c.showProcessing ) {\n\t\t\t\tts.isProcessing( table, true );\n\t\t\t}\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < $tbody.length; tbodyIndex++ ) {\n\t\t\t\tcolMax = []; // column max value per tbody\n\t\t\t\tcache = c.cache[ tbodyIndex ] = {\n\t\t\t\t\tnormalized: [] // array of normalized row data; last entry contains 'rowData' above\n\t\t\t\t\t// colMax: #   // added at the end\n\t\t\t\t};\n\n\t\t\t\ttotalRows = ( $tbody[ tbodyIndex ] && $tbody[ tbodyIndex ].rows.length ) || 0;\n\t\t\t\tfor ( rowIndex = 0; rowIndex < totalRows; ++rowIndex ) {\n\t\t\t\t\trowData = {\n\t\t\t\t\t\t// order: original row order #\n\t\t\t\t\t\t// $row : jQuery Object[]\n\t\t\t\t\t\tchild: [], // child row text (filter widget)\n\t\t\t\t\t\traw: []    // original row text\n\t\t\t\t\t};\n\t\t\t\t\t/** Add the table data to main data array */\n\t\t\t\t\t$row = $( $tbody[ tbodyIndex ].rows[ rowIndex ] );\n\t\t\t\t\tcols = [];\n\t\t\t\t\t// ignore \"remove-me\" rows\n\t\t\t\t\tif ( $row.hasClass( c.selectorRemove.slice(1) ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t// if this is a child row, add it to the last row's children and continue to the next row\n\t\t\t\t\t// ignore child row class, if it is the first row\n\t\t\t\t\tif ( $row.hasClass( c.cssChildRow ) && rowIndex !== 0 ) {\n\t\t\t\t\t\tlen = cache.normalized.length - 1;\n\t\t\t\t\t\tprevRowData = cache.normalized[ len ][ c.columns ];\n\t\t\t\t\t\tprevRowData.$row = prevRowData.$row.add( $row );\n\t\t\t\t\t\t// add 'hasChild' class name to parent row\n\t\t\t\t\t\tif ( !$row.prev().hasClass( c.cssChildRow ) ) {\n\t\t\t\t\t\t\t$row.prev().addClass( ts.css.cssHasChild );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// save child row content (un-parsed!)\n\t\t\t\t\t\t$cells = $row.children( 'th, td' );\n\t\t\t\t\t\tlen = prevRowData.child.length;\n\t\t\t\t\t\tprevRowData.child[ len ] = [];\n\t\t\t\t\t\t// child row content does not account for colspans/rowspans; so indexing may be off\n\t\t\t\t\t\tcacheIndex = 0;\n\t\t\t\t\t\tmax = c.columns;\n\t\t\t\t\t\tfor ( colIndex = 0; colIndex < max; colIndex++ ) {\n\t\t\t\t\t\t\tcell = $cells[ colIndex ];\n\t\t\t\t\t\t\tif ( cell ) {\n\t\t\t\t\t\t\t\tprevRowData.child[ len ][ colIndex ] = ts.getParsedText( c, cell, colIndex );\n\t\t\t\t\t\t\t\tspan = $cells[ colIndex ].colSpan - 1;\n\t\t\t\t\t\t\t\tif ( span > 0 ) {\n\t\t\t\t\t\t\t\t\tcacheIndex += span;\n\t\t\t\t\t\t\t\t\tmax += span;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcacheIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// go to the next for loop\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\trowData.$row = $row;\n\t\t\t\t\trowData.order = rowIndex; // add original row position to rowCache\n\t\t\t\t\tcacheIndex = 0;\n\t\t\t\t\tmax = c.columns;\n\t\t\t\t\tfor ( colIndex = 0; colIndex < max; ++colIndex ) {\n\t\t\t\t\t\tcell = $row[ 0 ].cells[ colIndex ];\n\t\t\t\t\t\tif ( cell && cacheIndex < c.columns ) {\n\t\t\t\t\t\t\thasParser = typeof parsers[ cacheIndex ] !== 'undefined';\n\t\t\t\t\t\t\tif ( !hasParser && debug ) {\n\t\t\t\t\t\t\t\tconsole.warn( 'No parser found for row: ' + rowIndex + ', column: ' + colIndex +\n\t\t\t\t\t\t\t\t\t'; cell containing: \"' + $(cell).text() + '\"; does it have a header?' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tval = ts.getElementText( c, cell, cacheIndex );\n\t\t\t\t\t\t\trowData.raw[ cacheIndex ] = val; // save original row text\n\t\t\t\t\t\t\t// save raw column text even if there is no parser set\n\t\t\t\t\t\t\ttxt = ts.getParsedText( c, cell, cacheIndex, val );\n\t\t\t\t\t\t\tcols[ cacheIndex ] = txt;\n\t\t\t\t\t\t\tif ( hasParser && ( parsers[ cacheIndex ].type || '' ).toLowerCase() === 'numeric' ) {\n\t\t\t\t\t\t\t\t// determine column max value (ignore sign)\n\t\t\t\t\t\t\t\tcolMax[ cacheIndex ] = Math.max( Math.abs( txt ) || 0, colMax[ cacheIndex ] || 0 );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// allow colSpan in tbody\n\t\t\t\t\t\t\tspan = cell.colSpan - 1;\n\t\t\t\t\t\t\tif ( span > 0 ) {\n\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t\twhile ( index <= span ) {\n\t\t\t\t\t\t\t\t\t// duplicate text (or not) to spanned columns\n\t\t\t\t\t\t\t\t\t// instead of setting duplicate span to empty string, use textExtraction to try to get a value\n\t\t\t\t\t\t\t\t\t// see http://stackoverflow.com/q/36449711/145346\n\t\t\t\t\t\t\t\t\ttxt = c.duplicateSpan || index === 0 ?\n\t\t\t\t\t\t\t\t\t\tval :\n\t\t\t\t\t\t\t\t\t\ttypeof c.textExtraction !== 'string' ?\n\t\t\t\t\t\t\t\t\t\t\tts.getElementText( c, cell, cacheIndex + index ) || '' :\n\t\t\t\t\t\t\t\t\t\t\t'';\n\t\t\t\t\t\t\t\t\trowData.raw[ cacheIndex + index ] = txt;\n\t\t\t\t\t\t\t\t\tcols[ cacheIndex + index ] = txt;\n\t\t\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcacheIndex += span;\n\t\t\t\t\t\t\t\tmax += span;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcacheIndex++;\n\t\t\t\t\t}\n\t\t\t\t\t// ensure rowData is always in the same location (after the last column)\n\t\t\t\t\tcols[ c.columns ] = rowData;\n\t\t\t\t\tcache.normalized[ cache.normalized.length ] = cols;\n\t\t\t\t}\n\t\t\t\tcache.colMax = colMax;\n\t\t\t\t// total up rows, not including child rows\n\t\t\t\tc.totalRows += cache.normalized.length;\n\n\t\t\t}\n\t\t\tif ( c.showProcessing ) {\n\t\t\t\tts.isProcessing( table ); // remove processing icon\n\t\t\t}\n\t\t\tif ( debug ) {\n\t\t\t\tlen = Math.min( 5, c.cache[ 0 ].normalized.length );\n\t\t\t\tconsole[ console.group ? 'group' : 'log' ]( 'Building cache for ' + c.totalRows +\n\t\t\t\t\t' rows (showing ' + len + ' rows in log) and ' + c.columns + ' columns' +\n\t\t\t\t\tts.benchmark( cacheTime ) );\n\t\t\t\tval = {};\n\t\t\t\tfor ( colIndex = 0; colIndex < c.columns; colIndex++ ) {\n\t\t\t\t\tfor ( cacheIndex = 0; cacheIndex < len; cacheIndex++ ) {\n\t\t\t\t\t\tif ( !val[ 'row: ' + cacheIndex ] ) {\n\t\t\t\t\t\t\tval[ 'row: ' + cacheIndex ] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tval[ 'row: ' + cacheIndex ][ c.$headerIndexed[ colIndex ].text() ] =\n\t\t\t\t\t\t\tc.cache[ 0 ].normalized[ cacheIndex ][ colIndex ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole[ console.table ? 'table' : 'log' ]( val );\n\t\t\t\tif ( console.groupEnd ) { console.groupEnd(); }\n\t\t\t}\n\t\t\tif ( $.isFunction( callback ) ) {\n\t\t\t\tcallback( table );\n\t\t\t}\n\t\t},\n\n\t\tgetColumnText : function( table, column, callback, rowFilter ) {\n\t\t\ttable = $( table )[0];\n\t\t\tvar tbodyIndex, rowIndex, cache, row, tbodyLen, rowLen, raw, parsed, $cell, result,\n\t\t\t\thasCallback = typeof callback === 'function',\n\t\t\t\tallColumns = column === 'all',\n\t\t\t\tdata = { raw : [], parsed: [], $cell: [] },\n\t\t\t\tc = table.config;\n\t\t\tif ( ts.isEmptyObject( c ) ) {\n\t\t\t\tif ( ts.debug(c, 'core') ) {\n\t\t\t\t\tconsole.warn( 'No cache found - aborting getColumnText function!' );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttbodyLen = c.$tbodies.length;\n\t\t\t\tfor ( tbodyIndex = 0; tbodyIndex < tbodyLen; tbodyIndex++ ) {\n\t\t\t\t\tcache = c.cache[ tbodyIndex ].normalized;\n\t\t\t\t\trowLen = cache.length;\n\t\t\t\t\tfor ( rowIndex = 0; rowIndex < rowLen; rowIndex++ ) {\n\t\t\t\t\t\trow = cache[ rowIndex ];\n\t\t\t\t\t\tif ( rowFilter && !row[ c.columns ].$row.is( rowFilter ) ) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult = true;\n\t\t\t\t\t\tparsed = ( allColumns ) ? row.slice( 0, c.columns ) : row[ column ];\n\t\t\t\t\t\trow = row[ c.columns ];\n\t\t\t\t\t\traw = ( allColumns ) ? row.raw : row.raw[ column ];\n\t\t\t\t\t\t$cell = ( allColumns ) ? row.$row.children() : row.$row.children().eq( column );\n\t\t\t\t\t\tif ( hasCallback ) {\n\t\t\t\t\t\t\tresult = callback({\n\t\t\t\t\t\t\t\ttbodyIndex : tbodyIndex,\n\t\t\t\t\t\t\t\trowIndex : rowIndex,\n\t\t\t\t\t\t\t\tparsed : parsed,\n\t\t\t\t\t\t\t\traw : raw,\n\t\t\t\t\t\t\t\t$row : row.$row,\n\t\t\t\t\t\t\t\t$cell : $cell\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( result !== false ) {\n\t\t\t\t\t\t\tdata.parsed[ data.parsed.length ] = parsed;\n\t\t\t\t\t\t\tdata.raw[ data.raw.length ] = raw;\n\t\t\t\t\t\t\tdata.$cell[ data.$cell.length ] = $cell;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// return everything\n\t\t\t\treturn data;\n\t\t\t}\n\t\t},\n\n\t\t/*\n\t\t██  ██ █████▄ █████▄ ▄████▄ ██████ ██████\n\t\t██  ██ ██▄▄██ ██  ██ ██▄▄██   ██   ██▄▄\n\t\t██  ██ ██▀▀▀  ██  ██ ██▀▀██   ██   ██▀▀\n\t\t▀████▀ ██     █████▀ ██  ██   ██   ██████\n\t\t*/\n\t\tsetHeadersCss : function( c ) {\n\t\t\tvar indx, column,\n\t\t\t\tlist = c.sortList,\n\t\t\t\tlen = list.length,\n\t\t\t\tnone = ts.css.sortNone + ' ' + c.cssNone,\n\t\t\t\tcss = [ ts.css.sortAsc + ' ' + c.cssAsc, ts.css.sortDesc + ' ' + c.cssDesc ],\n\t\t\t\tcssIcon = [ c.cssIconAsc, c.cssIconDesc, c.cssIconNone ],\n\t\t\t\taria = [ 'ascending', 'descending' ],\n\t\t\t\tupdateColumnSort = function($el, index) {\n\t\t\t\t\t$el\n\t\t\t\t\t\t.removeClass( none )\n\t\t\t\t\t\t.addClass( css[ index ] )\n\t\t\t\t\t\t.attr( 'aria-sort', aria[ index ] )\n\t\t\t\t\t\t.find( '.' + ts.css.icon )\n\t\t\t\t\t\t.removeClass( cssIcon[ 2 ] )\n\t\t\t\t\t\t.addClass( cssIcon[ index ] );\n\t\t\t\t},\n\t\t\t\t// find the footer\n\t\t\t\t$extras = c.$table\n\t\t\t\t\t.find( 'tfoot tr' )\n\t\t\t\t\t.children( 'td, th' )\n\t\t\t\t\t.add( $( c.namespace + '_extra_headers' ) )\n\t\t\t\t\t.removeClass( css.join( ' ' ) ),\n\t\t\t\t// remove all header information\n\t\t\t\t$sorted = c.$headers\n\t\t\t\t\t.add( $( 'thead ' + c.namespace + '_extra_headers' ) )\n\t\t\t\t\t.removeClass( css.join( ' ' ) )\n\t\t\t\t\t.addClass( none )\n\t\t\t\t\t.attr( 'aria-sort', 'none' )\n\t\t\t\t\t.find( '.' + ts.css.icon )\n\t\t\t\t\t.removeClass( cssIcon.join( ' ' ) )\n\t\t\t\t\t.end();\n\t\t\t// add css none to all sortable headers\n\t\t\t$sorted\n\t\t\t\t.not( '.sorter-false' )\n\t\t\t\t.find( '.' + ts.css.icon )\n\t\t\t\t.addClass( cssIcon[ 2 ] );\n\t\t\t// add disabled css icon class\n\t\t\tif ( c.cssIconDisabled ) {\n\t\t\t\t$sorted\n\t\t\t\t\t.filter( '.sorter-false' )\n\t\t\t\t\t.find( '.' + ts.css.icon )\n\t\t\t\t\t.addClass( c.cssIconDisabled );\n\t\t\t}\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\t// direction = 2 means reset!\n\t\t\t\tif ( list[ indx ][ 1 ] !== 2 ) {\n\t\t\t\t\t// multicolumn sorting updating - see #1005\n\t\t\t\t\t// .not(function() {}) needs jQuery 1.4\n\t\t\t\t\t// filter(function(i, el) {}) <- el is undefined in jQuery v1.2.6\n\t\t\t\t\t$sorted = c.$headers.filter( function( i ) {\n\t\t\t\t\t\t// only include headers that are in the sortList (this includes colspans)\n\t\t\t\t\t\tvar include = true,\n\t\t\t\t\t\t\t$el = c.$headers.eq( i ),\n\t\t\t\t\t\t\tcol = parseInt( $el.attr( 'data-column' ), 10 ),\n\t\t\t\t\t\t\tend = col + ts.getClosest( $el, 'th, td' )[0].colSpan;\n\t\t\t\t\t\tfor ( ; col < end; col++ ) {\n\t\t\t\t\t\t\tinclude = include ? include || ts.isValueInArray( col, c.sortList ) > -1 : false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn include;\n\t\t\t\t\t});\n\n\t\t\t\t\t// choose the :last in case there are nested columns\n\t\t\t\t\t$sorted = $sorted\n\t\t\t\t\t\t.not( '.sorter-false' )\n\t\t\t\t\t\t.filter( '[data-column=\"' + list[ indx ][ 0 ] + '\"]' + ( len === 1 ? ':last' : '' ) );\n\t\t\t\t\tif ( $sorted.length ) {\n\t\t\t\t\t\tfor ( column = 0; column < $sorted.length; column++ ) {\n\t\t\t\t\t\t\tif ( !$sorted[ column ].sortDisabled ) {\n\t\t\t\t\t\t\t\tupdateColumnSort( $sorted.eq( column ), list[ indx ][ 1 ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// add sorted class to footer & extra headers, if they exist\n\t\t\t\t\tif ( $extras.length ) {\n\t\t\t\t\t\tupdateColumnSort( $extras.filter( '[data-column=\"' + list[ indx ][ 0 ] + '\"]' ), list[ indx ][ 1 ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// add verbose aria labels\n\t\t\tlen = c.$headers.length;\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\tts.setColumnAriaLabel( c, c.$headers.eq( indx ) );\n\t\t\t}\n\t\t},\n\n\t\tgetClosest : function( $el, selector ) {\n\t\t\t// jQuery v1.2.6 doesn't have closest()\n\t\t\tif ( $.fn.closest ) {\n\t\t\t\treturn $el.closest( selector );\n\t\t\t}\n\t\t\treturn $el.is( selector ) ?\n\t\t\t\t$el :\n\t\t\t\t$el.parents( selector ).filter( ':first' );\n\t\t},\n\n\t\t// nextSort (optional), lets you disable next sort text\n\t\tsetColumnAriaLabel : function( c, $header, nextSort ) {\n\t\t\tif ( $header.length ) {\n\t\t\t\tvar column = parseInt( $header.attr( 'data-column' ), 10 ),\n\t\t\t\t\tvars = c.sortVars[ column ],\n\t\t\t\t\ttmp = $header.hasClass( ts.css.sortAsc ) ?\n\t\t\t\t\t\t'sortAsc' :\n\t\t\t\t\t\t$header.hasClass( ts.css.sortDesc ) ? 'sortDesc' : 'sortNone',\n\t\t\t\t\ttxt = $.trim( $header.text() ) + ': ' + ts.language[ tmp ];\n\t\t\t\tif ( $header.hasClass( 'sorter-false' ) || nextSort === false ) {\n\t\t\t\t\ttxt += ts.language.sortDisabled;\n\t\t\t\t} else {\n\t\t\t\t\ttmp = ( vars.count + 1 ) % vars.order.length;\n\t\t\t\t\tnextSort = vars.order[ tmp ];\n\t\t\t\t\t// if nextSort\n\t\t\t\t\ttxt += ts.language[ nextSort === 0 ? 'nextAsc' : nextSort === 1 ? 'nextDesc' : 'nextNone' ];\n\t\t\t\t}\n\t\t\t\t$header.attr( 'aria-label', txt );\n\t\t\t\tif (vars.sortedBy) {\n\t\t\t\t\t$header.attr( 'data-sortedBy', vars.sortedBy );\n\t\t\t\t} else {\n\t\t\t\t\t$header.removeAttr('data-sortedBy');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupdateHeader : function( c ) {\n\t\t\tvar index, isDisabled, $header, col,\n\t\t\t\ttable = c.table,\n\t\t\t\tlen = c.$headers.length;\n\t\t\tfor ( index = 0; index < len; index++ ) {\n\t\t\t\t$header = c.$headers.eq( index );\n\t\t\t\tcol = ts.getColumnData( table, c.headers, index, true );\n\t\t\t\t// add 'sorter-false' class if 'parser-false' is set\n\t\t\t\tisDisabled = ts.getData( $header, col, 'sorter' ) === 'false' || ts.getData( $header, col, 'parser' ) === 'false';\n\t\t\t\tts.setColumnSort( c, $header, isDisabled );\n\t\t\t}\n\t\t},\n\n\t\tsetColumnSort : function( c, $header, isDisabled ) {\n\t\t\tvar id = c.table.id;\n\t\t\t$header[ 0 ].sortDisabled = isDisabled;\n\t\t\t$header[ isDisabled ? 'addClass' : 'removeClass' ]( 'sorter-false' )\n\t\t\t\t.attr( 'aria-disabled', '' + isDisabled );\n\t\t\t// disable tab index on disabled cells\n\t\t\tif ( c.tabIndex ) {\n\t\t\t\tif ( isDisabled ) {\n\t\t\t\t\t$header.removeAttr( 'tabindex' );\n\t\t\t\t} else {\n\t\t\t\t\t$header.attr( 'tabindex', '0' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// aria-controls - requires table ID\n\t\t\tif ( id ) {\n\t\t\t\tif ( isDisabled ) {\n\t\t\t\t\t$header.removeAttr( 'aria-controls' );\n\t\t\t\t} else {\n\t\t\t\t\t$header.attr( 'aria-controls', id );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupdateHeaderSortCount : function( c, list ) {\n\t\t\tvar col, dir, group, indx, primary, temp, val, order,\n\t\t\t\tsortList = list || c.sortList,\n\t\t\t\tlen = sortList.length;\n\t\t\tc.sortList = [];\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\tval = sortList[ indx ];\n\t\t\t\t// ensure all sortList values are numeric - fixes #127\n\t\t\t\tcol = parseInt( val[ 0 ], 10 );\n\t\t\t\t// prevents error if sorton array is wrong\n\t\t\t\tif ( col < c.columns ) {\n\n\t\t\t\t\t// set order if not already defined - due to colspan header without associated header cell\n\t\t\t\t\t// adding this check prevents a javascript error\n\t\t\t\t\tif ( !c.sortVars[ col ].order ) {\n\t\t\t\t\t\tif ( ts.getOrder( c.sortInitialOrder ) ) {\n\t\t\t\t\t\t\torder = c.sortReset ? [ 1, 0, 2 ] : [ 1, 0 ];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\torder = c.sortReset ? [ 0, 1, 2 ] : [ 0, 1 ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc.sortVars[ col ].order = order;\n\t\t\t\t\t\tc.sortVars[ col ].count = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\torder = c.sortVars[ col ].order;\n\t\t\t\t\tdir = ( '' + val[ 1 ] ).match( /^(1|d|s|o|n)/ );\n\t\t\t\t\tdir = dir ? dir[ 0 ] : '';\n\t\t\t\t\t// 0/(a)sc (default), 1/(d)esc, (s)ame, (o)pposite, (n)ext\n\t\t\t\t\tswitch ( dir ) {\n\t\t\t\t\t\tcase '1' : case 'd' : // descending\n\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 's' : // same direction (as primary column)\n\t\t\t\t\t\t\t// if primary sort is set to 's', make it ascending\n\t\t\t\t\t\t\tdir = primary || 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'o' :\n\t\t\t\t\t\t\ttemp = order[ ( primary || 0 ) % order.length ];\n\t\t\t\t\t\t\t// opposite of primary column; but resets if primary resets\n\t\t\t\t\t\t\tdir = temp === 0 ? 1 : temp === 1 ? 0 : 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'n' :\n\t\t\t\t\t\t\tdir = order[ ( ++c.sortVars[ col ].count ) % order.length ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault : // ascending\n\t\t\t\t\t\t\tdir = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tprimary = indx === 0 ? dir : primary;\n\t\t\t\t\tgroup = [ col, parseInt( dir, 10 ) || 0 ];\n\t\t\t\t\tc.sortList[ c.sortList.length ] = group;\n\t\t\t\t\tdir = $.inArray( group[ 1 ], order ); // fixes issue #167\n\t\t\t\t\tc.sortVars[ col ].count = dir >= 0 ? dir : group[ 1 ] % order.length;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupdateAll : function( c, resort, callback ) {\n\t\t\tvar table = c.table;\n\t\t\ttable.isUpdating = true;\n\t\t\tts.refreshWidgets( table, true, true );\n\t\t\tts.buildHeaders( c );\n\t\t\tts.bindEvents( table, c.$headers, true );\n\t\t\tts.bindMethods( c );\n\t\t\tts.commonUpdate( c, resort, callback );\n\t\t},\n\n\t\tupdate : function( c, resort, callback ) {\n\t\t\tvar table = c.table;\n\t\t\ttable.isUpdating = true;\n\t\t\t// update sorting (if enabled/disabled)\n\t\t\tts.updateHeader( c );\n\t\t\tts.commonUpdate( c, resort, callback );\n\t\t},\n\n\t\t// simple header update - see #989\n\t\tupdateHeaders : function( c, callback ) {\n\t\t\tc.table.isUpdating = true;\n\t\t\tts.buildHeaders( c );\n\t\t\tts.bindEvents( c.table, c.$headers, true );\n\t\t\tts.resortComplete( c, callback );\n\t\t},\n\n\t\tupdateCell : function( c, cell, resort, callback ) {\n\t\t\t// updateCell for child rows is a mess - we'll ignore them for now\n\t\t\t// eventually I'll break out the \"update\" row cache code to make everything consistent\n\t\t\tif ( $( cell ).closest( 'tr' ).hasClass( c.cssChildRow ) ) {\n\t\t\t\tconsole.warn('Tablesorter Warning! \"updateCell\" for child row content has been disabled, use \"update\" instead');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( ts.isEmptyObject( c.cache ) ) {\n\t\t\t\t// empty table, do an update instead - fixes #1099\n\t\t\t\tts.updateHeader( c );\n\t\t\t\tts.commonUpdate( c, resort, callback );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tc.table.isUpdating = true;\n\t\t\tc.$table.find( c.selectorRemove ).remove();\n\t\t\t// get position from the dom\n\t\t\tvar tmp, indx, row, icell, cache, len,\n\t\t\t\t$tbodies = c.$tbodies,\n\t\t\t\t$cell = $( cell ),\n\t\t\t\t// update cache - format: function( s, table, cell, cellIndex )\n\t\t\t\t// no closest in jQuery v1.2.6\n\t\t\t\ttbodyIndex = $tbodies.index( ts.getClosest( $cell, 'tbody' ) ),\n\t\t\t\ttbcache = c.cache[ tbodyIndex ],\n\t\t\t\t$row = ts.getClosest( $cell, 'tr' );\n\t\t\tcell = $cell[ 0 ]; // in case cell is a jQuery object\n\t\t\t// tbody may not exist if update is initialized while tbody is removed for processing\n\t\t\tif ( $tbodies.length && tbodyIndex >= 0 ) {\n\t\t\t\trow = $tbodies.eq( tbodyIndex ).find( 'tr' ).not( '.' + c.cssChildRow ).index( $row );\n\t\t\t\tcache = tbcache.normalized[ row ];\n\t\t\t\tlen = $row[ 0 ].cells.length;\n\t\t\t\tif ( len !== c.columns ) {\n\t\t\t\t\t// colspan in here somewhere!\n\t\t\t\t\ticell = 0;\n\t\t\t\t\ttmp = false;\n\t\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\t\t\tif ( !tmp && $row[ 0 ].cells[ indx ] !== cell ) {\n\t\t\t\t\t\t\ticell += $row[ 0 ].cells[ indx ].colSpan;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttmp = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ticell = $cell.index();\n\t\t\t\t}\n\t\t\t\ttmp = ts.getElementText( c, cell, icell ); // raw\n\t\t\t\tcache[ c.columns ].raw[ icell ] = tmp;\n\t\t\t\ttmp = ts.getParsedText( c, cell, icell, tmp );\n\t\t\t\tcache[ icell ] = tmp; // parsed\n\t\t\t\tif ( ( c.parsers[ icell ].type || '' ).toLowerCase() === 'numeric' ) {\n\t\t\t\t\t// update column max value (ignore sign)\n\t\t\t\t\ttbcache.colMax[ icell ] = Math.max( Math.abs( tmp ) || 0, tbcache.colMax[ icell ] || 0 );\n\t\t\t\t}\n\t\t\t\ttmp = resort !== 'undefined' ? resort : c.resort;\n\t\t\t\tif ( tmp !== false ) {\n\t\t\t\t\t// widgets will be reapplied\n\t\t\t\t\tts.checkResort( c, tmp, callback );\n\t\t\t\t} else {\n\t\t\t\t\t// don't reapply widgets is resort is false, just in case it causes\n\t\t\t\t\t// problems with element focus\n\t\t\t\t\tts.resortComplete( c, callback );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( ts.debug(c, 'core') ) {\n\t\t\t\t\tconsole.error( 'updateCell aborted, tbody missing or not within the indicated table' );\n\t\t\t\t}\n\t\t\t\tc.table.isUpdating = false;\n\t\t\t}\n\t\t},\n\n\t\taddRows : function( c, $row, resort, callback ) {\n\t\t\tvar txt, val, tbodyIndex, rowIndex, rows, cellIndex, len, order,\n\t\t\t\tcacheIndex, rowData, cells, cell, span,\n\t\t\t\t// allow passing a row string if only one non-info tbody exists in the table\n\t\t\t\tvalid = typeof $row === 'string' && c.$tbodies.length === 1 && /<tr/.test( $row || '' ),\n\t\t\t\ttable = c.table;\n\t\t\tif ( valid ) {\n\t\t\t\t$row = $( $row );\n\t\t\t\tc.$tbodies.append( $row );\n\t\t\t} else if (\n\t\t\t\t!$row ||\n\t\t\t\t// row is a jQuery object?\n\t\t\t\t!( $row instanceof $ ) ||\n\t\t\t\t// row contained in the table?\n\t\t\t\t( ts.getClosest( $row, 'table' )[ 0 ] !== c.table )\n\t\t\t) {\n\t\t\t\tif ( ts.debug(c, 'core') ) {\n\t\t\t\t\tconsole.error( 'addRows method requires (1) a jQuery selector reference to rows that have already ' +\n\t\t\t\t\t\t'been added to the table, or (2) row HTML string to be added to a table with only one tbody' );\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ttable.isUpdating = true;\n\t\t\tif ( ts.isEmptyObject( c.cache ) ) {\n\t\t\t\t// empty table, do an update instead - fixes #450\n\t\t\t\tts.updateHeader( c );\n\t\t\t\tts.commonUpdate( c, resort, callback );\n\t\t\t} else {\n\t\t\t\trows = $row.filter( 'tr' ).attr( 'role', 'row' ).length;\n\t\t\t\ttbodyIndex = c.$tbodies.index( $row.parents( 'tbody' ).filter( ':first' ) );\n\t\t\t\t// fixes adding rows to an empty table - see issue #179\n\t\t\t\tif ( !( c.parsers && c.parsers.length ) ) {\n\t\t\t\t\tts.setupParsers( c );\n\t\t\t\t}\n\t\t\t\t// add each row\n\t\t\t\tfor ( rowIndex = 0; rowIndex < rows; rowIndex++ ) {\n\t\t\t\t\tcacheIndex = 0;\n\t\t\t\t\tlen = $row[ rowIndex ].cells.length;\n\t\t\t\t\torder = c.cache[ tbodyIndex ].normalized.length;\n\t\t\t\t\tcells = [];\n\t\t\t\t\trowData = {\n\t\t\t\t\t\tchild : [],\n\t\t\t\t\t\traw : [],\n\t\t\t\t\t\t$row : $row.eq( rowIndex ),\n\t\t\t\t\t\torder : order\n\t\t\t\t\t};\n\t\t\t\t\t// add each cell\n\t\t\t\t\tfor ( cellIndex = 0; cellIndex < len; cellIndex++ ) {\n\t\t\t\t\t\tcell = $row[ rowIndex ].cells[ cellIndex ];\n\t\t\t\t\t\ttxt = ts.getElementText( c, cell, cacheIndex );\n\t\t\t\t\t\trowData.raw[ cacheIndex ] = txt;\n\t\t\t\t\t\tval = ts.getParsedText( c, cell, cacheIndex, txt );\n\t\t\t\t\t\tcells[ cacheIndex ] = val;\n\t\t\t\t\t\tif ( ( c.parsers[ cacheIndex ].type || '' ).toLowerCase() === 'numeric' ) {\n\t\t\t\t\t\t\t// update column max value (ignore sign)\n\t\t\t\t\t\t\tc.cache[ tbodyIndex ].colMax[ cacheIndex ] =\n\t\t\t\t\t\t\t\tMath.max( Math.abs( val ) || 0, c.cache[ tbodyIndex ].colMax[ cacheIndex ] || 0 );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tspan = cell.colSpan - 1;\n\t\t\t\t\t\tif ( span > 0 ) {\n\t\t\t\t\t\t\tcacheIndex += span;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcacheIndex++;\n\t\t\t\t\t}\n\t\t\t\t\t// add the row data to the end\n\t\t\t\t\tcells[ c.columns ] = rowData;\n\t\t\t\t\t// update cache\n\t\t\t\t\tc.cache[ tbodyIndex ].normalized[ order ] = cells;\n\t\t\t\t}\n\t\t\t\t// resort using current settings\n\t\t\t\tts.checkResort( c, resort, callback );\n\t\t\t}\n\t\t},\n\n\t\tupdateCache : function( c, callback, $tbodies ) {\n\t\t\t// rebuild parsers\n\t\t\tif ( !( c.parsers && c.parsers.length ) ) {\n\t\t\t\tts.setupParsers( c, $tbodies );\n\t\t\t}\n\t\t\t// rebuild the cache map\n\t\t\tts.buildCache( c, callback, $tbodies );\n\t\t},\n\n\t\t// init flag (true) used by pager plugin to prevent widget application\n\t\t// renamed from appendToTable\n\t\tappendCache : function( c, init ) {\n\t\t\tvar parsed, totalRows, $tbody, $curTbody, rowIndex, tbodyIndex, appendTime,\n\t\t\t\ttable = c.table,\n\t\t\t\t$tbodies = c.$tbodies,\n\t\t\t\trows = [],\n\t\t\t\tcache = c.cache;\n\t\t\t// empty table - fixes #206/#346\n\t\t\tif ( ts.isEmptyObject( cache ) ) {\n\t\t\t\t// run pager appender in case the table was just emptied\n\t\t\t\treturn c.appender ? c.appender( table, rows ) :\n\t\t\t\t\ttable.isUpdating ? c.$table.triggerHandler( 'updateComplete', table ) : ''; // Fixes #532\n\t\t\t}\n\t\t\tif ( ts.debug(c, 'core') ) {\n\t\t\t\tappendTime = new Date();\n\t\t\t}\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < $tbodies.length; tbodyIndex++ ) {\n\t\t\t\t$tbody = $tbodies.eq( tbodyIndex );\n\t\t\t\tif ( $tbody.length ) {\n\t\t\t\t\t// detach tbody for manipulation\n\t\t\t\t\t$curTbody = ts.processTbody( table, $tbody, true );\n\t\t\t\t\tparsed = cache[ tbodyIndex ].normalized;\n\t\t\t\t\ttotalRows = parsed.length;\n\t\t\t\t\tfor ( rowIndex = 0; rowIndex < totalRows; rowIndex++ ) {\n\t\t\t\t\t\trows[rows.length] = parsed[ rowIndex ][ c.columns ].$row;\n\t\t\t\t\t\t// removeRows used by the pager plugin; don't render if using ajax - fixes #411\n\t\t\t\t\t\tif ( !c.appender || ( c.pager && !c.pager.removeRows && !c.pager.ajax ) ) {\n\t\t\t\t\t\t\t$curTbody.append( parsed[ rowIndex ][ c.columns ].$row );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// restore tbody\n\t\t\t\t\tts.processTbody( table, $curTbody, false );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( c.appender ) {\n\t\t\t\tc.appender( table, rows );\n\t\t\t}\n\t\t\tif ( ts.debug(c, 'core') ) {\n\t\t\t\tconsole.log( 'Rebuilt table' + ts.benchmark( appendTime ) );\n\t\t\t}\n\t\t\t// apply table widgets; but not before ajax completes\n\t\t\tif ( !init && !c.appender ) {\n\t\t\t\tts.applyWidget( table );\n\t\t\t}\n\t\t\tif ( table.isUpdating ) {\n\t\t\t\tc.$table.triggerHandler( 'updateComplete', table );\n\t\t\t}\n\t\t},\n\n\t\tcommonUpdate : function( c, resort, callback ) {\n\t\t\t// remove rows/elements before update\n\t\t\tc.$table.find( c.selectorRemove ).remove();\n\t\t\t// rebuild parsers\n\t\t\tts.setupParsers( c );\n\t\t\t// rebuild the cache map\n\t\t\tts.buildCache( c );\n\t\t\tts.checkResort( c, resort, callback );\n\t\t},\n\n\t\t/*\n\t\t▄█████ ▄████▄ █████▄ ██████ ██ █████▄ ▄████▄\n\t\t▀█▄    ██  ██ ██▄▄██   ██   ██ ██  ██ ██ ▄▄▄\n\t\t   ▀█▄ ██  ██ ██▀██    ██   ██ ██  ██ ██ ▀██\n\t\t█████▀ ▀████▀ ██  ██   ██   ██ ██  ██ ▀████▀\n\t\t*/\n\t\tinitSort : function( c, cell, event ) {\n\t\t\tif ( c.table.isUpdating ) {\n\t\t\t\t// let any updates complete before initializing a sort\n\t\t\t\treturn setTimeout( function() {\n\t\t\t\t\tts.initSort( c, cell, event );\n\t\t\t\t}, 50 );\n\t\t\t}\n\n\t\t\tvar arry, indx, headerIndx, dir, temp, tmp, $header,\n\t\t\t\tnotMultiSort = !event[ c.sortMultiSortKey ],\n\t\t\t\ttable = c.table,\n\t\t\t\tlen = c.$headers.length,\n\t\t\t\tth = ts.getClosest( $( cell ), 'th, td' ),\n\t\t\t\tcol = parseInt( th.attr( 'data-column' ), 10 ),\n\t\t\t\tsortedBy = event.type === 'mouseup' ? 'user' : event.type,\n\t\t\t\torder = c.sortVars[ col ].order;\n\t\t\tth = th[0];\n\t\t\t// Only call sortStart if sorting is enabled\n\t\t\tc.$table.triggerHandler( 'sortStart', table );\n\t\t\t// get current column sort order\n\t\t\ttmp = ( c.sortVars[ col ].count + 1 ) % order.length;\n\t\t\tc.sortVars[ col ].count = event[ c.sortResetKey ] ? 2 : tmp;\n\t\t\t// reset all sorts on non-current column - issue #30\n\t\t\tif ( c.sortRestart ) {\n\t\t\t\tfor ( headerIndx = 0; headerIndx < len; headerIndx++ ) {\n\t\t\t\t\t$header = c.$headers.eq( headerIndx );\n\t\t\t\t\ttmp = parseInt( $header.attr( 'data-column' ), 10 );\n\t\t\t\t\t// only reset counts on columns that weren't just clicked on and if not included in a multisort\n\t\t\t\t\tif ( col !== tmp && ( notMultiSort || $header.hasClass( ts.css.sortNone ) ) ) {\n\t\t\t\t\t\tc.sortVars[ tmp ].count = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// user only wants to sort on one column\n\t\t\tif ( notMultiSort ) {\n\t\t\t\t$.each( c.sortVars, function( i ) {\n\t\t\t\t\tc.sortVars[ i ].sortedBy = '';\n\t\t\t\t});\n\t\t\t\t// flush the sort list\n\t\t\t\tc.sortList = [];\n\t\t\t\tc.last.sortList = [];\n\t\t\t\tif ( c.sortForce !== null ) {\n\t\t\t\t\tarry = c.sortForce;\n\t\t\t\t\tfor ( indx = 0; indx < arry.length; indx++ ) {\n\t\t\t\t\t\tif ( arry[ indx ][ 0 ] !== col ) {\n\t\t\t\t\t\t\tc.sortList[ c.sortList.length ] = arry[ indx ];\n\t\t\t\t\t\t\tc.sortVars[ arry[ indx ][ 0 ] ].sortedBy = 'sortForce';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// add column to sort list\n\t\t\t\tdir = order[ c.sortVars[ col ].count ];\n\t\t\t\tif ( dir < 2 ) {\n\t\t\t\t\tc.sortList[ c.sortList.length ] = [ col, dir ];\n\t\t\t\t\tc.sortVars[ col ].sortedBy = sortedBy;\n\t\t\t\t\t// add other columns if header spans across multiple\n\t\t\t\t\tif ( th.colSpan > 1 ) {\n\t\t\t\t\t\tfor ( indx = 1; indx < th.colSpan; indx++ ) {\n\t\t\t\t\t\t\tc.sortList[ c.sortList.length ] = [ col + indx, dir ];\n\t\t\t\t\t\t\t// update count on columns in colSpan\n\t\t\t\t\t\t\tc.sortVars[ col + indx ].count = $.inArray( dir, order );\n\t\t\t\t\t\t\tc.sortVars[ col + indx ].sortedBy = sortedBy;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// multi column sorting\n\t\t\t} else {\n\t\t\t\t// get rid of the sortAppend before adding more - fixes issue #115 & #523\n\t\t\t\tc.sortList = $.extend( [], c.last.sortList );\n\n\t\t\t\t// the user has clicked on an already sorted column\n\t\t\t\tif ( ts.isValueInArray( col, c.sortList ) >= 0 ) {\n\t\t\t\t\t// reverse the sorting direction\n\t\t\t\t\tc.sortVars[ col ].sortedBy = sortedBy;\n\t\t\t\t\tfor ( indx = 0; indx < c.sortList.length; indx++ ) {\n\t\t\t\t\t\ttmp = c.sortList[ indx ];\n\t\t\t\t\t\tif ( tmp[ 0 ] === col ) {\n\t\t\t\t\t\t\t// order.count seems to be incorrect when compared to cell.count\n\t\t\t\t\t\t\ttmp[ 1 ] = order[ c.sortVars[ col ].count ];\n\t\t\t\t\t\t\tif ( tmp[1] === 2 ) {\n\t\t\t\t\t\t\t\tc.sortList.splice( indx, 1 );\n\t\t\t\t\t\t\t\tc.sortVars[ col ].count = -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// add column to sort list array\n\t\t\t\t\tdir = order[ c.sortVars[ col ].count ];\n\t\t\t\t\tc.sortVars[ col ].sortedBy = sortedBy;\n\t\t\t\t\tif ( dir < 2 ) {\n\t\t\t\t\t\tc.sortList[ c.sortList.length ] = [ col, dir ];\n\t\t\t\t\t\t// add other columns if header spans across multiple\n\t\t\t\t\t\tif ( th.colSpan > 1 ) {\n\t\t\t\t\t\t\tfor ( indx = 1; indx < th.colSpan; indx++ ) {\n\t\t\t\t\t\t\t\tc.sortList[ c.sortList.length ] = [ col + indx, dir ];\n\t\t\t\t\t\t\t\t// update count on columns in colSpan\n\t\t\t\t\t\t\t\tc.sortVars[ col + indx ].count = $.inArray( dir, order );\n\t\t\t\t\t\t\t\tc.sortVars[ col + indx ].sortedBy = sortedBy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// save sort before applying sortAppend\n\t\t\tc.last.sortList = $.extend( [], c.sortList );\n\t\t\tif ( c.sortList.length && c.sortAppend ) {\n\t\t\t\tarry = $.isArray( c.sortAppend ) ? c.sortAppend : c.sortAppend[ c.sortList[ 0 ][ 0 ] ];\n\t\t\t\tif ( !ts.isEmptyObject( arry ) ) {\n\t\t\t\t\tfor ( indx = 0; indx < arry.length; indx++ ) {\n\t\t\t\t\t\tif ( arry[ indx ][ 0 ] !== col && ts.isValueInArray( arry[ indx ][ 0 ], c.sortList ) < 0 ) {\n\t\t\t\t\t\t\tdir = arry[ indx ][ 1 ];\n\t\t\t\t\t\t\ttemp = ( '' + dir ).match( /^(a|d|s|o|n)/ );\n\t\t\t\t\t\t\tif ( temp ) {\n\t\t\t\t\t\t\t\ttmp = c.sortList[ 0 ][ 1 ];\n\t\t\t\t\t\t\t\tswitch ( temp[ 0 ] ) {\n\t\t\t\t\t\t\t\t\tcase 'd' :\n\t\t\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 's' :\n\t\t\t\t\t\t\t\t\t\tdir = tmp;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'o' :\n\t\t\t\t\t\t\t\t\t\tdir = tmp === 0 ? 1 : 0;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'n' :\n\t\t\t\t\t\t\t\t\t\tdir = ( tmp + 1 ) % order.length;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tdir = 0;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tc.sortList[ c.sortList.length ] = [ arry[ indx ][ 0 ], dir ];\n\t\t\t\t\t\t\tc.sortVars[ arry[ indx ][ 0 ] ].sortedBy = 'sortAppend';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// sortBegin event triggered immediately before the sort\n\t\t\tc.$table.triggerHandler( 'sortBegin', table );\n\t\t\t// setTimeout needed so the processing icon shows up\n\t\t\tsetTimeout( function() {\n\t\t\t\t// set css for headers\n\t\t\t\tts.setHeadersCss( c );\n\t\t\t\tts.multisort( c );\n\t\t\t\tts.appendCache( c );\n\t\t\t\tc.$table.triggerHandler( 'sortBeforeEnd', table );\n\t\t\t\tc.$table.triggerHandler( 'sortEnd', table );\n\t\t\t}, 1 );\n\t\t},\n\n\t\t// sort multiple columns\n\t\tmultisort : function( c ) { /*jshint loopfunc:true */\n\t\t\tvar tbodyIndex, sortTime, colMax, rows, tmp,\n\t\t\t\ttable = c.table,\n\t\t\t\tsorter = [],\n\t\t\t\tdir = 0,\n\t\t\t\ttextSorter = c.textSorter || '',\n\t\t\t\tsortList = c.sortList,\n\t\t\t\tsortLen = sortList.length,\n\t\t\t\tlen = c.$tbodies.length;\n\t\t\tif ( c.serverSideSorting || ts.isEmptyObject( c.cache ) ) {\n\t\t\t\t// empty table - fixes #206/#346\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( ts.debug(c, 'core') ) { sortTime = new Date(); }\n\t\t\t// cache textSorter to optimize speed\n\t\t\tif ( typeof textSorter === 'object' ) {\n\t\t\t\tcolMax = c.columns;\n\t\t\t\twhile ( colMax-- ) {\n\t\t\t\t\ttmp = ts.getColumnData( table, textSorter, colMax );\n\t\t\t\t\tif ( typeof tmp === 'function' ) {\n\t\t\t\t\t\tsorter[ colMax ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < len; tbodyIndex++ ) {\n\t\t\t\tcolMax = c.cache[ tbodyIndex ].colMax;\n\t\t\t\trows = c.cache[ tbodyIndex ].normalized;\n\n\t\t\t\trows.sort( function( a, b ) {\n\t\t\t\t\tvar sortIndex, num, col, order, sort, x, y;\n\t\t\t\t\t// rows is undefined here in IE, so don't use it!\n\t\t\t\t\tfor ( sortIndex = 0; sortIndex < sortLen; sortIndex++ ) {\n\t\t\t\t\t\tcol = sortList[ sortIndex ][ 0 ];\n\t\t\t\t\t\torder = sortList[ sortIndex ][ 1 ];\n\t\t\t\t\t\t// sort direction, true = asc, false = desc\n\t\t\t\t\t\tdir = order === 0;\n\n\t\t\t\t\t\tif ( c.sortStable && a[ col ] === b[ col ] && sortLen === 1 ) {\n\t\t\t\t\t\t\treturn a[ c.columns ].order - b[ c.columns ].order;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// fallback to natural sort since it is more robust\n\t\t\t\t\t\tnum = /n/i.test( ts.getSortType( c.parsers, col ) );\n\t\t\t\t\t\tif ( num && c.strings[ col ] ) {\n\t\t\t\t\t\t\t// sort strings in numerical columns\n\t\t\t\t\t\t\tif ( typeof ( ts.string[ c.strings[ col ] ] ) === 'boolean' ) {\n\t\t\t\t\t\t\t\tnum = ( dir ? 1 : -1 ) * ( ts.string[ c.strings[ col ] ] ? -1 : 1 );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnum = ( c.strings[ col ] ) ? ts.string[ c.strings[ col ] ] || 0 : 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// fall back to built-in numeric sort\n\t\t\t\t\t\t\t// var sort = $.tablesorter['sort' + s]( a[col], b[col], dir, colMax[col], table );\n\t\t\t\t\t\t\tsort = c.numberSorter ? c.numberSorter( a[ col ], b[ col ], dir, colMax[ col ], table ) :\n\t\t\t\t\t\t\t\tts[ 'sortNumeric' + ( dir ? 'Asc' : 'Desc' ) ]( a[ col ], b[ col ], num, colMax[ col ], col, c );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// set a & b depending on sort direction\n\t\t\t\t\t\t\tx = dir ? a : b;\n\t\t\t\t\t\t\ty = dir ? b : a;\n\t\t\t\t\t\t\t// text sort function\n\t\t\t\t\t\t\tif ( typeof textSorter === 'function' ) {\n\t\t\t\t\t\t\t\t// custom OVERALL text sorter\n\t\t\t\t\t\t\t\tsort = textSorter( x[ col ], y[ col ], dir, col, table );\n\t\t\t\t\t\t\t} else if ( typeof sorter[ col ] === 'function' ) {\n\t\t\t\t\t\t\t\t// custom text sorter for a SPECIFIC COLUMN\n\t\t\t\t\t\t\t\tsort = sorter[ col ]( x[ col ], y[ col ], dir, col, table );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// fall back to natural sort\n\t\t\t\t\t\t\t\tsort = ts[ 'sortNatural' + ( dir ? 'Asc' : 'Desc' ) ]( a[ col ] || '', b[ col ] || '', col, c );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( sort ) { return sort; }\n\t\t\t\t\t}\n\t\t\t\t\treturn a[ c.columns ].order - b[ c.columns ].order;\n\t\t\t\t});\n\t\t\t}\n\t\t\tif ( ts.debug(c, 'core') ) {\n\t\t\t\tconsole.log( 'Applying sort ' + sortList.toString() + ts.benchmark( sortTime ) );\n\t\t\t}\n\t\t},\n\n\t\tresortComplete : function( c, callback ) {\n\t\t\tif ( c.table.isUpdating ) {\n\t\t\t\tc.$table.triggerHandler( 'updateComplete', c.table );\n\t\t\t}\n\t\t\tif ( $.isFunction( callback ) ) {\n\t\t\t\tcallback( c.table );\n\t\t\t}\n\t\t},\n\n\t\tcheckResort : function( c, resort, callback ) {\n\t\t\tvar sortList = $.isArray( resort ) ? resort : c.sortList,\n\t\t\t\t// if no resort parameter is passed, fallback to config.resort (true by default)\n\t\t\t\tresrt = typeof resort === 'undefined' ? c.resort : resort;\n\t\t\t// don't try to resort if the table is still processing\n\t\t\t// this will catch spamming of the updateCell method\n\t\t\tif ( resrt !== false && !c.serverSideSorting && !c.table.isProcessing ) {\n\t\t\t\tif ( sortList.length ) {\n\t\t\t\t\tts.sortOn( c, sortList, function() {\n\t\t\t\t\t\tts.resortComplete( c, callback );\n\t\t\t\t\t}, true );\n\t\t\t\t} else {\n\t\t\t\t\tts.sortReset( c, function() {\n\t\t\t\t\t\tts.resortComplete( c, callback );\n\t\t\t\t\t\tts.applyWidget( c.table, false );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tts.resortComplete( c, callback );\n\t\t\t\tts.applyWidget( c.table, false );\n\t\t\t}\n\t\t},\n\n\t\tsortOn : function( c, list, callback, init ) {\n\t\t\tvar indx,\n\t\t\t\ttable = c.table;\n\t\t\tc.$table.triggerHandler( 'sortStart', table );\n\t\t\tfor (indx = 0; indx < c.columns; indx++) {\n\t\t\t\tc.sortVars[ indx ].sortedBy = ts.isValueInArray( indx, list ) > -1 ? 'sorton' : '';\n\t\t\t}\n\t\t\t// update header count index\n\t\t\tts.updateHeaderSortCount( c, list );\n\t\t\t// set css for headers\n\t\t\tts.setHeadersCss( c );\n\t\t\t// fixes #346\n\t\t\tif ( c.delayInit && ts.isEmptyObject( c.cache ) ) {\n\t\t\t\tts.buildCache( c );\n\t\t\t}\n\t\t\tc.$table.triggerHandler( 'sortBegin', table );\n\t\t\t// sort the table and append it to the dom\n\t\t\tts.multisort( c );\n\t\t\tts.appendCache( c, init );\n\t\t\tc.$table.triggerHandler( 'sortBeforeEnd', table );\n\t\t\tc.$table.triggerHandler( 'sortEnd', table );\n\t\t\tts.applyWidget( table );\n\t\t\tif ( $.isFunction( callback ) ) {\n\t\t\t\tcallback( table );\n\t\t\t}\n\t\t},\n\n\t\tsortReset : function( c, callback ) {\n\t\t\tc.sortList = [];\n\t\t\tvar indx;\n\t\t\tfor (indx = 0; indx < c.columns; indx++) {\n\t\t\t\tc.sortVars[ indx ].count = -1;\n\t\t\t\tc.sortVars[ indx ].sortedBy = '';\n\t\t\t}\n\t\t\tts.setHeadersCss( c );\n\t\t\tts.multisort( c );\n\t\t\tts.appendCache( c );\n\t\t\tif ( $.isFunction( callback ) ) {\n\t\t\t\tcallback( c.table );\n\t\t\t}\n\t\t},\n\n\t\tgetSortType : function( parsers, column ) {\n\t\t\treturn ( parsers && parsers[ column ] ) ? parsers[ column ].type || '' : '';\n\t\t},\n\n\t\tgetOrder : function( val ) {\n\t\t\t// look for 'd' in 'desc' order; return true\n\t\t\treturn ( /^d/i.test( val ) || val === 1 );\n\t\t},\n\n\t\t// Natural sort - https://github.com/overset/javascript-natural-sort (date sorting removed)\n\t\tsortNatural : function( a, b ) {\n\t\t\tif ( a === b ) { return 0; }\n\t\t\ta = ( a || '' ).toString();\n\t\t\tb = ( b || '' ).toString();\n\t\t\tvar aNum, bNum, aFloat, bFloat, indx, max,\n\t\t\t\tregex = ts.regex;\n\t\t\t// first try and sort Hex codes\n\t\t\tif ( regex.hex.test( b ) ) {\n\t\t\t\taNum = parseInt( a.match( regex.hex ), 16 );\n\t\t\t\tbNum = parseInt( b.match( regex.hex ), 16 );\n\t\t\t\tif ( aNum < bNum ) { return -1; }\n\t\t\t\tif ( aNum > bNum ) { return 1; }\n\t\t\t}\n\t\t\t// chunk/tokenize\n\t\t\taNum = a.replace( regex.chunk, '\\\\0$1\\\\0' ).replace( regex.chunks, '' ).split( '\\\\0' );\n\t\t\tbNum = b.replace( regex.chunk, '\\\\0$1\\\\0' ).replace( regex.chunks, '' ).split( '\\\\0' );\n\t\t\tmax = Math.max( aNum.length, bNum.length );\n\t\t\t// natural sorting through split numeric strings and default strings\n\t\t\tfor ( indx = 0; indx < max; indx++ ) {\n\t\t\t\t// find floats not starting with '0', string or 0 if not defined\n\t\t\t\taFloat = isNaN( aNum[ indx ] ) ? aNum[ indx ] || 0 : parseFloat( aNum[ indx ] ) || 0;\n\t\t\t\tbFloat = isNaN( bNum[ indx ] ) ? bNum[ indx ] || 0 : parseFloat( bNum[ indx ] ) || 0;\n\t\t\t\t// handle numeric vs string comparison - number < string - (Kyle Adams)\n\t\t\t\tif ( isNaN( aFloat ) !== isNaN( bFloat ) ) { return isNaN( aFloat ) ? 1 : -1; }\n\t\t\t\t// rely on string comparison if different types - i.e. '02' < 2 != '02' < '2'\n\t\t\t\tif ( typeof aFloat !== typeof bFloat ) {\n\t\t\t\t\taFloat += '';\n\t\t\t\t\tbFloat += '';\n\t\t\t\t}\n\t\t\t\tif ( aFloat < bFloat ) { return -1; }\n\t\t\t\tif ( aFloat > bFloat ) { return 1; }\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\tsortNaturalAsc : function( a, b, col, c ) {\n\t\t\tif ( a === b ) { return 0; }\n\t\t\tvar empty = ts.string[ ( c.empties[ col ] || c.emptyTo ) ];\n\t\t\tif ( a === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? -1 : 1 ) : -empty || -1; }\n\t\t\tif ( b === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? 1 : -1 ) : empty || 1; }\n\t\t\treturn ts.sortNatural( a, b );\n\t\t},\n\n\t\tsortNaturalDesc : function( a, b, col, c ) {\n\t\t\tif ( a === b ) { return 0; }\n\t\t\tvar empty = ts.string[ ( c.empties[ col ] || c.emptyTo ) ];\n\t\t\tif ( a === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? -1 : 1 ) : empty || 1; }\n\t\t\tif ( b === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? 1 : -1 ) : -empty || -1; }\n\t\t\treturn ts.sortNatural( b, a );\n\t\t},\n\n\t\t// basic alphabetical sort\n\t\tsortText : function( a, b ) {\n\t\t\treturn a > b ? 1 : ( a < b ? -1 : 0 );\n\t\t},\n\n\t\t// return text string value by adding up ascii value\n\t\t// so the text is somewhat sorted when using a digital sort\n\t\t// this is NOT an alphanumeric sort\n\t\tgetTextValue : function( val, num, max ) {\n\t\t\tif ( max ) {\n\t\t\t\t// make sure the text value is greater than the max numerical value (max)\n\t\t\t\tvar indx,\n\t\t\t\t\tlen = val ? val.length : 0,\n\t\t\t\t\tn = max + num;\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\t\tn += val.charCodeAt( indx );\n\t\t\t\t}\n\t\t\t\treturn num * n;\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\tsortNumericAsc : function( a, b, num, max, col, c ) {\n\t\t\tif ( a === b ) { return 0; }\n\t\t\tvar empty = ts.string[ ( c.empties[ col ] || c.emptyTo ) ];\n\t\t\tif ( a === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? -1 : 1 ) : -empty || -1; }\n\t\t\tif ( b === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? 1 : -1 ) : empty || 1; }\n\t\t\tif ( isNaN( a ) ) { a = ts.getTextValue( a, num, max ); }\n\t\t\tif ( isNaN( b ) ) { b = ts.getTextValue( b, num, max ); }\n\t\t\treturn a - b;\n\t\t},\n\n\t\tsortNumericDesc : function( a, b, num, max, col, c ) {\n\t\t\tif ( a === b ) { return 0; }\n\t\t\tvar empty = ts.string[ ( c.empties[ col ] || c.emptyTo ) ];\n\t\t\tif ( a === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? -1 : 1 ) : empty || 1; }\n\t\t\tif ( b === '' && empty !== 0 ) { return typeof empty === 'boolean' ? ( empty ? 1 : -1 ) : -empty || -1; }\n\t\t\tif ( isNaN( a ) ) { a = ts.getTextValue( a, num, max ); }\n\t\t\tif ( isNaN( b ) ) { b = ts.getTextValue( b, num, max ); }\n\t\t\treturn b - a;\n\t\t},\n\n\t\tsortNumeric : function( a, b ) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\t/*\n\t\t██ ██ ██ ██ █████▄ ▄████▄ ██████ ██████ ▄█████\n\t\t██ ██ ██ ██ ██  ██ ██ ▄▄▄ ██▄▄     ██   ▀█▄\n\t\t██ ██ ██ ██ ██  ██ ██ ▀██ ██▀▀     ██      ▀█▄\n\t\t███████▀ ██ █████▀ ▀████▀ ██████   ██   █████▀\n\t\t*/\n\t\taddWidget : function( widget ) {\n\t\t\tif ( widget.id && !ts.isEmptyObject( ts.getWidgetById( widget.id ) ) ) {\n\t\t\t\tconsole.warn( '\"' + widget.id + '\" widget was loaded more than once!' );\n\t\t\t}\n\t\t\tts.widgets[ ts.widgets.length ] = widget;\n\t\t},\n\n\t\thasWidget : function( $table, name ) {\n\t\t\t$table = $( $table );\n\t\t\treturn $table.length && $table[ 0 ].config && $table[ 0 ].config.widgetInit[ name ] || false;\n\t\t},\n\n\t\tgetWidgetById : function( name ) {\n\t\t\tvar indx, widget,\n\t\t\t\tlen = ts.widgets.length;\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\twidget = ts.widgets[ indx ];\n\t\t\t\tif ( widget && widget.id && widget.id.toLowerCase() === name.toLowerCase() ) {\n\t\t\t\t\treturn widget;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tapplyWidgetOptions : function( table ) {\n\t\t\tvar indx, widget, wo,\n\t\t\t\tc = table.config,\n\t\t\t\tlen = c.widgets.length;\n\t\t\tif ( len ) {\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\t\twidget = ts.getWidgetById( c.widgets[ indx ] );\n\t\t\t\t\tif ( widget && widget.options ) {\n\t\t\t\t\t\two = $.extend( true, {}, widget.options );\n\t\t\t\t\t\tc.widgetOptions = $.extend( true, wo, c.widgetOptions );\n\t\t\t\t\t\t// add widgetOptions to defaults for option validator\n\t\t\t\t\t\t$.extend( true, ts.defaults.widgetOptions, widget.options );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\taddWidgetFromClass : function( table ) {\n\t\t\tvar len, indx,\n\t\t\t\tc = table.config,\n\t\t\t\t// look for widgets to apply from table class\n\t\t\t\t// don't match from 'ui-widget-content'; use \\S instead of \\w to include widgets\n\t\t\t\t// with dashes in the name, e.g. \"widget-test-2\" extracts out \"test-2\"\n\t\t\t\tregex = '^' + c.widgetClass.replace( ts.regex.templateName, '(\\\\S+)+' ) + '$',\n\t\t\t\twidgetClass = new RegExp( regex, 'g' ),\n\t\t\t\t// split up table class (widget id's can include dashes) - stop using match\n\t\t\t\t// otherwise only one widget gets extracted, see #1109\n\t\t\t\twidgets = ( table.className || '' ).split( ts.regex.spaces );\n\t\t\tif ( widgets.length ) {\n\t\t\t\tlen = widgets.length;\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\t\tif ( widgets[ indx ].match( widgetClass ) ) {\n\t\t\t\t\t\tc.widgets[ c.widgets.length ] = widgets[ indx ].replace( widgetClass, '$1' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tapplyWidgetId : function( table, id, init ) {\n\t\t\ttable = $(table)[0];\n\t\t\tvar applied, time, name,\n\t\t\t\tc = table.config,\n\t\t\t\two = c.widgetOptions,\n\t\t\t\tdebug = ts.debug(c, 'core'),\n\t\t\t\twidget = ts.getWidgetById( id );\n\t\t\tif ( widget ) {\n\t\t\t\tname = widget.id;\n\t\t\t\tapplied = false;\n\t\t\t\t// add widget name to option list so it gets reapplied after sorting, filtering, etc\n\t\t\t\tif ( $.inArray( name, c.widgets ) < 0 ) {\n\t\t\t\t\tc.widgets[ c.widgets.length ] = name;\n\t\t\t\t}\n\t\t\t\tif ( debug ) { time = new Date(); }\n\n\t\t\t\tif ( init || !( c.widgetInit[ name ] ) ) {\n\t\t\t\t\t// set init flag first to prevent calling init more than once (e.g. pager)\n\t\t\t\t\tc.widgetInit[ name ] = true;\n\t\t\t\t\tif ( table.hasInitialized ) {\n\t\t\t\t\t\t// don't reapply widget options on tablesorter init\n\t\t\t\t\t\tts.applyWidgetOptions( table );\n\t\t\t\t\t}\n\t\t\t\t\tif ( typeof widget.init === 'function' ) {\n\t\t\t\t\t\tapplied = true;\n\t\t\t\t\t\tif ( debug ) {\n\t\t\t\t\t\t\tconsole[ console.group ? 'group' : 'log' ]( 'Initializing ' + name + ' widget' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\twidget.init( table, widget, c, wo );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( !init && typeof widget.format === 'function' ) {\n\t\t\t\t\tapplied = true;\n\t\t\t\t\tif ( debug ) {\n\t\t\t\t\t\tconsole[ console.group ? 'group' : 'log' ]( 'Updating ' + name + ' widget' );\n\t\t\t\t\t}\n\t\t\t\t\twidget.format( table, c, wo, false );\n\t\t\t\t}\n\t\t\t\tif ( debug ) {\n\t\t\t\t\tif ( applied ) {\n\t\t\t\t\t\tconsole.log( 'Completed ' + ( init ? 'initializing ' : 'applying ' ) + name + ' widget' + ts.benchmark( time ) );\n\t\t\t\t\t\tif ( console.groupEnd ) { console.groupEnd(); }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tapplyWidget : function( table, init, callback ) {\n\t\t\ttable = $( table )[ 0 ]; // in case this is called externally\n\t\t\tvar indx, len, names, widget, time,\n\t\t\t\tc = table.config,\n\t\t\t\tdebug = ts.debug(c, 'core'),\n\t\t\t\twidgets = [];\n\t\t\t// prevent numerous consecutive widget applications\n\t\t\tif ( init !== false && table.hasInitialized && ( table.isApplyingWidgets || table.isUpdating ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( debug ) { time = new Date(); }\n\t\t\tts.addWidgetFromClass( table );\n\t\t\t// prevent \"tablesorter-ready\" from firing multiple times in a row\n\t\t\tclearTimeout( c.timerReady );\n\t\t\tif ( c.widgets.length ) {\n\t\t\t\ttable.isApplyingWidgets = true;\n\t\t\t\t// ensure unique widget ids\n\t\t\t\tc.widgets = $.grep( c.widgets, function( val, index ) {\n\t\t\t\t\treturn $.inArray( val, c.widgets ) === index;\n\t\t\t\t});\n\t\t\t\tnames = c.widgets || [];\n\t\t\t\tlen = names.length;\n\t\t\t\t// build widget array & add priority as needed\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\t\twidget = ts.getWidgetById( names[ indx ] );\n\t\t\t\t\tif ( widget && widget.id ) {\n\t\t\t\t\t\t// set priority to 10 if not defined\n\t\t\t\t\t\tif ( !widget.priority ) { widget.priority = 10; }\n\t\t\t\t\t\twidgets[ indx ] = widget;\n\t\t\t\t\t} else if ( debug ) {\n\t\t\t\t\t\tconsole.warn( '\"' + names[ indx ] + '\" was enabled, but the widget code has not been loaded!' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// sort widgets by priority\n\t\t\t\twidgets.sort( function( a, b ) {\n\t\t\t\t\treturn a.priority < b.priority ? -1 : a.priority === b.priority ? 0 : 1;\n\t\t\t\t});\n\t\t\t\t// add/update selected widgets\n\t\t\t\tlen = widgets.length;\n\t\t\t\tif ( debug ) {\n\t\t\t\t\tconsole[ console.group ? 'group' : 'log' ]( 'Start ' + ( init ? 'initializing' : 'applying' ) + ' widgets' );\n\t\t\t\t}\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\t\twidget = widgets[ indx ];\n\t\t\t\t\tif ( widget && widget.id ) {\n\t\t\t\t\t\tts.applyWidgetId( table, widget.id, init );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( debug && console.groupEnd ) { console.groupEnd(); }\n\t\t\t}\n\t\t\tc.timerReady = setTimeout( function() {\n\t\t\t\ttable.isApplyingWidgets = false;\n\t\t\t\t$.data( table, 'lastWidgetApplication', new Date() );\n\t\t\t\tc.$table.triggerHandler( 'tablesorter-ready' );\n\t\t\t\t// callback executed on init only\n\t\t\t\tif ( !init && typeof callback === 'function' ) {\n\t\t\t\t\tcallback( table );\n\t\t\t\t}\n\t\t\t\tif ( debug ) {\n\t\t\t\t\twidget = c.widgets.length;\n\t\t\t\t\tconsole.log( 'Completed ' +\n\t\t\t\t\t\t( init === true ? 'initializing ' : 'applying ' ) + widget +\n\t\t\t\t\t\t' widget' + ( widget !== 1 ? 's' : '' ) + ts.benchmark( time ) );\n\t\t\t\t}\n\t\t\t}, 10 );\n\t\t},\n\n\t\tremoveWidget : function( table, name, refreshing ) {\n\t\t\ttable = $( table )[ 0 ];\n\t\t\tvar index, widget, indx, len,\n\t\t\t\tc = table.config;\n\t\t\t// if name === true, add all widgets from $.tablesorter.widgets\n\t\t\tif ( name === true ) {\n\t\t\t\tname = [];\n\t\t\t\tlen = ts.widgets.length;\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\t\twidget = ts.widgets[ indx ];\n\t\t\t\t\tif ( widget && widget.id ) {\n\t\t\t\t\t\tname[ name.length ] = widget.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// name can be either an array of widgets names,\n\t\t\t\t// or a space/comma separated list of widget names\n\t\t\t\tname = ( $.isArray( name ) ? name.join( ',' ) : name || '' ).toLowerCase().split( /[\\s,]+/ );\n\t\t\t}\n\t\t\tlen = name.length;\n\t\t\tfor ( index = 0; index < len; index++ ) {\n\t\t\t\twidget = ts.getWidgetById( name[ index ] );\n\t\t\t\tindx = $.inArray( name[ index ], c.widgets );\n\t\t\t\t// don't remove the widget from config.widget if refreshing\n\t\t\t\tif ( indx >= 0 && refreshing !== true ) {\n\t\t\t\t\tc.widgets.splice( indx, 1 );\n\t\t\t\t}\n\t\t\t\tif ( widget && widget.remove ) {\n\t\t\t\t\tif ( ts.debug(c, 'core') ) {\n\t\t\t\t\t\tconsole.log( ( refreshing ? 'Refreshing' : 'Removing' ) + ' \"' + name[ index ] + '\" widget' );\n\t\t\t\t\t}\n\t\t\t\t\twidget.remove( table, c, c.widgetOptions, refreshing );\n\t\t\t\t\tc.widgetInit[ name[ index ] ] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tc.$table.triggerHandler( 'widgetRemoveEnd', table );\n\t\t},\n\n\t\trefreshWidgets : function( table, doAll, dontapply ) {\n\t\t\ttable = $( table )[ 0 ]; // see issue #243\n\t\t\tvar indx, widget,\n\t\t\t\tc = table.config,\n\t\t\t\tcurWidgets = c.widgets,\n\t\t\t\twidgets = ts.widgets,\n\t\t\t\tlen = widgets.length,\n\t\t\t\tlist = [],\n\t\t\t\tcallback = function( table ) {\n\t\t\t\t\t$( table ).triggerHandler( 'refreshComplete' );\n\t\t\t\t};\n\t\t\t// remove widgets not defined in config.widgets, unless doAll is true\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\twidget = widgets[ indx ];\n\t\t\t\tif ( widget && widget.id && ( doAll || $.inArray( widget.id, curWidgets ) < 0 ) ) {\n\t\t\t\t\tlist[ list.length ] = widget.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tts.removeWidget( table, list.join( ',' ), true );\n\t\t\tif ( dontapply !== true ) {\n\t\t\t\t// call widget init if\n\t\t\t\tts.applyWidget( table, doAll || false, callback );\n\t\t\t\tif ( doAll ) {\n\t\t\t\t\t// apply widget format\n\t\t\t\t\tts.applyWidget( table, false, callback );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcallback( table );\n\t\t\t}\n\t\t},\n\n\t\t/*\n\t\t██  ██ ██████ ██ ██     ██ ██████ ██ ██████ ▄█████\n\t\t██  ██   ██   ██ ██     ██   ██   ██ ██▄▄   ▀█▄\n\t\t██  ██   ██   ██ ██     ██   ██   ██ ██▀▀      ▀█▄\n\t\t▀████▀   ██   ██ ██████ ██   ██   ██ ██████ █████▀\n\t\t*/\n\t\tbenchmark : function( diff ) {\n\t\t\treturn ( ' (' + ( new Date().getTime() - diff.getTime() ) + ' ms)' );\n\t\t},\n\t\t// deprecated ts.log\n\t\tlog : function() {\n\t\t\tconsole.log( arguments );\n\t\t},\n\t\tdebug : function(c, name) {\n\t\t\treturn c && (\n\t\t\t\tc.debug === true ||\n\t\t\t\ttypeof c.debug === 'string' && c.debug.indexOf(name) > -1\n\t\t\t);\n\t\t},\n\n\t\t// $.isEmptyObject from jQuery v1.4\n\t\tisEmptyObject : function( obj ) {\n\t\t\t/*jshint forin: false */\n\t\t\tfor ( var name in obj ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\tisValueInArray : function( column, arry ) {\n\t\t\tvar indx,\n\t\t\t\tlen = arry && arry.length || 0;\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\tif ( arry[ indx ][ 0 ] === column ) {\n\t\t\t\t\treturn indx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t},\n\n\t\tformatFloat : function( str, table ) {\n\t\t\tif ( typeof str !== 'string' || str === '' ) { return str; }\n\t\t\t// allow using formatFloat without a table; defaults to US number format\n\t\t\tvar num,\n\t\t\t\tusFormat = table && table.config ? table.config.usNumberFormat !== false :\n\t\t\t\t\ttypeof table !== 'undefined' ? table : true;\n\t\t\tif ( usFormat ) {\n\t\t\t\t// US Format - 1,234,567.89 -> 1234567.89\n\t\t\t\tstr = str.replace( ts.regex.comma, '' );\n\t\t\t} else {\n\t\t\t\t// German Format = 1.234.567,89 -> 1234567.89\n\t\t\t\t// French Format = 1 234 567,89 -> 1234567.89\n\t\t\t\tstr = str.replace( ts.regex.digitNonUS, '' ).replace( ts.regex.comma, '.' );\n\t\t\t}\n\t\t\tif ( ts.regex.digitNegativeTest.test( str ) ) {\n\t\t\t\t// make (#) into a negative number -> (10) = -10\n\t\t\t\tstr = str.replace( ts.regex.digitNegativeReplace, '-$1' );\n\t\t\t}\n\t\t\tnum = parseFloat( str );\n\t\t\t// return the text instead of zero\n\t\t\treturn isNaN( num ) ? $.trim( str ) : num;\n\t\t},\n\n\t\tisDigit : function( str ) {\n\t\t\t// replace all unwanted chars and match\n\t\t\treturn isNaN( str ) ?\n\t\t\t\tts.regex.digitTest.test( str.toString().replace( ts.regex.digitReplace, '' ) ) :\n\t\t\t\tstr !== '';\n\t\t},\n\n\t\t// computeTableHeaderCellIndexes from:\n\t\t// http://www.javascripttoolbox.com/lib/table/examples.php\n\t\t// http://www.javascripttoolbox.com/temp/table_cellindex.html\n\t\tcomputeColumnIndex : function( $rows, c ) {\n\t\t\tvar i, j, k, l, cell, cells, rowIndex, rowSpan, colSpan, firstAvailCol,\n\t\t\t\t// total columns has been calculated, use it to set the matrixrow\n\t\t\t\tcolumns = c && c.columns || 0,\n\t\t\t\tmatrix = [],\n\t\t\t\tmatrixrow = new Array( columns );\n\t\t\tfor ( i = 0; i < $rows.length; i++ ) {\n\t\t\t\tcells = $rows[ i ].cells;\n\t\t\t\tfor ( j = 0; j < cells.length; j++ ) {\n\t\t\t\t\tcell = cells[ j ];\n\t\t\t\t\trowIndex = i;\n\t\t\t\t\trowSpan = cell.rowSpan || 1;\n\t\t\t\t\tcolSpan = cell.colSpan || 1;\n\t\t\t\t\tif ( typeof matrix[ rowIndex ] === 'undefined' ) {\n\t\t\t\t\t\tmatrix[ rowIndex ] = [];\n\t\t\t\t\t}\n\t\t\t\t\t// Find first available column in the first row\n\t\t\t\t\tfor ( k = 0; k < matrix[ rowIndex ].length + 1; k++ ) {\n\t\t\t\t\t\tif ( typeof matrix[ rowIndex ][ k ] === 'undefined' ) {\n\t\t\t\t\t\t\tfirstAvailCol = k;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// jscs:disable disallowEmptyBlocks\n\t\t\t\t\tif ( columns && cell.cellIndex === firstAvailCol ) {\n\t\t\t\t\t\t// don't to anything\n\t\t\t\t\t} else if ( cell.setAttribute ) {\n\t\t\t\t\t\t// jscs:enable disallowEmptyBlocks\n\t\t\t\t\t\t// add data-column (setAttribute = IE8+)\n\t\t\t\t\t\tcell.setAttribute( 'data-column', firstAvailCol );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// remove once we drop support for IE7 - 1/12/2016\n\t\t\t\t\t\t$( cell ).attr( 'data-column', firstAvailCol );\n\t\t\t\t\t}\n\t\t\t\t\tfor ( k = rowIndex; k < rowIndex + rowSpan; k++ ) {\n\t\t\t\t\t\tif ( typeof matrix[ k ] === 'undefined' ) {\n\t\t\t\t\t\t\tmatrix[ k ] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatrixrow = matrix[ k ];\n\t\t\t\t\t\tfor ( l = firstAvailCol; l < firstAvailCol + colSpan; l++ ) {\n\t\t\t\t\t\t\tmatrixrow[ l ] = 'x';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tts.checkColumnCount($rows, matrix, matrixrow.length);\n\t\t\treturn matrixrow.length;\n\t\t},\n\n\t\tcheckColumnCount : function($rows, matrix, columns) {\n\t\t\t// this DOES NOT report any tbody column issues, except for the math and\n\t\t\t// and column selector widgets\n\t\t\tvar i, len,\n\t\t\t\tvalid = true,\n\t\t\t\tcells = [];\n\t\t\tfor ( i = 0; i < matrix.length; i++ ) {\n\t\t\t\t// some matrix entries are undefined when testing the footer because\n\t\t\t\t// it is using the rowIndex property\n\t\t\t\tif ( matrix[i] ) {\n\t\t\t\t\tlen = matrix[i].length;\n\t\t\t\t\tif ( matrix[i].length !== columns ) {\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( !valid ) {\n\t\t\t\t$rows.each( function( indx, el ) {\n\t\t\t\t\tvar cell = el.parentElement.nodeName;\n\t\t\t\t\tif ( cells.indexOf( cell ) < 0 ) {\n\t\t\t\t\t\tcells.push( cell );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconsole.error(\n\t\t\t\t\t'Invalid or incorrect number of columns in the ' +\n\t\t\t\t\tcells.join( ' or ' ) + '; expected ' + columns +\n\t\t\t\t\t', but found ' + len + ' columns'\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\n\t\t// automatically add a colgroup with col elements set to a percentage width\n\t\tfixColumnWidth : function( table ) {\n\t\t\ttable = $( table )[ 0 ];\n\t\t\tvar overallWidth, percent, $tbodies, len, index,\n\t\t\t\tc = table.config,\n\t\t\t\t$colgroup = c.$table.children( 'colgroup' );\n\t\t\t// remove plugin-added colgroup, in case we need to refresh the widths\n\t\t\tif ( $colgroup.length && $colgroup.hasClass( ts.css.colgroup ) ) {\n\t\t\t\t$colgroup.remove();\n\t\t\t}\n\t\t\tif ( c.widthFixed && c.$table.children( 'colgroup' ).length === 0 ) {\n\t\t\t\t$colgroup = $( '<colgroup class=\"' + ts.css.colgroup + '\">' );\n\t\t\t\toverallWidth = c.$table.width();\n\t\t\t\t// only add col for visible columns - fixes #371\n\t\t\t\t$tbodies = c.$tbodies.find( 'tr:first' ).children( ':visible' );\n\t\t\t\tlen = $tbodies.length;\n\t\t\t\tfor ( index = 0; index < len; index++ ) {\n\t\t\t\t\tpercent = parseInt( ( $tbodies.eq( index ).width() / overallWidth ) * 1000, 10 ) / 10 + '%';\n\t\t\t\t\t$colgroup.append( $( '<col>' ).css( 'width', percent ) );\n\t\t\t\t}\n\t\t\t\tc.$table.prepend( $colgroup );\n\t\t\t}\n\t\t},\n\n\t\t// get sorter, string, empty, etc options for each column from\n\t\t// jQuery data, metadata, header option or header class name ('sorter-false')\n\t\t// priority = jQuery data > meta > headers option > header class name\n\t\tgetData : function( header, configHeader, key ) {\n\t\t\tvar meta, cl4ss,\n\t\t\t\tval = '',\n\t\t\t\t$header = $( header );\n\t\t\tif ( !$header.length ) { return ''; }\n\t\t\tmeta = $.metadata ? $header.metadata() : false;\n\t\t\tcl4ss = ' ' + ( $header.attr( 'class' ) || '' );\n\t\t\tif ( typeof $header.data( key ) !== 'undefined' ||\n\t\t\t\ttypeof $header.data( key.toLowerCase() ) !== 'undefined' ) {\n\t\t\t\t// 'data-lockedOrder' is assigned to 'lockedorder'; but 'data-locked-order' is assigned to 'lockedOrder'\n\t\t\t\t// 'data-sort-initial-order' is assigned to 'sortInitialOrder'\n\t\t\t\tval += $header.data( key ) || $header.data( key.toLowerCase() );\n\t\t\t} else if ( meta && typeof meta[ key ] !== 'undefined' ) {\n\t\t\t\tval += meta[ key ];\n\t\t\t} else if ( configHeader && typeof configHeader[ key ] !== 'undefined' ) {\n\t\t\t\tval += configHeader[ key ];\n\t\t\t} else if ( cl4ss !== ' ' && cl4ss.match( ' ' + key + '-' ) ) {\n\t\t\t\t// include sorter class name 'sorter-text', etc; now works with 'sorter-my-custom-parser'\n\t\t\t\tval = cl4ss.match( new RegExp( '\\\\s' + key + '-([\\\\w-]+)' ) )[ 1 ] || '';\n\t\t\t}\n\t\t\treturn $.trim( val );\n\t\t},\n\n\t\tgetColumnData : function( table, obj, indx, getCell, $headers ) {\n\t\t\tif ( typeof obj !== 'object' || obj === null ) {\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\ttable = $( table )[ 0 ];\n\t\t\tvar $header, key,\n\t\t\t\tc = table.config,\n\t\t\t\t$cells = ( $headers || c.$headers ),\n\t\t\t\t// c.$headerIndexed is not defined initially\n\t\t\t\t$cell = c.$headerIndexed && c.$headerIndexed[ indx ] ||\n\t\t\t\t\t$cells.find( '[data-column=\"' + indx + '\"]:last' );\n\t\t\tif ( typeof obj[ indx ] !== 'undefined' ) {\n\t\t\t\treturn getCell ? obj[ indx ] : obj[ $cells.index( $cell ) ];\n\t\t\t}\n\t\t\tfor ( key in obj ) {\n\t\t\t\tif ( typeof key === 'string' ) {\n\t\t\t\t\t$header = $cell\n\t\t\t\t\t\t// header cell with class/id\n\t\t\t\t\t\t.filter( key )\n\t\t\t\t\t\t// find elements within the header cell with cell/id\n\t\t\t\t\t\t.add( $cell.find( key ) );\n\t\t\t\t\tif ( $header.length ) {\n\t\t\t\t\t\treturn obj[ key ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t},\n\n\t\t// *** Process table ***\n\t\t// add processing indicator\n\t\tisProcessing : function( $table, toggle, $headers ) {\n\t\t\t$table = $( $table );\n\t\t\tvar c = $table[ 0 ].config,\n\t\t\t\t// default to all headers\n\t\t\t\t$header = $headers || $table.find( '.' + ts.css.header );\n\t\t\tif ( toggle ) {\n\t\t\t\t// don't use sortList if custom $headers used\n\t\t\t\tif ( typeof $headers !== 'undefined' && c.sortList.length > 0 ) {\n\t\t\t\t\t// get headers from the sortList\n\t\t\t\t\t$header = $header.filter( function() {\n\t\t\t\t\t\t// get data-column from attr to keep compatibility with jQuery 1.2.6\n\t\t\t\t\t\treturn this.sortDisabled ?\n\t\t\t\t\t\t\tfalse :\n\t\t\t\t\t\t\tts.isValueInArray( parseFloat( $( this ).attr( 'data-column' ) ), c.sortList ) >= 0;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$table.add( $header ).addClass( ts.css.processing + ' ' + c.cssProcessing );\n\t\t\t} else {\n\t\t\t\t$table.add( $header ).removeClass( ts.css.processing + ' ' + c.cssProcessing );\n\t\t\t}\n\t\t},\n\n\t\t// detach tbody but save the position\n\t\t// don't use tbody because there are portions that look for a tbody index (updateCell)\n\t\tprocessTbody : function( table, $tb, getIt ) {\n\t\t\ttable = $( table )[ 0 ];\n\t\t\tif ( getIt ) {\n\t\t\t\ttable.isProcessing = true;\n\t\t\t\t$tb.before( '<colgroup class=\"tablesorter-savemyplace\"/>' );\n\t\t\t\treturn $.fn.detach ? $tb.detach() : $tb.remove();\n\t\t\t}\n\t\t\tvar holdr = $( table ).find( 'colgroup.tablesorter-savemyplace' );\n\t\t\t$tb.insertAfter( holdr );\n\t\t\tholdr.remove();\n\t\t\ttable.isProcessing = false;\n\t\t},\n\n\t\tclearTableBody : function( table ) {\n\t\t\t$( table )[ 0 ].config.$tbodies.children().detach();\n\t\t},\n\n\t\t// used when replacing accented characters during sorting\n\t\tcharacterEquivalents : {\n\t\t\t'a' : '\\u00e1\\u00e0\\u00e2\\u00e3\\u00e4\\u0105\\u00e5', // áàâãäąå\n\t\t\t'A' : '\\u00c1\\u00c0\\u00c2\\u00c3\\u00c4\\u0104\\u00c5', // ÁÀÂÃÄĄÅ\n\t\t\t'c' : '\\u00e7\\u0107\\u010d', // çćč\n\t\t\t'C' : '\\u00c7\\u0106\\u010c', // ÇĆČ\n\t\t\t'e' : '\\u00e9\\u00e8\\u00ea\\u00eb\\u011b\\u0119', // éèêëěę\n\t\t\t'E' : '\\u00c9\\u00c8\\u00ca\\u00cb\\u011a\\u0118', // ÉÈÊËĚĘ\n\t\t\t'i' : '\\u00ed\\u00ec\\u0130\\u00ee\\u00ef\\u0131', // íìİîïı\n\t\t\t'I' : '\\u00cd\\u00cc\\u0130\\u00ce\\u00cf', // ÍÌİÎÏ\n\t\t\t'o' : '\\u00f3\\u00f2\\u00f4\\u00f5\\u00f6\\u014d', // óòôõöō\n\t\t\t'O' : '\\u00d3\\u00d2\\u00d4\\u00d5\\u00d6\\u014c', // ÓÒÔÕÖŌ\n\t\t\t'ss': '\\u00df', // ß (s sharp)\n\t\t\t'SS': '\\u1e9e', // ẞ (Capital sharp s)\n\t\t\t'u' : '\\u00fa\\u00f9\\u00fb\\u00fc\\u016f', // úùûüů\n\t\t\t'U' : '\\u00da\\u00d9\\u00db\\u00dc\\u016e' // ÚÙÛÜŮ\n\t\t},\n\n\t\treplaceAccents : function( str ) {\n\t\t\tvar chr,\n\t\t\t\tacc = '[',\n\t\t\t\teq = ts.characterEquivalents;\n\t\t\tif ( !ts.characterRegex ) {\n\t\t\t\tts.characterRegexArray = {};\n\t\t\t\tfor ( chr in eq ) {\n\t\t\t\t\tif ( typeof chr === 'string' ) {\n\t\t\t\t\t\tacc += eq[ chr ];\n\t\t\t\t\t\tts.characterRegexArray[ chr ] = new RegExp( '[' + eq[ chr ] + ']', 'g' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tts.characterRegex = new RegExp( acc + ']' );\n\t\t\t}\n\t\t\tif ( ts.characterRegex.test( str ) ) {\n\t\t\t\tfor ( chr in eq ) {\n\t\t\t\t\tif ( typeof chr === 'string' ) {\n\t\t\t\t\t\tstr = str.replace( ts.characterRegexArray[ chr ], chr );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str;\n\t\t},\n\n\t\tvalidateOptions : function( c ) {\n\t\t\tvar setting, setting2, typ, timer,\n\t\t\t\t// ignore options containing an array\n\t\t\t\tignore = 'headers sortForce sortList sortAppend widgets'.split( ' ' ),\n\t\t\t\torig = c.originalSettings;\n\t\t\tif ( orig ) {\n\t\t\t\tif ( ts.debug(c, 'core') ) {\n\t\t\t\t\ttimer = new Date();\n\t\t\t\t}\n\t\t\t\tfor ( setting in orig ) {\n\t\t\t\t\ttyp = typeof ts.defaults[setting];\n\t\t\t\t\tif ( typ === 'undefined' ) {\n\t\t\t\t\t\tconsole.warn( 'Tablesorter Warning! \"table.config.' + setting + '\" option not recognized' );\n\t\t\t\t\t} else if ( typ === 'object' ) {\n\t\t\t\t\t\tfor ( setting2 in orig[setting] ) {\n\t\t\t\t\t\t\ttyp = ts.defaults[setting] && typeof ts.defaults[setting][setting2];\n\t\t\t\t\t\t\tif ( $.inArray( setting, ignore ) < 0 && typ === 'undefined' ) {\n\t\t\t\t\t\t\t\tconsole.warn( 'Tablesorter Warning! \"table.config.' + setting + '.' + setting2 + '\" option not recognized' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( ts.debug(c, 'core') ) {\n\t\t\t\t\tconsole.log( 'validate options time:' + ts.benchmark( timer ) );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// restore headers\n\t\trestoreHeaders : function( table ) {\n\t\t\tvar index, $cell,\n\t\t\t\tc = $( table )[ 0 ].config,\n\t\t\t\t$headers = c.$table.find( c.selectorHeaders ),\n\t\t\t\tlen = $headers.length;\n\t\t\t// don't use c.$headers here in case header cells were swapped\n\t\t\tfor ( index = 0; index < len; index++ ) {\n\t\t\t\t$cell = $headers.eq( index );\n\t\t\t\t// only restore header cells if it is wrapped\n\t\t\t\t// because this is also used by the updateAll method\n\t\t\t\tif ( $cell.find( '.' + ts.css.headerIn ).length ) {\n\t\t\t\t\t$cell.html( c.headerContent[ index ] );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdestroy : function( table, removeClasses, callback ) {\n\t\t\ttable = $( table )[ 0 ];\n\t\t\tif ( !table.hasInitialized ) { return; }\n\t\t\t// remove all widgets\n\t\t\tts.removeWidget( table, true, false );\n\t\t\tvar events,\n\t\t\t\t$t = $( table ),\n\t\t\t\tc = table.config,\n\t\t\t\t$h = $t.find( 'thead:first' ),\n\t\t\t\t$r = $h.find( 'tr.' + ts.css.headerRow ).removeClass( ts.css.headerRow + ' ' + c.cssHeaderRow ),\n\t\t\t\t$f = $t.find( 'tfoot:first > tr' ).children( 'th, td' );\n\t\t\tif ( removeClasses === false && $.inArray( 'uitheme', c.widgets ) >= 0 ) {\n\t\t\t\t// reapply uitheme classes, in case we want to maintain appearance\n\t\t\t\t$t.triggerHandler( 'applyWidgetId', [ 'uitheme' ] );\n\t\t\t\t$t.triggerHandler( 'applyWidgetId', [ 'zebra' ] );\n\t\t\t}\n\t\t\t// remove widget added rows, just in case\n\t\t\t$h.find( 'tr' ).not( $r ).remove();\n\t\t\t// disable tablesorter - not using .unbind( namespace ) because namespacing was\n\t\t\t// added in jQuery v1.4.3 - see http://api.jquery.com/event.namespace/\n\t\t\tevents = 'sortReset update updateRows updateAll updateHeaders updateCell addRows updateComplete sorton ' +\n\t\t\t\t'appendCache updateCache applyWidgetId applyWidgets refreshWidgets removeWidget destroy mouseup mouseleave ' +\n\t\t\t\t'keypress sortBegin sortEnd resetToLoadState '.split( ' ' )\n\t\t\t\t.join( c.namespace + ' ' );\n\t\t\t$t\n\t\t\t\t.removeData( 'tablesorter' )\n\t\t\t\t.unbind( events.replace( ts.regex.spaces, ' ' ) );\n\t\t\tc.$headers\n\t\t\t\t.add( $f )\n\t\t\t\t.removeClass( [ ts.css.header, c.cssHeader, c.cssAsc, c.cssDesc, ts.css.sortAsc, ts.css.sortDesc, ts.css.sortNone ].join( ' ' ) )\n\t\t\t\t.removeAttr( 'data-column' )\n\t\t\t\t.removeAttr( 'aria-label' )\n\t\t\t\t.attr( 'aria-disabled', 'true' );\n\t\t\t$r\n\t\t\t\t.find( c.selectorSort )\n\t\t\t\t.unbind( ( 'mousedown mouseup keypress '.split( ' ' ).join( c.namespace + ' ' ) ).replace( ts.regex.spaces, ' ' ) );\n\t\t\tts.restoreHeaders( table );\n\t\t\t$t.toggleClass( ts.css.table + ' ' + c.tableClass + ' tablesorter-' + c.theme, removeClasses === false );\n\t\t\t$t.removeClass(c.namespace.slice(1));\n\t\t\t// clear flag in case the plugin is initialized again\n\t\t\ttable.hasInitialized = false;\n\t\t\tdelete table.config.cache;\n\t\t\tif ( typeof callback === 'function' ) {\n\t\t\t\tcallback( table );\n\t\t\t}\n\t\t\tif ( ts.debug(c, 'core') ) {\n\t\t\t\tconsole.log( 'tablesorter has been removed' );\n\t\t\t}\n\t\t}\n\n\t};\n\n\t$.fn.tablesorter = function( settings ) {\n\t\treturn this.each( function() {\n\t\t\tvar table = this,\n\t\t\t// merge & extend config options\n\t\t\tc = $.extend( true, {}, ts.defaults, settings, ts.instanceMethods );\n\t\t\t// save initial settings\n\t\t\tc.originalSettings = settings;\n\t\t\t// create a table from data (build table widget)\n\t\t\tif ( !table.hasInitialized && ts.buildTable && this.nodeName !== 'TABLE' ) {\n\t\t\t\t// return the table (in case the original target is the table's container)\n\t\t\t\tts.buildTable( table, c );\n\t\t\t} else {\n\t\t\t\tts.setup( table, c );\n\t\t\t}\n\t\t});\n\t};\n\n\t// set up debug logs\n\tif ( !( window.console && window.console.log ) ) {\n\t\t// access $.tablesorter.logs for browsers that don't have a console...\n\t\tts.logs = [];\n\t\t/*jshint -W020 */\n\t\tconsole = {};\n\t\tconsole.log = console.warn = console.error = console.table = function() {\n\t\t\tvar arg = arguments.length > 1 ? arguments : arguments[0];\n\t\t\tts.logs[ ts.logs.length ] = { date: Date.now(), log: arg };\n\t\t};\n\t}\n\n\t// add default parsers\n\tts.addParser({\n\t\tid : 'no-parser',\n\t\tis : function() {\n\t\t\treturn false;\n\t\t},\n\t\tformat : function() {\n\t\t\treturn '';\n\t\t},\n\t\ttype : 'text'\n\t});\n\n\tts.addParser({\n\t\tid : 'text',\n\t\tis : function() {\n\t\t\treturn true;\n\t\t},\n\t\tformat : function( str, table ) {\n\t\t\tvar c = table.config;\n\t\t\tif ( str ) {\n\t\t\t\tstr = $.trim( c.ignoreCase ? str.toLocaleLowerCase() : str );\n\t\t\t\tstr = c.sortLocaleCompare ? ts.replaceAccents( str ) : str;\n\t\t\t}\n\t\t\treturn str;\n\t\t},\n\t\ttype : 'text'\n\t});\n\n\tts.regex.nondigit = /[^\\w,. \\-()]/g;\n\tts.addParser({\n\t\tid : 'digit',\n\t\tis : function( str ) {\n\t\t\treturn ts.isDigit( str );\n\t\t},\n\t\tformat : function( str, table ) {\n\t\t\tvar num = ts.formatFloat( ( str || '' ).replace( ts.regex.nondigit, '' ), table );\n\t\t\treturn str && typeof num === 'number' ? num :\n\t\t\t\tstr ? $.trim( str && table.config.ignoreCase ? str.toLocaleLowerCase() : str ) : str;\n\t\t},\n\t\ttype : 'numeric'\n\t});\n\n\tts.regex.currencyReplace = /[+\\-,. ]/g;\n\tts.regex.currencyTest = /^\\(?\\d+[\\u00a3$\\u20ac\\u00a4\\u00a5\\u00a2?.]|[\\u00a3$\\u20ac\\u00a4\\u00a5\\u00a2?.]\\d+\\)?$/;\n\tts.addParser({\n\t\tid : 'currency',\n\t\tis : function( str ) {\n\t\t\tstr = ( str || '' ).replace( ts.regex.currencyReplace, '' );\n\t\t\t// test for £$€¤¥¢\n\t\t\treturn ts.regex.currencyTest.test( str );\n\t\t},\n\t\tformat : function( str, table ) {\n\t\t\tvar num = ts.formatFloat( ( str || '' ).replace( ts.regex.nondigit, '' ), table );\n\t\t\treturn str && typeof num === 'number' ? num :\n\t\t\t\tstr ? $.trim( str && table.config.ignoreCase ? str.toLocaleLowerCase() : str ) : str;\n\t\t},\n\t\ttype : 'numeric'\n\t});\n\n\t// too many protocols to add them all https://en.wikipedia.org/wiki/URI_scheme\n\t// now, this regex can be updated before initialization\n\tts.regex.urlProtocolTest = /^(https?|ftp|file):\\/\\//;\n\tts.regex.urlProtocolReplace = /(https?|ftp|file):\\/\\/(www\\.)?/;\n\tts.addParser({\n\t\tid : 'url',\n\t\tis : function( str ) {\n\t\t\treturn ts.regex.urlProtocolTest.test( str );\n\t\t},\n\t\tformat : function( str ) {\n\t\t\treturn str ? $.trim( str.replace( ts.regex.urlProtocolReplace, '' ) ) : str;\n\t\t},\n\t\ttype : 'text'\n\t});\n\n\tts.regex.dash = /-/g;\n\tts.regex.isoDate = /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}/;\n\tts.addParser({\n\t\tid : 'isoDate',\n\t\tis : function( str ) {\n\t\t\treturn ts.regex.isoDate.test( str );\n\t\t},\n\t\tformat : function( str ) {\n\t\t\tvar date = str ? new Date( str.replace( ts.regex.dash, '/' ) ) : str;\n\t\t\treturn date instanceof Date && isFinite( date ) ? date.getTime() : str;\n\t\t},\n\t\ttype : 'numeric'\n\t});\n\n\tts.regex.percent = /%/g;\n\tts.regex.percentTest = /(\\d\\s*?%|%\\s*?\\d)/;\n\tts.addParser({\n\t\tid : 'percent',\n\t\tis : function( str ) {\n\t\t\treturn ts.regex.percentTest.test( str ) && str.length < 15;\n\t\t},\n\t\tformat : function( str, table ) {\n\t\t\treturn str ? ts.formatFloat( str.replace( ts.regex.percent, '' ), table ) : str;\n\t\t},\n\t\ttype : 'numeric'\n\t});\n\n\t// added image parser to core v2.17.9\n\tts.addParser({\n\t\tid : 'image',\n\t\tis : function( str, table, node, $node ) {\n\t\t\treturn $node.find( 'img' ).length > 0;\n\t\t},\n\t\tformat : function( str, table, cell ) {\n\t\t\treturn $( cell ).find( 'img' ).attr( table.config.imgAttr || 'alt' ) || str;\n\t\t},\n\t\tparsed : true, // filter widget flag\n\t\ttype : 'text'\n\t});\n\n\tts.regex.dateReplace = /(\\S)([AP]M)$/i; // used by usLongDate & time parser\n\tts.regex.usLongDateTest1 = /^[A-Z]{3,10}\\.?\\s+\\d{1,2},?\\s+(\\d{4})(\\s+\\d{1,2}:\\d{2}(:\\d{2})?(\\s+[AP]M)?)?$/i;\n\tts.regex.usLongDateTest2 = /^\\d{1,2}\\s+[A-Z]{3,10}\\s+\\d{4}/i;\n\tts.addParser({\n\t\tid : 'usLongDate',\n\t\tis : function( str ) {\n\t\t\t// two digit years are not allowed cross-browser\n\t\t\t// Jan 01, 2013 12:34:56 PM or 01 Jan 2013\n\t\t\treturn ts.regex.usLongDateTest1.test( str ) || ts.regex.usLongDateTest2.test( str );\n\t\t},\n\t\tformat : function( str ) {\n\t\t\tvar date = str ? new Date( str.replace( ts.regex.dateReplace, '$1 $2' ) ) : str;\n\t\t\treturn date instanceof Date && isFinite( date ) ? date.getTime() : str;\n\t\t},\n\t\ttype : 'numeric'\n\t});\n\n\t// testing for ##-##-#### or ####-##-##, so it's not perfect; time can be included\n\tts.regex.shortDateTest = /(^\\d{1,2}[\\/\\s]\\d{1,2}[\\/\\s]\\d{4})|(^\\d{4}[\\/\\s]\\d{1,2}[\\/\\s]\\d{1,2})/;\n\t// escaped \"-\" because JSHint in Firefox was showing it as an error\n\tts.regex.shortDateReplace = /[\\-.,]/g;\n\t// XXY covers MDY & DMY formats\n\tts.regex.shortDateXXY = /(\\d{1,2})[\\/\\s](\\d{1,2})[\\/\\s](\\d{4})/;\n\tts.regex.shortDateYMD = /(\\d{4})[\\/\\s](\\d{1,2})[\\/\\s](\\d{1,2})/;\n\tts.convertFormat = function( dateString, format ) {\n\t\tdateString = ( dateString || '' )\n\t\t\t.replace( ts.regex.spaces, ' ' )\n\t\t\t.replace( ts.regex.shortDateReplace, '/' );\n\t\tif ( format === 'mmddyyyy' ) {\n\t\t\tdateString = dateString.replace( ts.regex.shortDateXXY, '$3/$1/$2' );\n\t\t} else if ( format === 'ddmmyyyy' ) {\n\t\t\tdateString = dateString.replace( ts.regex.shortDateXXY, '$3/$2/$1' );\n\t\t} else if ( format === 'yyyymmdd' ) {\n\t\t\tdateString = dateString.replace( ts.regex.shortDateYMD, '$1/$2/$3' );\n\t\t}\n\t\tvar date = new Date( dateString );\n\t\treturn date instanceof Date && isFinite( date ) ? date.getTime() : '';\n\t};\n\n\tts.addParser({\n\t\tid : 'shortDate', // 'mmddyyyy', 'ddmmyyyy' or 'yyyymmdd'\n\t\tis : function( str ) {\n\t\t\tstr = ( str || '' ).replace( ts.regex.spaces, ' ' ).replace( ts.regex.shortDateReplace, '/' );\n\t\t\treturn ts.regex.shortDateTest.test( str );\n\t\t},\n\t\tformat : function( str, table, cell, cellIndex ) {\n\t\t\tif ( str ) {\n\t\t\t\tvar c = table.config,\n\t\t\t\t\t$header = c.$headerIndexed[ cellIndex ],\n\t\t\t\t\tformat = $header.length && $header.data( 'dateFormat' ) ||\n\t\t\t\t\t\tts.getData( $header, ts.getColumnData( table, c.headers, cellIndex ), 'dateFormat' ) ||\n\t\t\t\t\t\tc.dateFormat;\n\t\t\t\t// save format because getData can be slow...\n\t\t\t\tif ( $header.length ) {\n\t\t\t\t\t$header.data( 'dateFormat', format );\n\t\t\t\t}\n\t\t\t\treturn ts.convertFormat( str, format ) || str;\n\t\t\t}\n\t\t\treturn str;\n\t\t},\n\t\ttype : 'numeric'\n\t});\n\n\t// match 24 hour time & 12 hours time + am/pm - see http://regexr.com/3c3tk\n\tts.regex.timeTest = /^(0?[1-9]|1[0-2]):([0-5]\\d)(\\s[AP]M)$|^((?:[01]\\d|[2][0-4]):[0-5]\\d)$/i;\n\tts.regex.timeMatch = /(0?[1-9]|1[0-2]):([0-5]\\d)(\\s[AP]M)|((?:[01]\\d|[2][0-4]):[0-5]\\d)/i;\n\tts.addParser({\n\t\tid : 'time',\n\t\tis : function( str ) {\n\t\t\treturn ts.regex.timeTest.test( str );\n\t\t},\n\t\tformat : function( str ) {\n\t\t\t// isolate time... ignore month, day and year\n\t\t\tvar temp,\n\t\t\t\ttimePart = ( str || '' ).match( ts.regex.timeMatch ),\n\t\t\t\torig = new Date( str ),\n\t\t\t\t// no time component? default to 00:00 by leaving it out, but only if str is defined\n\t\t\t\ttime = str && ( timePart !== null ? timePart[ 0 ] : '00:00 AM' ),\n\t\t\t\tdate = time ? new Date( '2000/01/01 ' + time.replace( ts.regex.dateReplace, '$1 $2' ) ) : time;\n\t\t\tif ( date instanceof Date && isFinite( date ) ) {\n\t\t\t\ttemp = orig instanceof Date && isFinite( orig ) ? orig.getTime() : 0;\n\t\t\t\t// if original string was a valid date, add it to the decimal so the column sorts in some kind of order\n\t\t\t\t// luckily new Date() ignores the decimals\n\t\t\t\treturn temp ? parseFloat( date.getTime() + '.' + orig.getTime() ) : date.getTime();\n\t\t\t}\n\t\t\treturn str;\n\t\t},\n\t\ttype : 'numeric'\n\t});\n\n\tts.addParser({\n\t\tid : 'metadata',\n\t\tis : function() {\n\t\t\treturn false;\n\t\t},\n\t\tformat : function( str, table, cell ) {\n\t\t\tvar c = table.config,\n\t\t\tp = ( !c.parserMetadataName ) ? 'sortValue' : c.parserMetadataName;\n\t\t\treturn $( cell ).metadata()[ p ];\n\t\t},\n\t\ttype : 'numeric'\n\t});\n\n\t/*\n\t\t██████ ██████ █████▄ █████▄ ▄████▄\n\t\t  ▄█▀  ██▄▄   ██▄▄██ ██▄▄██ ██▄▄██\n\t\t▄█▀    ██▀▀   ██▀▀██ ██▀▀█  ██▀▀██\n\t\t██████ ██████ █████▀ ██  ██ ██  ██\n\t\t*/\n\t// add default widgets\n\tts.addWidget({\n\t\tid : 'zebra',\n\t\tpriority : 90,\n\t\tformat : function( table, c, wo ) {\n\t\t\tvar $visibleRows, $row, count, isEven, tbodyIndex, rowIndex, len,\n\t\t\t\tchild = new RegExp( c.cssChildRow, 'i' ),\n\t\t\t\t$tbodies = c.$tbodies.add( $( c.namespace + '_extra_table' ).children( 'tbody:not(.' + c.cssInfoBlock + ')' ) );\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < $tbodies.length; tbodyIndex++ ) {\n\t\t\t\t// loop through the visible rows\n\t\t\t\tcount = 0;\n\t\t\t\t$visibleRows = $tbodies.eq( tbodyIndex ).children( 'tr:visible' ).not( c.selectorRemove );\n\t\t\t\tlen = $visibleRows.length;\n\t\t\t\tfor ( rowIndex = 0; rowIndex < len; rowIndex++ ) {\n\t\t\t\t\t$row = $visibleRows.eq( rowIndex );\n\t\t\t\t\t// style child rows the same way the parent row was styled\n\t\t\t\t\tif ( !child.test( $row[ 0 ].className ) ) { count++; }\n\t\t\t\t\tisEven = ( count % 2 === 0 );\n\t\t\t\t\t$row\n\t\t\t\t\t\t.removeClass( wo.zebra[ isEven ? 1 : 0 ] )\n\t\t\t\t\t\t.addClass( wo.zebra[ isEven ? 0 : 1 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tremove : function( table, c, wo, refreshing ) {\n\t\t\tif ( refreshing ) { return; }\n\t\t\tvar tbodyIndex, $tbody,\n\t\t\t\t$tbodies = c.$tbodies,\n\t\t\t\ttoRemove = ( wo.zebra || [ 'even', 'odd' ] ).join( ' ' );\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < $tbodies.length; tbodyIndex++ ) {\n\t\t\t\t$tbody = ts.processTbody( table, $tbodies.eq( tbodyIndex ), true ); // remove tbody\n\t\t\t\t$tbody.children().removeClass( toRemove );\n\t\t\t\tts.processTbody( table, $tbody, false ); // restore tbody\n\t\t\t}\n\t\t}\n\t});\n\n})( jQuery );\nreturn jQuery.tablesorter;}));\n","(function(factory){if (typeof define === 'function' && define.amd){define(['jquery'], factory);} else if (typeof module === 'object' && typeof module.exports === 'object'){module.exports = factory(require('jquery'));} else {factory(jQuery);}}(function(jQuery){\n\n/*!\n* tablesorter (FORK) pager plugin\n* updated 2018-08-27 (v2.31.0)\n*/\n!function(M){\"use strict\";var T=M.tablesorter;M.extend({tablesorterPager:new function(){this.defaults={container:null,ajaxUrl:null,customAjaxUrl:function(e,t){return t},ajaxError:null,ajaxObject:{dataType:\"json\"},processAjaxOnInit:!0,ajaxProcessing:function(e){return e},output:\"{startRow} to {endRow} of {totalRows} rows\",updateArrows:!0,page:0,pageReset:0,size:10,maxOptionSize:20,savePages:!0,storageKey:\"tablesorter-pager\",fixedHeight:!1,countChildRows:!1,removeRows:!1,cssFirst:\".first\",cssPrev:\".prev\",cssNext:\".next\",cssLast:\".last\",cssGoto:\".gotoPage\",cssPageDisplay:\".pagedisplay\",cssPageSize:\".pagesize\",cssErrorRow:\"tablesorter-errorRow\",cssDisabled:\"disabled\",totalRows:0,totalPages:0,filteredRows:0,filteredPages:0,ajaxCounter:0,currentFilters:[],startRow:0,endRow:0,$size:null,last:{}};var f=\"filterInit filterStart filterEnd sortEnd disablePager enablePager destroyPager updateComplete pageSize pageSet pageAndSize pagerUpdate refreshComplete \",u=this,h=function(e,t,a){var i,s=\"addClass\",r=\"removeClass\",o=t.cssDisabled,n=!!a,l=n||0===t.page,g=I(e,t),c=n||t.page===g-1||0===g;t.updateArrows&&((i=t.$container.find(t.cssFirst+\",\"+t.cssPrev))[l?s:r](o),i.each(function(){this.ariaDisabled=l}),(i=t.$container.find(t.cssNext+\",\"+t.cssLast))[c?s:r](o),i.each(function(){this.ariaDisabled=c}))},w=function(e,t){var a,i,s,r=e.config,o=r.$table.hasClass(\"hasFilters\");if(o&&!t.ajax)if(T.isEmptyObject(r.cache))t.filteredRows=t.totalRows=r.$tbodies.eq(0).children(\"tr\").not(t.countChildRows?\"\":\".\"+r.cssChildRow).length;else for(t.filteredRows=0,s=(a=r.cache[0].normalized).length,i=0;i<s;i++)t.filteredRows+=t.regexRows.test(a[i][r.columns].$row[0].className)?0:1;else o||(t.filteredRows=t.totalRows)},y=function(e,n,t){if(!n.initializing){var a,i,s,r,o,l,g,c,d=e.config,p=d.namespace+\"pager\",f=A(n,n.size,\"get\");if(\"all\"===f&&(f=n.totalRows),n.countChildRows&&(i[i.length]=d.cssChildRow),n.totalPages=Math.ceil(n.totalRows/f),d.totalRows=n.totalRows,N(e,n),w(e,n),d.filteredRows=n.filteredRows,n.filteredPages=Math.ceil(n.filteredRows/f)||0,0<=I(e,n)){if(i=f*n.page>n.filteredRows&&t,n.page=i?n.pageReset||0:n.page,n.startRow=i?f*n.page+1:0===n.filteredRows?0:f*n.page+1,n.endRow=Math.min(n.filteredRows,n.totalRows,f*(n.page+1)),s=n.$container.find(n.cssPageDisplay),\"function\"==typeof n.output?a=n.output(e,n):(c=s.attr(\"data-pager-output\"+(n.filteredRows<n.totalRows?\"-filtered\":\"\"))||n.output,a=(n.ajaxData&&n.ajaxData.output&&n.ajaxData.output||c).replace(/\\{page([\\-+]\\d+)?\\}/gi,function(e,t){return n.totalPages?n.page+(t?parseInt(t,10):1):0}).replace(/\\{\\w+(\\s*:\\s*\\w+)?\\}/gi,function(e){var t,a,i=e.replace(/[{}\\s]/g,\"\"),s=i.split(\":\"),r=n.ajaxData,o=/(rows?|pages?)$/i.test(i)?0:\"\";return/(startRow|page)/.test(s[0])&&\"input\"===s[1]?(t=(\"\"+(\"page\"===s[0]?n.totalPages:n.totalRows)).length,a=\"page\"===s[0]?n.page+1:n.startRow,'<input type=\"text\" class=\"ts-'+s[0]+'\" style=\"max-width:'+t+'em\" value=\"'+a+'\"/>'):1<s.length&&r&&r[s[0]]?r[s[0]][s[1]]:n[i]||(r?r[i]:o)||o})),(r=n.$container.find(n.cssGoto)).length){for(i=\"\",l=(g=b(e,n)).length,o=0;o<l;o++)i+='<option value=\"'+g[o]+'\">'+g[o]+\"</option>\";r.html(i).val(n.page+1)}s.length&&(s[\"INPUT\"===s[0].nodeName?\"val\":\"html\"](a),s.find(\".ts-startRow, .ts-page\").unbind(\"change\"+p).bind(\"change\"+p,function(){var e=M(this).val(),t=M(this).hasClass(\"ts-startRow\")?Math.floor(e/f)+1:e;d.$table.triggerHandler(\"pageSet\"+p,[t])}))}h(e,n),R(e,n),n.initialized&&!1!==t&&(T.debug(d,\"pager\")&&console.log(\"Pager >> Triggering pagerComplete\"),d.$table.triggerHandler(\"pagerComplete\",n),n.savePages&&T.storage&&T.storage(e,n.storageKey,{page:n.page,size:f===n.totalRows?\"all\":f}))}},b=function(e,t){var a,i,s,r,o,n,l=I(e,t)||1,g=5*Math.ceil(l/t.maxOptionSize/5),c=l>t.maxOptionSize,d=t.page+1,p=g,f=l-g,u=[1];for(a=c?g:1;a<=l;)u[u.length]=a,a+=c?g:1;if(u[u.length]=l,c){for(s=[],(p=d-(i=Math.max(Math.floor(t.maxOptionSize/g)-1,5)))<1&&(p=1),l<(f=d+i)&&(f=l),a=p;a<=f;a++)s[s.length]=a;g/2<(o=(u=M.grep(u,function(e,t){return M.inArray(e,u)===t})).length)-(n=s.length)&&o+n>t.maxOptionSize&&(r=Math.floor(o/2)-Math.floor(n/2),Array.prototype.splice.apply(u,[r,n])),u=u.concat(s)}return u=M.grep(u,function(e,t){return M.inArray(e,u)===t}).sort(function(e,t){return e-t})},R=function(e,t){var a,i,s,r=e.config,o=r.$tbodies.eq(0);o.find(\"tr.pagerSavedHeightSpacer\").remove(),t.fixedHeight&&!t.isDisabled&&(i=M.data(e,\"pagerSavedHeight\"))&&(s=0,1<M(e).css(\"border-spacing\").split(\" \").length&&(s=M(e).css(\"border-spacing\").split(\" \")[1].replace(/[^-\\d\\.]/g,\"\")),5<(a=i-o.height()+s*t.size-s)&&M.data(e,\"pagerLastSize\")===t.size&&o.children(\"tr:visible\").length<(\"all\"===t.size?t.totalRows:t.size)&&o.append('<tr class=\"pagerSavedHeightSpacer '+r.selectorRemove.slice(1)+'\" style=\"height:'+a+'px;\"></tr>'))},z=function(e,t){var a,i=e.config,s=i.$tbodies.eq(0);s.find(\"tr.pagerSavedHeightSpacer\").remove(),s.children(\"tr:visible\").length||s.append('<tr class=\"pagerSavedHeightSpacer '+i.selectorRemove.slice(1)+'\"><td>&nbsp</td></tr>'),a=s.children(\"tr\").eq(0).height()*(\"all\"===t.size?t.totalRows:t.size),M.data(e,\"pagerSavedHeight\",a),R(e,t),M.data(e,\"pagerLastSize\",t.size)},x=function(e,t){if(!t.ajaxUrl){var a,i=0,s=e.config,r=s.$tbodies.eq(0).children(\"tr\"),o=r.length,n=\"all\"===t.size?t.totalRows:t.size,l=t.page*n,g=l+n,c=0,d=0;for(t.cacheIndex=[],a=0;a<o;a++)t.regexFiltered.test(r[a].className)||(d===l&&r[a].className.match(s.cssChildRow)?r[a].style.display=\"none\":(r[a].style.display=l<=d&&d<g?\"\":\"none\",c!==d&&l<=d&&d<g&&(t.cacheIndex[t.cacheIndex.length]=a,c=d),(d+=r[a].className.match(s.cssChildRow+\"|\"+s.selectorRemove.slice(1))&&!t.countChildRows?0:1)===g&&\"none\"!==r[a].style.display&&r[a].className.match(T.css.cssHasChild)&&(i=a)));if(0<i&&r[i].className.match(T.css.cssHasChild))for(;++i<o&&r[i].className.match(s.cssChildRow);)r[i].style.display=\"\"}},j=function(e,t){t.size=A(t,t.$container.find(t.cssPageSize).val(),\"get\"),F(e,t.size,t),h(e,t),t.removeRows||(x(e,t),M(e).bind(\"sortEnd filterEnd \".split(\" \").join(e.config.namespace+\"pager \"),function(){x(e,t)}))},P=function(e,t,a,i,s,r){if(\"function\"==typeof a.ajaxProcessing){t.config.$tbodies.eq(0).empty();var o,n,l,g,c,d,p,f,u,h,w,b,R,z,x,j=t.config,P=j.$table,v=\"\",m=a.ajaxProcessing(e,t,i)||[0,[]];if(T.showError(t),r)T.debug(j,\"pager\")&&console.error(\"Pager >> Ajax Error\",i,s,r),T.showError(t,i,s,r),j.$tbodies.eq(0).children(\"tr\").detach(),a.totalRows=0;else{if(M.isArray(m)?(R=m[(l=isNaN(m[0])&&!isNaN(m[1]))?1:0],a.totalRows=isNaN(R)?a.totalRows||0:R,j.totalRows=j.filteredRows=a.filteredRows=a.totalRows,w=0===a.totalRows?[]:m[l?0:1]||[],h=m[2]):(a.ajaxData=m,j.totalRows=a.totalRows=m.total,j.filteredRows=a.filteredRows=void 0!==m.filteredRows?m.filteredRows:m.total,h=m.headers,w=m.rows||[]),b=w&&w.length,w instanceof M)a.processAjaxOnInit&&(j.$tbodies.eq(0).empty(),j.$tbodies.eq(0).append(w));else if(b){for(o=0;o<b;o++){for(v+=\"<tr>\",n=0;n<w[o].length;n++)v+=/^\\s*<td/.test(w[o][n])?M.trim(w[o][n]):\"<td>\"+w[o][n]+\"</td>\";v+=\"</tr>\"}a.processAjaxOnInit&&j.$tbodies.eq(0).html(v)}if(a.processAjaxOnInit=!0,h)for(d=(g=P.hasClass(\"hasStickyHeaders\"))?j.widgetOptions.$sticky.children(\"thead:first\").children(\"tr:not(.\"+j.cssIgnoreRow+\")\").children():\"\",c=P.find(\"tfoot tr:first\").children(),z=(p=j.$headers.filter(\"th \")).length,n=0;n<z;n++)(f=p.eq(n)).find(\".\"+T.css.icon).length?(u=f.find(\".\"+T.css.icon).clone(!0),f.find(\".\"+T.css.headerIn).html(h[n]).append(u),g&&d.length&&(u=d.eq(n).find(\".\"+T.css.icon).clone(!0),d.eq(n).find(\".\"+T.css.headerIn).html(h[n]).append(u))):(f.find(\".\"+T.css.headerIn).html(h[n]),g&&d.length&&(a.$container=a.$container.add(j.widgetOptions.$sticky),d.eq(n).find(\".\"+T.css.headerIn).html(h[n]))),c.eq(n).html(h[n])}j.showProcessing&&T.isProcessing(t),x=A(a,a.size,\"get\"),a.totalPages=\"all\"===x?1:Math.ceil(a.totalRows/x),a.last.totalRows=a.totalRows,a.last.currentFilters=a.currentFilters,a.last.sortList=(j.sortList||[]).join(\",\"),y(t,a,!1),T.updateCache(j,function(){a.initialized&&setTimeout(function(){T.debug(j,\"pager\")&&console.log(\"Pager >> Triggering pagerChange\"),P.triggerHandler(\"pagerChange\",a),T.applyWidget(t),y(t,a,!0)},0)})}a.initialized||q(t,a)},v=function(e,a){var t,i,s=e.config,r=a.ajaxUrl?a.ajaxUrl.replace(/\\{page([\\-+]\\d+)?\\}/,function(e,t){return a.page+(t?parseInt(t,10):0)}).replace(/\\{size\\}/g,a.size):\"\",o=s.sortList,n=a.currentFilters||M(e).data(\"lastSearch\")||[],l=r.match(/\\{\\s*sort(?:List)?\\s*:\\s*(\\w*)\\s*\\}/),g=r.match(/\\{\\s*filter(?:List)?\\s*:\\s*(\\w*)\\s*\\}/),c=[];if(l){for(l=l[1],i=o.length,t=0;t<i;t++)c[c.length]=l+\"[\"+o[t][0]+\"]=\"+o[t][1];r=r.replace(/\\{\\s*sort(?:List)?\\s*:\\s*(\\w*)\\s*\\}/g,c.length?c.join(\"&\"):l),c=[]}if(g){for(g=g[1],i=n.length,t=0;t<i;t++)n[t]&&(c[c.length]=g+\"[\"+t+\"]=\"+encodeURIComponent(n[t]));r=r.replace(/\\{\\s*filter(?:List)?\\s*:\\s*(\\w*)\\s*\\}/g,c.length?c.join(\"&\"):g),a.currentFilters=n}return\"function\"==typeof a.customAjaxUrl&&(r=a.customAjaxUrl(e,r)),T.debug(s,\"pager\")&&console.log(\"Pager >> Ajax url = \"+r),r},m=function(e,t,a){var i,s,r,o,n=M(e),l=e.config,g=T.debug(l,\"pager\"),c=l.$table.hasClass(\"hasFilters\"),d=t&&t.length||0,p=\"all\"===a.size?a.totalRows:a.size,f=a.page*p;if(d<1)g&&console.warn(\"Pager >> No rows for pager to render\");else{if(a.page>=a.totalPages&&E(e,a),a.cacheIndex=[],a.isDisabled=!1,a.initialized&&(g&&console.log(\"Pager >> Triggering pagerChange\"),n.triggerHandler(\"pagerChange\",a)),a.removeRows){for(T.clearTableBody(e),i=T.processTbody(e,l.$tbodies.eq(0),!0),r=s=c?0:f,o=0;o<p&&s<t.length;)c&&a.regexFiltered.test(t[s][0].className)||f<++r&&o<=p&&(o++,a.cacheIndex[a.cacheIndex.length]=s,i.append(t[s])),s++;T.processTbody(e,i,!1)}else x(e,a);y(e,a),e.isUpdating&&(g&&console.log(\"Pager >> Triggering updateComplete\"),n.triggerHandler(\"updateComplete\",[e,!0]))}},C=function(e,t){var a,i,s;for(t.ajax?h(e,t,!0):(M.data(e,\"pagerLastPage\",t.page),M.data(e,\"pagerLastSize\",t.size),t.page=0,t.size=t.totalRows,t.totalPages=1,M(e).addClass(\"pagerDisabled\").removeAttr(\"aria-describedby\").find(\"tr.pagerSavedHeightSpacer\").remove(),m(e,e.config.rowsCopy,t),t.isDisabled=!0,T.applyWidget(e),T.debug(e.config,\"pager\")&&console.log(\"Pager >> Disabled\")),s=(i=t.$container.find(t.cssGoto+\",\"+t.cssPageSize+\", .ts-startRow, .ts-page\")).length,a=0;a<s;a++)i.eq(a).addClass(t.cssDisabled)[0].disabled=!0,i[a].ariaDisabled=!0},S=function(i){var s=i.config,r=s.pager;T.updateCache(s,function(){var e,t=[],a=i.config.cache[0].normalized;for(r.totalRows=a.length,e=0;e<r.totalRows;e++)t[t.length]=a[e][s.columns].$row;s.rowsCopy=t,$(i,r,!0)})},$=function(e,t,a){if(!t.isDisabled){var i,s,r,o,n,l,g,c,d=e.config,p=T.debug(d,\"pager\"),f=M(e),u=t.last;if(!1!==a&&t.initialized&&T.isEmptyObject(d.cache))return S(e);if(!t.ajax||!T.hasWidget(e,\"filter\")||d.widgetOptions.filter_initialized)if(N(e,t),w(e,t),u.currentFilters=\"\"===(u.currentFilters||[]).join(\"\")?[]:u.currentFilters,t.currentFilters=\"\"===(t.currentFilters||[]).join(\"\")?[]:t.currentFilters,u.page!==t.page||u.size!==t.size||u.totalRows!==t.totalRows||(u.currentFilters||[]).join(\",\")!==(t.currentFilters||[]).join(\",\")||(u.ajaxUrl||\"\")!==(t.ajaxObject.url||\"\")||(u.optAjaxUrl||\"\")!==(t.ajaxUrl||\"\")||u.sortList!==(d.sortList||[]).join(\",\"))p&&console.log(\"Pager >> Changing to page \"+t.page),t.last={page:t.page,size:t.size,sortList:(d.sortList||[]).join(\",\"),totalRows:t.totalRows,currentFilters:t.currentFilters||[],ajaxUrl:t.ajaxObject.url||\"\",optAjaxUrl:t.ajaxUrl||\"\"},t.ajax?t.processAjaxOnInit||T.isEmptyObject(t.initialRows)?(n=v(s=e,r=t),l=M(document),g=s.config,c=g.namespace+\"pager\",\"\"!==n&&(g.showProcessing&&T.isProcessing(s,!0),l.bind(\"ajaxError\"+c,function(e,t,a,i){P(null,s,r,t,a,i),l.unbind(\"ajaxError\"+c)}),o=++r.ajaxCounter,r.last.ajaxUrl=n,r.ajaxObject.url=n,r.ajaxObject.success=function(e,t,a){o<r.ajaxCounter||(P(e,s,r,a),l.unbind(\"ajaxError\"+c),\"function\"==typeof r.oldAjaxSuccess&&r.oldAjaxSuccess(e))},T.debug(g,\"pager\")&&console.log(\"Pager >> Ajax initialized\",r.ajaxObject),M.ajax(r.ajaxObject))):(t.processAjaxOnInit=!0,i=t.initialRows,t.totalRows=void 0!==i.total?i.total:p&&console.error(\"Pager >> No initial total page set!\")||0,t.filteredRows=void 0!==i.filtered?i.filtered:p&&console.error(\"Pager >> No initial filtered page set!\")||0,q(e,t)):t.ajax||m(e,d.rowsCopy,t),M.data(e,\"pagerLastPage\",t.page),t.initialized&&!1!==a&&(p&&console.log(\"Pager >> Triggering pageMoved\"),f.triggerHandler(\"pageMoved\",t),T.applyWidget(e),e.isUpdating&&(p&&console.log(\"Pager >> Triggering updateComplete\"),f.triggerHandler(\"updateComplete\",[e,!0])))}},I=function(e,t){return T.hasWidget(e,\"filter\")?Math.min(t.totalPages,t.filteredPages):t.totalPages},N=function(e,t){var a=I(e,t)-1;return t.page=parseInt(t.page,10),(t.page<0||isNaN(t.page))&&(t.page=0),t.page>a&&0<=a&&(t.page=a),t.page},A=function(e,t,a){var i=parseInt(t,10)||e.size||e.settings.size||10;return e.initialized&&(/all/i.test(i+\" \"+t)||i===e.totalRows)?e.$container.find(e.cssPageSize+' option[value=\"all\"]').length?\"all\":e.totalRows:\"get\"===a?i:e.size},F=function(e,t,a){a.size=A(a,t,\"get\"),a.$container.find(a.cssPageSize).val(a.size),M.data(e,\"pagerLastPage\",N(e,a)),M.data(e,\"pagerLastSize\",a.size),a.totalPages=\"all\"===a.size?1:Math.ceil(a.totalRows/a.size),a.filteredPages=\"all\"===a.size?1:Math.ceil(a.filteredRows/a.size)},O=function(e,t){t.page=0,$(e,t)},E=function(e,t){t.page=I(e,t)-1,$(e,t)},L=function(e,t){t.page++;var a=I(e,t)-1;t.page>=a&&(t.page=a),$(e,t)},D=function(e,t){t.page--,t.page<=0&&(t.page=0),$(e,t)},q=function(e,t){t.initialized=!0,t.initializing=!1,T.debug(e.config,\"pager\")&&console.log(\"Pager >> Triggering pagerInitialized\"),M(e).triggerHandler(\"pagerInitialized\",t),T.applyWidget(e),y(e,t)},U=function(e,t,a){var i,s,r,o=e.config;t.$container.find(t.cssGoto+\",\"+t.cssPageSize+\",.ts-startRow, .ts-page\").removeClass(t.cssDisabled).removeAttr(\"disabled\").each(function(){this.ariaDisabled=!1}),t.isDisabled=!1,t.page=M.data(e,\"pagerLastPage\")||t.page||0,s=(r=t.$container.find(t.cssPageSize)).find(\"option[selected]\").val(),t.size=M.data(e,\"pagerLastSize\")||A(t,s,\"get\"),t.totalPages=\"all\"===t.size?1:Math.ceil(I(e,t)/t.size),F(e,t.size,t),e.id&&!o.$table.attr(\"aria-describedby\")&&((i=(r=t.$container.find(t.cssPageDisplay)).attr(\"id\"))||(i=e.id+\"_pager_info\",r.attr(\"id\",i)),o.$table.attr(\"aria-describedby\",i)),z(e,t),a&&(T.update(o),F(e,t.size,t),$(e,t),j(e,t),T.debug(o,\"pager\")&&console.log(\"Pager >> Enabled\"))},H=function(o,e){var t,s,r,a,n=o.config,i=n.widgetOptions,l=T.debug(n,\"pager\"),g=n.pager=M.extend(!0,{},M.tablesorterPager.defaults,e),c=n.$table,d=n.namespace+\"pager\",p=g.$container=M(g.container).addClass(\"tablesorter-pager\").show();g.settings=M.extend(!0,{},M.tablesorterPager.defaults,e),l&&console.log(\"Pager >> Initializing\"),g.oldAjaxSuccess=g.oldAjaxSuccess||g.ajaxObject.success,n.appender=u.appender,g.initializing=!0,g.savePages&&T.storage&&(t=T.storage(o,g.storageKey)||{},g.page=isNaN(t.page)?g.page:t.page,g.size=\"all\"===t.size?t.size:(isNaN(t.size)?g.size:t.size)||g.setSize||10,F(o,g.size,g)),g.regexRows=new RegExp(\"(\"+(i.filter_filteredRow||\"filtered\")+\"|\"+n.selectorRemove.slice(1)+\"|\"+n.cssChildRow+\")\"),g.regexFiltered=new RegExp(i.filter_filteredRow||\"filtered\"),c.unbind(f.split(\" \").join(d+\" \").replace(/\\s+/g,\" \")).bind(\"filterInit filterStart \".split(\" \").join(d+\" \"),function(e,t){var a;if(g.currentFilters=M.isArray(t)?t:n.$table.data(\"lastSearch\"),g.ajax&&\"filterInit\"===e.type)return $(o,g,!1);a=T.filter.equalFilters?T.filter.equalFilters(n,n.lastSearch,g.currentFilters):(n.lastSearch||[]).join(\"\")!==(g.currentFilters||[]).join(\"\"),\"filterStart\"!==e.type||!1===g.pageReset||a||(g.page=g.pageReset)}).bind(\"filterEnd sortEnd \".split(\" \").join(d+\" \"),function(){g.currentFilters=n.$table.data(\"lastSearch\"),(g.initialized||g.initializing)&&(n.delayInit&&n.rowsCopy&&0===n.rowsCopy.length&&S(o),y(o,g,!1),$(o,g,!1),T.applyWidget(o))}).bind(\"disablePager\"+d,function(e){e.stopPropagation(),C(o,g)}).bind(\"enablePager\"+d,function(e){e.stopPropagation(),U(o,g,!0)}).bind(\"destroyPager\"+d,function(e){var t,a,i,s,r;e.stopPropagation(),a=g,i=(t=o).config,s=i.namespace+\"pager\",r=[a.cssFirst,a.cssPrev,a.cssNext,a.cssLast,a.cssGoto,a.cssPageSize].join(\",\"),C(t,a),a.$container.hide().find(r).unbind(s),i.appender=null,i.$table.unbind(s),T.storage&&T.storage(t,a.storageKey,\"\"),delete i.pager,delete i.rowsCopy}).bind(\"resetToLoadState\"+d,function(e){var t,a;e.stopPropagation(),a=g,(t=o).config.pager=M.extend(!0,{},M.tablesorterPager.defaults,a.settings),H(t,a.settings)}).bind(\"updateComplete\"+d,function(e,t,a){if(e.stopPropagation(),t&&!a&&!g.ajax){var i=n.$tbodies.eq(0).children(\"tr\").not(n.selectorRemove);g.totalRows=i.length-(g.countChildRows?0:i.filter(\".\"+n.cssChildRow).length),g.totalPages=\"all\"===g.size?1:Math.ceil(g.totalRows/g.size),i.length&&n.rowsCopy&&0===n.rowsCopy.length&&S(t),g.page>=g.totalPages&&E(t,g),x(t,g),z(t,g),y(t,g,!0)}}).bind(\"pageSize refreshComplete \".split(\" \").join(d+\" \"),function(e,t){e.stopPropagation(),F(o,A(g,t,\"get\"),g),$(o,g),x(o,g),y(o,g,!1)}).bind(\"pageSet pagerUpdate \".split(\" \").join(d+\" \"),function(e,t){e.stopPropagation(),\"pagerUpdate\"===e.type&&(t=void 0===t?g.page+1:t,g.last.page=!0),g.page=(parseInt(t,10)||1)-1,$(o,g,!0),y(o,g,!1)}).bind(\"pageAndSize\"+d,function(e,t,a){e.stopPropagation(),g.page=(parseInt(t,10)||1)-1,F(o,A(g,a,\"get\"),g),$(o,g,!0),x(o,g),y(o,g,!1)}),s=[g.cssFirst,g.cssPrev,g.cssNext,g.cssLast],r=[O,D,L,E],l&&!p.length&&console.warn('Pager >> \"container\" not found'),p.find(s.join(\",\")).attr(\"tabindex\",0).unbind(\"click\"+d).bind(\"click\"+d,function(e){e.stopPropagation();var t,a=M(this),i=s.length;if(!a.hasClass(g.cssDisabled))for(t=0;t<i;t++)if(a.is(s[t])){r[t](o,g);break}}),(a=p.find(g.cssGoto)).length?a.unbind(\"change\"+d).bind(\"change\"+d,function(){g.page=M(this).val()-1,$(o,g,!0),y(o,g,!1)}):l&&console.warn('Pager >> \"goto\" selector not found'),(a=p.find(g.cssPageSize)).length?(a.find(\"option\").removeAttr(\"selected\"),a.unbind(\"change\"+d).bind(\"change\"+d,function(){if(!M(this).hasClass(g.cssDisabled)){var e=M(this).val();F(o,e,g),$(o,g),z(o,g)}return!1})):l&&console.warn('Pager >> \"size\" selector not found'),g.initialized=!1,c.triggerHandler(\"pagerBeforeInitialized\",g),U(o,g,!1),\"string\"==typeof g.ajaxUrl?(g.ajax=!0,n.widgetOptions.filter_serversideFiltering=!0,n.serverSideSorting=!0,$(o,g)):(g.ajax=!1,T.appendCache(n,!0),j(o,g)),g.ajax||g.initialized||(g.initializing=!1,g.initialized=!0,F(o,g.size,g),$(o,g),l&&console.log(\"Pager >> Triggering pagerInitialized\"),n.$table.triggerHandler(\"pagerInitialized\",g),n.widgetOptions.filter_initialized&&T.hasWidget(o,\"filter\")||y(o,g,!1)),n.widgetInit.pager=!0};u.appender=function(e,t){var a=e.config,i=a.pager;i.ajax||(a.rowsCopy=t,i.totalRows=i.countChildRows?a.$tbodies.eq(0).children(\"tr\").length:t.length,i.size=M.data(e,\"pagerLastSize\")||i.size||i.settings.size||10,i.totalPages=\"all\"===i.size?1:Math.ceil(i.totalRows/i.size),m(e,t,i),y(e,i,!1))},u.construct=function(e){return this.each(function(){this.config&&this.hasInitialized&&H(this,e)})}}}),T.showError=function(e,t,a,i){var s=M(e),r=s[0].config,o=r&&r.widgetOptions,n=r.pager&&r.pager.cssErrorRow||o&&o.pager_css&&o.pager_css.errorRow||\"tablesorter-errorRow\",l=typeof t,g=!0,c=\"\",d=function(){r.$table.find(\"thead\").find(r.selectorRemove).remove()};if(s.length){if(\"function\"==typeof r.pager.ajaxError){if(!1===(g=r.pager.ajaxError(r,t,a,i)))return d();c=g}else if(\"function\"==typeof o.pager_ajaxError){if(!1===(g=o.pager_ajaxError(r,t,a,i)))return d();c=g}if(\"\"===c)if(\"object\"===l)c=0===t.status?\"Not connected, verify Network\":404===t.status?\"Requested page not found [404]\":500===t.status?\"Internal Server Error [500]\":\"parsererror\"===i?\"Requested JSON parse failed\":\"timeout\"===i?\"Time out error\":\"abort\"===i?\"Ajax Request aborted\":\"Uncaught error: \"+t.statusText+\" [\"+t.status+\"]\";else{if(\"string\"!==l)return d();c=t}M(/tr\\>/.test(c)?c:'<tr><td colspan=\"'+r.columns+'\">'+c+\"</td></tr>\").click(function(){M(this).remove()}).appendTo(r.$table.find(\"thead:first\")).addClass(n+\" \"+r.selectorRemove.slice(1)).attr({role:\"alert\",\"aria-live\":\"assertive\"})}else console.error(\"tablesorter showError: no table parameter passed\")},M.fn.extend({tablesorterPager:M.tablesorterPager.construct})}(jQuery);return jQuery;}));\n","/*! tablesorter (FORK) - updated 2018-08-27 (v2.31.0)*/\n/* Includes widgets ( storage,uitheme,columns,filter,stickyHeaders,resizable,saveSort ) */\n(function(factory){if (typeof define === 'function' && define.amd){define(['jquery'], factory);} else if (typeof module === 'object' && typeof module.exports === 'object'){module.exports = factory(require('jquery'));} else {factory(jQuery);}}(function(jQuery) {\n/*! Widget: storage - updated 2018-03-18 (v2.30.0) */\n/*global JSON:false */\n;(function ($, window, document) {\n\t'use strict';\n\n\tvar ts = $.tablesorter || {};\n\n\t// update defaults for validator; these values must be falsy!\n\t$.extend(true, ts.defaults, {\n\t\tfixedUrl: '',\n\t\twidgetOptions: {\n\t\t\tstorage_fixedUrl: '',\n\t\t\tstorage_group: '',\n\t\t\tstorage_page: '',\n\t\t\tstorage_storageType: '',\n\t\t\tstorage_tableId: '',\n\t\t\tstorage_useSessionStorage: ''\n\t\t}\n\t});\n\n\t// *** Store data in local storage, with a cookie fallback ***\n\t/* IE7 needs JSON library for JSON.stringify - (http://caniuse.com/#search=json)\n\t   if you need it, then include https://github.com/douglascrockford/JSON-js\n\n\t   $.parseJSON is not available is jQuery versions older than 1.4.1, using older\n\t   versions will only allow storing information for one page at a time\n\n\t   // *** Save data (JSON format only) ***\n\t   // val must be valid JSON... use http://jsonlint.com/ to ensure it is valid\n\t   var val = { \"mywidget\" : \"data1\" }; // valid JSON uses double quotes\n\t   // $.tablesorter.storage(table, key, val);\n\t   $.tablesorter.storage(table, 'tablesorter-mywidget', val);\n\n\t   // *** Get data: $.tablesorter.storage(table, key); ***\n\t   v = $.tablesorter.storage(table, 'tablesorter-mywidget');\n\t   // val may be empty, so also check for your data\n\t   val = (v && v.hasOwnProperty('mywidget')) ? v.mywidget : '';\n\t   alert(val); // 'data1' if saved, or '' if not\n\t*/\n\tts.storage = function(table, key, value, options) {\n\t\ttable = $(table)[0];\n\t\tvar cookieIndex, cookies, date,\n\t\t\thasStorage = false,\n\t\t\tvalues = {},\n\t\t\tc = table.config,\n\t\t\two = c && c.widgetOptions,\n\t\t\tdebug = ts.debug(c, 'storage'),\n\t\t\tstorageType = (\n\t\t\t\t( options && options.storageType ) || ( wo && wo.storage_storageType )\n\t\t\t).toString().charAt(0).toLowerCase(),\n\t\t\t// deprecating \"useSessionStorage\"; any storageType setting overrides it\n\t\t\tsession = storageType ? '' :\n\t\t\t\t( options && options.useSessionStorage ) || ( wo && wo.storage_useSessionStorage ),\n\t\t\t$table = $(table),\n\t\t\t// id from (1) options ID, (2) table 'data-table-group' attribute, (3) widgetOptions.storage_tableId,\n\t\t\t// (4) table ID, then (5) table index\n\t\t\tid = options && options.id ||\n\t\t\t\t$table.attr( options && options.group || wo && wo.storage_group || 'data-table-group') ||\n\t\t\t\two && wo.storage_tableId || table.id || $('.tablesorter').index( $table ),\n\t\t\t// url from (1) options url, (2) table 'data-table-page' attribute, (3) widgetOptions.storage_fixedUrl,\n\t\t\t// (4) table.config.fixedUrl (deprecated), then (5) window location path\n\t\t\turl = options && options.url ||\n\t\t\t\t$table.attr(options && options.page || wo && wo.storage_page || 'data-table-page') ||\n\t\t\t\two && wo.storage_fixedUrl || c && c.fixedUrl || window.location.pathname;\n\n\t\t// skip if using cookies\n\t\tif (storageType !== 'c') {\n\t\t\tstorageType = (storageType === 's' || session) ? 'sessionStorage' : 'localStorage';\n\t\t\t// https://gist.github.com/paulirish/5558557\n\t\t\tif (storageType in window) {\n\t\t\t\ttry {\n\t\t\t\t\twindow[storageType].setItem('_tmptest', 'temp');\n\t\t\t\t\thasStorage = true;\n\t\t\t\t\twindow[storageType].removeItem('_tmptest');\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.warn( storageType + ' is not supported in this browser' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (debug) {\n\t\t\tconsole.log('Storage >> Using', hasStorage ? storageType : 'cookies');\n\t\t}\n\t\t// *** get value ***\n\t\tif ($.parseJSON) {\n\t\t\tif (hasStorage) {\n\t\t\t\tvalues = $.parseJSON( window[storageType][key] || 'null' ) || {};\n\t\t\t} else {\n\t\t\t\t// old browser, using cookies\n\t\t\t\tcookies = document.cookie.split(/[;\\s|=]/);\n\t\t\t\t// add one to get from the key to the value\n\t\t\t\tcookieIndex = $.inArray(key, cookies) + 1;\n\t\t\t\tvalues = (cookieIndex !== 0) ? $.parseJSON(cookies[cookieIndex] || 'null') || {} : {};\n\t\t\t}\n\t\t}\n\t\t// allow value to be an empty string too\n\t\tif (typeof value !== 'undefined' && window.JSON && JSON.hasOwnProperty('stringify')) {\n\t\t\t// add unique identifiers = url pathname > table ID/index on page > data\n\t\t\tif (!values[url]) {\n\t\t\t\tvalues[url] = {};\n\t\t\t}\n\t\t\tvalues[url][id] = value;\n\t\t\t// *** set value ***\n\t\t\tif (hasStorage) {\n\t\t\t\twindow[storageType][key] = JSON.stringify(values);\n\t\t\t} else {\n\t\t\t\tdate = new Date();\n\t\t\t\tdate.setTime(date.getTime() + (31536e+6)); // 365 days\n\t\t\t\tdocument.cookie = key + '=' + (JSON.stringify(values)).replace(/\\\"/g, '\\\"') + '; expires=' + date.toGMTString() + '; path=/';\n\t\t\t}\n\t\t} else {\n\t\t\treturn values && values[url] ? values[url][id] : '';\n\t\t}\n\t};\n\n})(jQuery, window, document);\n\n/*! Widget: uitheme - updated 2018-03-18 (v2.30.0) */\n;(function ($) {\n\t'use strict';\n\tvar ts = $.tablesorter || {};\n\n\tts.themes = {\n\t\t'bootstrap' : {\n\t\t\ttable        : 'table table-bordered table-striped',\n\t\t\tcaption      : 'caption',\n\t\t\t// header class names\n\t\t\theader       : 'bootstrap-header', // give the header a gradient background (theme.bootstrap_2.css)\n\t\t\tsortNone     : '',\n\t\t\tsortAsc      : '',\n\t\t\tsortDesc     : '',\n\t\t\tactive       : '', // applied when column is sorted\n\t\t\thover        : '', // custom css required - a defined bootstrap style may not override other classes\n\t\t\t// icon class names\n\t\t\ticons        : '', // add 'bootstrap-icon-white' to make them white; this icon class is added to the <i> in the header\n\t\t\ticonSortNone : 'bootstrap-icon-unsorted', // class name added to icon when column is not sorted\n\t\t\ticonSortAsc  : 'glyphicon glyphicon-chevron-up', // class name added to icon when column has ascending sort\n\t\t\ticonSortDesc : 'glyphicon glyphicon-chevron-down', // class name added to icon when column has descending sort\n\t\t\tfilterRow    : '', // filter row class\n\t\t\tfooterRow    : '',\n\t\t\tfooterCells  : '',\n\t\t\teven         : '', // even row zebra striping\n\t\t\todd          : ''  // odd row zebra striping\n\t\t},\n\t\t'jui' : {\n\t\t\ttable        : 'ui-widget ui-widget-content ui-corner-all', // table classes\n\t\t\tcaption      : 'ui-widget-content',\n\t\t\t// header class names\n\t\t\theader       : 'ui-widget-header ui-corner-all ui-state-default', // header classes\n\t\t\tsortNone     : '',\n\t\t\tsortAsc      : '',\n\t\t\tsortDesc     : '',\n\t\t\tactive       : 'ui-state-active', // applied when column is sorted\n\t\t\thover        : 'ui-state-hover',  // hover class\n\t\t\t// icon class names\n\t\t\ticons        : 'ui-icon', // icon class added to the <i> in the header\n\t\t\ticonSortNone : 'ui-icon-carat-2-n-s ui-icon-caret-2-n-s', // class name added to icon when column is not sorted\n\t\t\ticonSortAsc  : 'ui-icon-carat-1-n ui-icon-caret-1-n', // class name added to icon when column has ascending sort\n\t\t\ticonSortDesc : 'ui-icon-carat-1-s ui-icon-caret-1-s', // class name added to icon when column has descending sort\n\t\t\tfilterRow    : '',\n\t\t\tfooterRow    : '',\n\t\t\tfooterCells  : '',\n\t\t\teven         : 'ui-widget-content', // even row zebra striping\n\t\t\todd          : 'ui-state-default'   // odd row zebra striping\n\t\t}\n\t};\n\n\t$.extend(ts.css, {\n\t\twrapper : 'tablesorter-wrapper' // ui theme & resizable\n\t});\n\n\tts.addWidget({\n\t\tid: 'uitheme',\n\t\tpriority: 10,\n\t\tformat: function(table, c, wo) {\n\t\t\tvar i, tmp, hdr, icon, time, $header, $icon, $tfoot, $h, oldtheme, oldremove, oldIconRmv, hasOldTheme,\n\t\t\t\tthemesAll = ts.themes,\n\t\t\t\t$table = c.$table.add( $( c.namespace + '_extra_table' ) ),\n\t\t\t\t$headers = c.$headers.add( $( c.namespace + '_extra_headers' ) ),\n\t\t\t\ttheme = c.theme || 'jui',\n\t\t\t\tthemes = themesAll[theme] || {},\n\t\t\t\tremove = $.trim( [ themes.sortNone, themes.sortDesc, themes.sortAsc, themes.active ].join( ' ' ) ),\n\t\t\t\ticonRmv = $.trim( [ themes.iconSortNone, themes.iconSortDesc, themes.iconSortAsc ].join( ' ' ) ),\n\t\t\t\tdebug = ts.debug(c, 'uitheme');\n\t\t\tif (debug) { time = new Date(); }\n\t\t\t// initialization code - run once\n\t\t\tif (!$table.hasClass('tablesorter-' + theme) || c.theme !== c.appliedTheme || !wo.uitheme_applied) {\n\t\t\t\two.uitheme_applied = true;\n\t\t\t\toldtheme = themesAll[c.appliedTheme] || {};\n\t\t\t\thasOldTheme = !$.isEmptyObject(oldtheme);\n\t\t\t\toldremove =  hasOldTheme ? [ oldtheme.sortNone, oldtheme.sortDesc, oldtheme.sortAsc, oldtheme.active ].join( ' ' ) : '';\n\t\t\t\toldIconRmv = hasOldTheme ? [ oldtheme.iconSortNone, oldtheme.iconSortDesc, oldtheme.iconSortAsc ].join( ' ' ) : '';\n\t\t\t\tif (hasOldTheme) {\n\t\t\t\t\two.zebra[0] = $.trim( ' ' + wo.zebra[0].replace(' ' + oldtheme.even, '') );\n\t\t\t\t\two.zebra[1] = $.trim( ' ' + wo.zebra[1].replace(' ' + oldtheme.odd, '') );\n\t\t\t\t\tc.$tbodies.children().removeClass( [ oldtheme.even, oldtheme.odd ].join(' ') );\n\t\t\t\t}\n\t\t\t\t// update zebra stripes\n\t\t\t\tif (themes.even) { wo.zebra[0] += ' ' + themes.even; }\n\t\t\t\tif (themes.odd) { wo.zebra[1] += ' ' + themes.odd; }\n\t\t\t\t// add caption style\n\t\t\t\t$table.children('caption')\n\t\t\t\t\t.removeClass(oldtheme.caption || '')\n\t\t\t\t\t.addClass(themes.caption);\n\t\t\t\t// add table/footer class names\n\t\t\t\t$tfoot = $table\n\t\t\t\t\t// remove other selected themes\n\t\t\t\t\t.removeClass( (c.appliedTheme ? 'tablesorter-' + (c.appliedTheme || '') : '') + ' ' + (oldtheme.table || '') )\n\t\t\t\t\t.addClass('tablesorter-' + theme + ' ' + (themes.table || '')) // add theme widget class name\n\t\t\t\t\t.children('tfoot');\n\t\t\t\tc.appliedTheme = c.theme;\n\n\t\t\t\tif ($tfoot.length) {\n\t\t\t\t\t$tfoot\n\t\t\t\t\t\t// if oldtheme.footerRow or oldtheme.footerCells are undefined, all class names are removed\n\t\t\t\t\t\t.children('tr').removeClass(oldtheme.footerRow || '').addClass(themes.footerRow)\n\t\t\t\t\t\t.children('th, td').removeClass(oldtheme.footerCells || '').addClass(themes.footerCells);\n\t\t\t\t}\n\t\t\t\t// update header classes\n\t\t\t\t$headers\n\t\t\t\t\t.removeClass( (hasOldTheme ? [ oldtheme.header, oldtheme.hover, oldremove ].join(' ') : '') || '' )\n\t\t\t\t\t.addClass(themes.header)\n\t\t\t\t\t.not('.sorter-false')\n\t\t\t\t\t.unbind('mouseenter.tsuitheme mouseleave.tsuitheme')\n\t\t\t\t\t.bind('mouseenter.tsuitheme mouseleave.tsuitheme', function(event) {\n\t\t\t\t\t\t// toggleClass with switch added in jQuery 1.3\n\t\t\t\t\t\t$(this)[ event.type === 'mouseenter' ? 'addClass' : 'removeClass' ](themes.hover || '');\n\t\t\t\t\t});\n\n\t\t\t\t$headers.each(function() {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\tif (!$this.find('.' + ts.css.wrapper).length) {\n\t\t\t\t\t\t// Firefox needs this inner div to position the icon & resizer correctly\n\t\t\t\t\t\t$this.wrapInner('<div class=\"' + ts.css.wrapper + '\" style=\"position:relative;height:100%;width:100%\"></div>');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (c.cssIcon) {\n\t\t\t\t\t// if c.cssIcon is '', then no <i> is added to the header\n\t\t\t\t\t$headers\n\t\t\t\t\t\t.find('.' + ts.css.icon)\n\t\t\t\t\t\t.removeClass(hasOldTheme ? [ oldtheme.icons, oldIconRmv ].join(' ') : '')\n\t\t\t\t\t\t.addClass(themes.icons || '');\n\t\t\t\t}\n\t\t\t\t// filter widget initializes after uitheme\n\t\t\t\tif (ts.hasWidget( c.table, 'filter' )) {\n\t\t\t\t\ttmp = function() {\n\t\t\t\t\t\t$table.children('thead').children('.' + ts.css.filterRow)\n\t\t\t\t\t\t\t.removeClass(hasOldTheme ? oldtheme.filterRow || '' : '')\n\t\t\t\t\t\t\t.addClass(themes.filterRow || '');\n\t\t\t\t\t};\n\t\t\t\t\tif (wo.filter_initialized) {\n\t\t\t\t\t\ttmp();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$table.one('filterInit', function() {\n\t\t\t\t\t\t\ttmp();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (i = 0; i < c.columns; i++) {\n\t\t\t\t$header = c.$headers\n\t\t\t\t\t.add($(c.namespace + '_extra_headers'))\n\t\t\t\t\t.not('.sorter-false')\n\t\t\t\t\t.filter('[data-column=\"' + i + '\"]');\n\t\t\t\t$icon = (ts.css.icon) ? $header.find('.' + ts.css.icon) : $();\n\t\t\t\t$h = $headers.not('.sorter-false').filter('[data-column=\"' + i + '\"]:last');\n\t\t\t\tif ($h.length) {\n\t\t\t\t\t$header.removeClass(remove);\n\t\t\t\t\t$icon.removeClass(iconRmv);\n\t\t\t\t\tif ($h[0].sortDisabled) {\n\t\t\t\t\t\t// no sort arrows for disabled columns!\n\t\t\t\t\t\t$icon.removeClass(themes.icons || '');\n\t\t\t\t\t} else {\n\t\t\t\t\t\thdr = themes.sortNone;\n\t\t\t\t\t\ticon = themes.iconSortNone;\n\t\t\t\t\t\tif ($h.hasClass(ts.css.sortAsc)) {\n\t\t\t\t\t\t\thdr = [ themes.sortAsc, themes.active ].join(' ');\n\t\t\t\t\t\t\ticon = themes.iconSortAsc;\n\t\t\t\t\t\t} else if ($h.hasClass(ts.css.sortDesc)) {\n\t\t\t\t\t\t\thdr = [ themes.sortDesc, themes.active ].join(' ');\n\t\t\t\t\t\t\ticon = themes.iconSortDesc;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$header.addClass(hdr);\n\t\t\t\t\t\t$icon.addClass(icon || '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (debug) {\n\t\t\t\tconsole.log('uitheme >> Applied ' + theme + ' theme' + ts.benchmark(time));\n\t\t\t}\n\t\t},\n\t\tremove: function(table, c, wo, refreshing) {\n\t\t\tif (!wo.uitheme_applied) { return; }\n\t\t\tvar $table = c.$table,\n\t\t\t\ttheme = c.appliedTheme || 'jui',\n\t\t\t\tthemes = ts.themes[ theme ] || ts.themes.jui,\n\t\t\t\t$headers = $table.children('thead').children(),\n\t\t\t\tremove = themes.sortNone + ' ' + themes.sortDesc + ' ' + themes.sortAsc,\n\t\t\t\ticonRmv = themes.iconSortNone + ' ' + themes.iconSortDesc + ' ' + themes.iconSortAsc;\n\t\t\t$table.removeClass('tablesorter-' + theme + ' ' + themes.table);\n\t\t\two.uitheme_applied = false;\n\t\t\tif (refreshing) { return; }\n\t\t\t$table.find(ts.css.header).removeClass(themes.header);\n\t\t\t$headers\n\t\t\t\t.unbind('mouseenter.tsuitheme mouseleave.tsuitheme') // remove hover\n\t\t\t\t.removeClass(themes.hover + ' ' + remove + ' ' + themes.active)\n\t\t\t\t.filter('.' + ts.css.filterRow)\n\t\t\t\t.removeClass(themes.filterRow);\n\t\t\t$headers.find('.' + ts.css.icon).removeClass(themes.icons + ' ' + iconRmv);\n\t\t}\n\t});\n\n})(jQuery);\n\n/*! Widget: columns - updated 5/24/2017 (v2.28.11) */\n;(function ($) {\n\t'use strict';\n\tvar ts = $.tablesorter || {};\n\n\tts.addWidget({\n\t\tid: 'columns',\n\t\tpriority: 65,\n\t\toptions : {\n\t\t\tcolumns : [ 'primary', 'secondary', 'tertiary' ]\n\t\t},\n\t\tformat: function(table, c, wo) {\n\t\t\tvar $tbody, tbodyIndex, $rows, rows, $row, $cells, remove, indx,\n\t\t\t$table = c.$table,\n\t\t\t$tbodies = c.$tbodies,\n\t\t\tsortList = c.sortList,\n\t\t\tlen = sortList.length,\n\t\t\t// removed c.widgetColumns support\n\t\t\tcss = wo && wo.columns || [ 'primary', 'secondary', 'tertiary' ],\n\t\t\tlast = css.length - 1;\n\t\t\tremove = css.join(' ');\n\t\t\t// check if there is a sort (on initialization there may not be one)\n\t\t\tfor (tbodyIndex = 0; tbodyIndex < $tbodies.length; tbodyIndex++ ) {\n\t\t\t\t$tbody = ts.processTbody(table, $tbodies.eq(tbodyIndex), true); // detach tbody\n\t\t\t\t$rows = $tbody.children('tr');\n\t\t\t\t// loop through the visible rows\n\t\t\t\t$rows.each(function() {\n\t\t\t\t\t$row = $(this);\n\t\t\t\t\tif (this.style.display !== 'none') {\n\t\t\t\t\t\t// remove all columns class names\n\t\t\t\t\t\t$cells = $row.children().removeClass(remove);\n\t\t\t\t\t\t// add appropriate column class names\n\t\t\t\t\t\tif (sortList && sortList[0]) {\n\t\t\t\t\t\t\t// primary sort column class\n\t\t\t\t\t\t\t$cells.eq(sortList[0][0]).addClass(css[0]);\n\t\t\t\t\t\t\tif (len > 1) {\n\t\t\t\t\t\t\t\tfor (indx = 1; indx < len; indx++) {\n\t\t\t\t\t\t\t\t\t// secondary, tertiary, etc sort column classes\n\t\t\t\t\t\t\t\t\t$cells.eq(sortList[indx][0]).addClass( css[indx] || css[last] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tts.processTbody(table, $tbody, false);\n\t\t\t}\n\t\t\t// add classes to thead and tfoot\n\t\t\trows = wo.columns_thead !== false ? [ 'thead tr' ] : [];\n\t\t\tif (wo.columns_tfoot !== false) {\n\t\t\t\trows.push('tfoot tr');\n\t\t\t}\n\t\t\tif (rows.length) {\n\t\t\t\t$rows = $table.find( rows.join(',') ).children().removeClass(remove);\n\t\t\t\tif (len) {\n\t\t\t\t\tfor (indx = 0; indx < len; indx++) {\n\t\t\t\t\t\t// add primary. secondary, tertiary, etc sort column classes\n\t\t\t\t\t\t$rows.filter('[data-column=\"' + sortList[indx][0] + '\"]').addClass(css[indx] || css[last]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tremove: function(table, c, wo) {\n\t\t\tvar tbodyIndex, $tbody,\n\t\t\t\t$tbodies = c.$tbodies,\n\t\t\t\tremove = (wo.columns || [ 'primary', 'secondary', 'tertiary' ]).join(' ');\n\t\t\tc.$headers.removeClass(remove);\n\t\t\tc.$table.children('tfoot').children('tr').children('th, td').removeClass(remove);\n\t\t\tfor (tbodyIndex = 0; tbodyIndex < $tbodies.length; tbodyIndex++ ) {\n\t\t\t\t$tbody = ts.processTbody(table, $tbodies.eq(tbodyIndex), true); // remove tbody\n\t\t\t\t$tbody.children('tr').each(function() {\n\t\t\t\t\t$(this).children().removeClass(remove);\n\t\t\t\t});\n\t\t\t\tts.processTbody(table, $tbody, false); // restore tbody\n\t\t\t}\n\t\t}\n\t});\n\n})(jQuery);\n\n/*! Widget: filter - updated 2018-03-18 (v2.30.0) *//*\n * Requires tablesorter v2.8+ and jQuery 1.7+\n * by Rob Garrison\n */\n;( function ( $ ) {\n\t'use strict';\n\tvar tsf, tsfRegex,\n\t\tts = $.tablesorter || {},\n\t\ttscss = ts.css,\n\t\ttskeyCodes = ts.keyCodes;\n\n\t$.extend( tscss, {\n\t\tfilterRow      : 'tablesorter-filter-row',\n\t\tfilter         : 'tablesorter-filter',\n\t\tfilterDisabled : 'disabled',\n\t\tfilterRowHide  : 'hideme'\n\t});\n\n\t$.extend( tskeyCodes, {\n\t\tbackSpace : 8,\n\t\tescape : 27,\n\t\tspace : 32,\n\t\tleft : 37,\n\t\tdown : 40\n\t});\n\n\tts.addWidget({\n\t\tid: 'filter',\n\t\tpriority: 50,\n\t\toptions : {\n\t\t\tfilter_cellFilter    : '',    // css class name added to the filter cell ( string or array )\n\t\t\tfilter_childRows     : false, // if true, filter includes child row content in the search\n\t\t\tfilter_childByColumn : false, // ( filter_childRows must be true ) if true = search child rows by column; false = search all child row text grouped\n\t\t\tfilter_childWithSibs : true,  // if true, include matching child row siblings\n\t\t\tfilter_columnAnyMatch: true,  // if true, allows using '#:{query}' in AnyMatch searches ( column:query )\n\t\t\tfilter_columnFilters : true,  // if true, a filter will be added to the top of each table column\n\t\t\tfilter_cssFilter     : '',    // css class name added to the filter row & each input in the row ( tablesorter-filter is ALWAYS added )\n\t\t\tfilter_defaultAttrib : 'data-value', // data attribute in the header cell that contains the default filter value\n\t\t\tfilter_defaultFilter : {},    // add a default column filter type '~{query}' to make fuzzy searches default; '{q1} AND {q2}' to make all searches use a logical AND.\n\t\t\tfilter_excludeFilter : {},    // filters to exclude, per column\n\t\t\tfilter_external      : '',    // jQuery selector string ( or jQuery object ) of external filters\n\t\t\tfilter_filteredRow   : 'filtered', // class added to filtered rows; define in css with \"display:none\" to hide the filtered-out rows\n\t\t\tfilter_filterLabel   : 'Filter \"{{label}}\" column by...', // Aria-label added to filter input/select; see #1495\n\t\t\tfilter_formatter     : null,  // add custom filter elements to the filter row\n\t\t\tfilter_functions     : null,  // add custom filter functions using this option\n\t\t\tfilter_hideEmpty     : true,  // hide filter row when table is empty\n\t\t\tfilter_hideFilters   : false, // collapse filter row when mouse leaves the area\n\t\t\tfilter_ignoreCase    : true,  // if true, make all searches case-insensitive\n\t\t\tfilter_liveSearch    : true,  // if true, search column content while the user types ( with a delay )\n\t\t\tfilter_matchType     : { 'input': 'exact', 'select': 'exact' }, // global query settings ('exact' or 'match'); overridden by \"filter-match\" or \"filter-exact\" class\n\t\t\tfilter_onlyAvail     : 'filter-onlyAvail', // a header with a select dropdown & this class name will only show available ( visible ) options within the drop down\n\t\t\tfilter_placeholder   : { search : '', select : '' }, // default placeholder text ( overridden by any header 'data-placeholder' setting )\n\t\t\tfilter_reset         : null,  // jQuery selector string of an element used to reset the filters\n\t\t\tfilter_resetOnEsc    : true,  // Reset filter input when the user presses escape - normalized across browsers\n\t\t\tfilter_saveFilters   : false, // Use the $.tablesorter.storage utility to save the most recent filters\n\t\t\tfilter_searchDelay   : 300,   // typing delay in milliseconds before starting a search\n\t\t\tfilter_searchFiltered: true,  // allow searching through already filtered rows in special circumstances; will speed up searching in large tables if true\n\t\t\tfilter_selectSource  : null,  // include a function to return an array of values to be added to the column filter select\n\t\t\tfilter_selectSourceSeparator : '|', // filter_selectSource array text left of the separator is added to the option value, right into the option text\n\t\t\tfilter_serversideFiltering : false, // if true, must perform server-side filtering b/c client-side filtering is disabled, but the ui and events will still be used.\n\t\t\tfilter_startsWith    : false, // if true, filter start from the beginning of the cell contents\n\t\t\tfilter_useParsedData : false  // filter all data using parsed content\n\t\t},\n\t\tformat: function( table, c, wo ) {\n\t\t\tif ( !c.$table.hasClass( 'hasFilters' ) ) {\n\t\t\t\ttsf.init( table, c, wo );\n\t\t\t}\n\t\t},\n\t\tremove: function( table, c, wo, refreshing ) {\n\t\t\tvar tbodyIndex, $tbody,\n\t\t\t\t$table = c.$table,\n\t\t\t\t$tbodies = c.$tbodies,\n\t\t\t\tevents = (\n\t\t\t\t\t'addRows updateCell update updateRows updateComplete appendCache filterReset ' +\n\t\t\t\t\t'filterAndSortReset filterFomatterUpdate filterEnd search stickyHeadersInit '\n\t\t\t\t).split( ' ' ).join( c.namespace + 'filter ' );\n\t\t\t$table\n\t\t\t\t.removeClass( 'hasFilters' )\n\t\t\t\t// add filter namespace to all BUT search\n\t\t\t\t.unbind( events.replace( ts.regex.spaces, ' ' ) )\n\t\t\t\t// remove the filter row even if refreshing, because the column might have been moved\n\t\t\t\t.find( '.' + tscss.filterRow ).remove();\n\t\t\two.filter_initialized = false;\n\t\t\tif ( refreshing ) { return; }\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < $tbodies.length; tbodyIndex++ ) {\n\t\t\t\t$tbody = ts.processTbody( table, $tbodies.eq( tbodyIndex ), true ); // remove tbody\n\t\t\t\t$tbody.children().removeClass( wo.filter_filteredRow ).show();\n\t\t\t\tts.processTbody( table, $tbody, false ); // restore tbody\n\t\t\t}\n\t\t\tif ( wo.filter_reset ) {\n\t\t\t\t$( document ).undelegate( wo.filter_reset, 'click' + c.namespace + 'filter' );\n\t\t\t}\n\t\t}\n\t});\n\n\ttsf = ts.filter = {\n\n\t\t// regex used in filter 'check' functions - not for general use and not documented\n\t\tregex: {\n\t\t\tregex     : /^\\/((?:\\\\\\/|[^\\/])+)\\/([migyu]{0,5})?$/, // regex to test for regex\n\t\t\tchild     : /tablesorter-childRow/, // child row class name; this gets updated in the script\n\t\t\tfiltered  : /filtered/, // filtered (hidden) row class name; updated in the script\n\t\t\ttype      : /undefined|number/, // check type\n\t\t\texact     : /(^[\\\"\\'=]+)|([\\\"\\'=]+$)/g, // exact match (allow '==')\n\t\t\toperators : /[<>=]/g, // replace operators\n\t\t\tquery     : '(q|query)', // replace filter queries\n\t\t\twild01    : /\\?/g, // wild card match 0 or 1\n\t\t\twild0More : /\\*/g, // wild care match 0 or more\n\t\t\tquote     : /\\\"/g,\n\t\t\tisNeg1    : /(>=?\\s*-\\d)/,\n\t\t\tisNeg2    : /(<=?\\s*\\d)/\n\t\t},\n\t\t// function( c, data ) { }\n\t\t// c = table.config\n\t\t// data.$row = jQuery object of the row currently being processed\n\t\t// data.$cells = jQuery object of all cells within the current row\n\t\t// data.filters = array of filters for all columns ( some may be undefined )\n\t\t// data.filter = filter for the current column\n\t\t// data.iFilter = same as data.filter, except lowercase ( if wo.filter_ignoreCase is true )\n\t\t// data.exact = table cell text ( or parsed data if column parser enabled; may be a number & not a string )\n\t\t// data.iExact = same as data.exact, except lowercase ( if wo.filter_ignoreCase is true; may be a number & not a string )\n\t\t// data.cache = table cell text from cache, so it has been parsed ( & in all lower case if c.ignoreCase is true )\n\t\t// data.cacheArray = An array of parsed content from each table cell in the row being processed\n\t\t// data.index = column index; table = table element ( DOM )\n\t\t// data.parsed = array ( by column ) of boolean values ( from filter_useParsedData or 'filter-parsed' class )\n\t\ttypes: {\n\t\t\tor : function( c, data, vars ) {\n\t\t\t\t// look for \"|\", but not if it is inside of a regular expression\n\t\t\t\tif ( ( tsfRegex.orTest.test( data.iFilter ) || tsfRegex.orSplit.test( data.filter ) ) &&\n\t\t\t\t\t// this test for regex has potential to slow down the overall search\n\t\t\t\t\t!tsfRegex.regex.test( data.filter ) ) {\n\t\t\t\t\tvar indx, filterMatched, query, regex,\n\t\t\t\t\t\t// duplicate data but split filter\n\t\t\t\t\t\tdata2 = $.extend( {}, data ),\n\t\t\t\t\t\tfilter = data.filter.split( tsfRegex.orSplit ),\n\t\t\t\t\t\tiFilter = data.iFilter.split( tsfRegex.orSplit ),\n\t\t\t\t\t\tlen = filter.length;\n\t\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\t\t\tdata2.nestedFilters = true;\n\t\t\t\t\t\tdata2.filter = '' + ( tsf.parseFilter( c, filter[ indx ], data ) || '' );\n\t\t\t\t\t\tdata2.iFilter = '' + ( tsf.parseFilter( c, iFilter[ indx ], data ) || '' );\n\t\t\t\t\t\tquery = '(' + ( tsf.parseFilter( c, data2.filter, data ) || '' ) + ')';\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// use try/catch, because query may not be a valid regex if \"|\" is contained within a partial regex search,\n\t\t\t\t\t\t\t// e.g \"/(Alex|Aar\" -> Uncaught SyntaxError: Invalid regular expression: /(/(Alex)/: Unterminated group\n\t\t\t\t\t\t\tregex = new RegExp( data.isMatch ? query : '^' + query + '$', c.widgetOptions.filter_ignoreCase ? 'i' : '' );\n\t\t\t\t\t\t\t// filterMatched = data2.filter === '' && indx > 0 ? true\n\t\t\t\t\t\t\t// look for an exact match with the 'or' unless the 'filter-match' class is found\n\t\t\t\t\t\t\tfilterMatched = regex.test( data2.exact ) || tsf.processTypes( c, data2, vars );\n\t\t\t\t\t\t\tif ( filterMatched ) {\n\t\t\t\t\t\t\t\treturn filterMatched;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch ( error ) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// may be null from processing types\n\t\t\t\t\treturn filterMatched || false;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t// Look for an AND or && operator ( logical and )\n\t\t\tand : function( c, data, vars ) {\n\t\t\t\tif ( tsfRegex.andTest.test( data.filter ) ) {\n\t\t\t\t\tvar indx, filterMatched, result, query, regex,\n\t\t\t\t\t\t// duplicate data but split filter\n\t\t\t\t\t\tdata2 = $.extend( {}, data ),\n\t\t\t\t\t\tfilter = data.filter.split( tsfRegex.andSplit ),\n\t\t\t\t\t\tiFilter = data.iFilter.split( tsfRegex.andSplit ),\n\t\t\t\t\t\tlen = filter.length;\n\t\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\t\t\tdata2.nestedFilters = true;\n\t\t\t\t\t\tdata2.filter = '' + ( tsf.parseFilter( c, filter[ indx ], data ) || '' );\n\t\t\t\t\t\tdata2.iFilter = '' + ( tsf.parseFilter( c, iFilter[ indx ], data ) || '' );\n\t\t\t\t\t\tquery = ( '(' + ( tsf.parseFilter( c, data2.filter, data ) || '' ) + ')' )\n\t\t\t\t\t\t\t// replace wild cards since /(a*)/i will match anything\n\t\t\t\t\t\t\t.replace( tsfRegex.wild01, '\\\\S{1}' ).replace( tsfRegex.wild0More, '\\\\S*' );\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// use try/catch just in case RegExp is invalid\n\t\t\t\t\t\t\tregex = new RegExp( data.isMatch ? query : '^' + query + '$', c.widgetOptions.filter_ignoreCase ? 'i' : '' );\n\t\t\t\t\t\t\t// look for an exact match with the 'and' unless the 'filter-match' class is found\n\t\t\t\t\t\t\tresult = ( regex.test( data2.exact ) || tsf.processTypes( c, data2, vars ) );\n\t\t\t\t\t\t\tif ( indx === 0 ) {\n\t\t\t\t\t\t\t\tfilterMatched = result;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfilterMatched = filterMatched && result;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch ( error ) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// may be null from processing types\n\t\t\t\t\treturn filterMatched || false;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t// Look for regex\n\t\t\tregex: function( c, data ) {\n\t\t\t\tif ( tsfRegex.regex.test( data.filter ) ) {\n\t\t\t\t\tvar matches,\n\t\t\t\t\t\t// cache regex per column for optimal speed\n\t\t\t\t\t\tregex = data.filter_regexCache[ data.index ] || tsfRegex.regex.exec( data.filter ),\n\t\t\t\t\t\tisRegex = regex instanceof RegExp;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif ( !isRegex ) {\n\t\t\t\t\t\t\t// force case insensitive search if ignoreCase option set?\n\t\t\t\t\t\t\t// if ( c.ignoreCase && !regex[2] ) { regex[2] = 'i'; }\n\t\t\t\t\t\t\tdata.filter_regexCache[ data.index ] = regex = new RegExp( regex[1], regex[2] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatches = regex.test( data.exact );\n\t\t\t\t\t} catch ( error ) {\n\t\t\t\t\t\tmatches = false;\n\t\t\t\t\t}\n\t\t\t\t\treturn matches;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t// Look for operators >, >=, < or <=\n\t\t\toperators: function( c, data ) {\n\t\t\t\t// ignore empty strings... because '' < 10 is true\n\t\t\t\tif ( tsfRegex.operTest.test( data.iFilter ) && data.iExact !== '' ) {\n\t\t\t\t\tvar cachedValue, result, txt,\n\t\t\t\t\t\ttable = c.table,\n\t\t\t\t\t\tparsed = data.parsed[ data.index ],\n\t\t\t\t\t\tquery = ts.formatFloat( data.iFilter.replace( tsfRegex.operators, '' ), table ),\n\t\t\t\t\t\tparser = c.parsers[ data.index ] || {},\n\t\t\t\t\t\tsavedSearch = query;\n\t\t\t\t\t// parse filter value in case we're comparing numbers ( dates )\n\t\t\t\t\tif ( parsed || parser.type === 'numeric' ) {\n\t\t\t\t\t\ttxt = $.trim( '' + data.iFilter.replace( tsfRegex.operators, '' ) );\n\t\t\t\t\t\tresult = tsf.parseFilter( c, txt, data, true );\n\t\t\t\t\t\tquery = ( typeof result === 'number' && result !== '' && !isNaN( result ) ) ? result : query;\n\t\t\t\t\t}\n\t\t\t\t\t// iExact may be numeric - see issue #149;\n\t\t\t\t\t// check if cached is defined, because sometimes j goes out of range? ( numeric columns )\n\t\t\t\t\tif ( ( parsed || parser.type === 'numeric' ) && !isNaN( query ) &&\n\t\t\t\t\t\ttypeof data.cache !== 'undefined' ) {\n\t\t\t\t\t\tcachedValue = data.cache;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttxt = isNaN( data.iExact ) ? data.iExact.replace( ts.regex.nondigit, '' ) : data.iExact;\n\t\t\t\t\t\tcachedValue = ts.formatFloat( txt, table );\n\t\t\t\t\t}\n\t\t\t\t\tif ( tsfRegex.gtTest.test( data.iFilter ) ) {\n\t\t\t\t\t\tresult = tsfRegex.gteTest.test( data.iFilter ) ? cachedValue >= query : cachedValue > query;\n\t\t\t\t\t} else if ( tsfRegex.ltTest.test( data.iFilter ) ) {\n\t\t\t\t\t\tresult = tsfRegex.lteTest.test( data.iFilter ) ? cachedValue <= query : cachedValue < query;\n\t\t\t\t\t}\n\t\t\t\t\t// keep showing all rows if nothing follows the operator\n\t\t\t\t\tif ( !result && savedSearch === '' ) {\n\t\t\t\t\t\tresult = true;\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t// Look for a not match\n\t\t\tnotMatch: function( c, data ) {\n\t\t\t\tif ( tsfRegex.notTest.test( data.iFilter ) ) {\n\t\t\t\t\tvar indx,\n\t\t\t\t\t\ttxt = data.iFilter.replace( '!', '' ),\n\t\t\t\t\t\tfilter = tsf.parseFilter( c, txt, data ) || '';\n\t\t\t\t\tif ( tsfRegex.exact.test( filter ) ) {\n\t\t\t\t\t\t// look for exact not matches - see #628\n\t\t\t\t\t\tfilter = filter.replace( tsfRegex.exact, '' );\n\t\t\t\t\t\treturn filter === '' ? true : $.trim( filter ) !== data.iExact;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindx = data.iExact.search( $.trim( filter ) );\n\t\t\t\t\t\treturn filter === '' ? true :\n\t\t\t\t\t\t\t// return true if not found\n\t\t\t\t\t\t\tdata.anyMatch ? indx < 0 :\n\t\t\t\t\t\t\t// return false if found\n\t\t\t\t\t\t\t!( c.widgetOptions.filter_startsWith ? indx === 0 : indx >= 0 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t// Look for quotes or equals to get an exact match; ignore type since iExact could be numeric\n\t\t\texact: function( c, data ) {\n\t\t\t\t/*jshint eqeqeq:false */\n\t\t\t\tif ( tsfRegex.exact.test( data.iFilter ) ) {\n\t\t\t\t\tvar txt = data.iFilter.replace( tsfRegex.exact, '' ),\n\t\t\t\t\t\tfilter = tsf.parseFilter( c, txt, data ) || '';\n\t\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\t\treturn data.anyMatch ? $.inArray( filter, data.rowArray ) >= 0 : filter == data.iExact;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t// Look for a range ( using ' to ' or ' - ' ) - see issue #166; thanks matzhu!\n\t\t\trange : function( c, data ) {\n\t\t\t\tif ( tsfRegex.toTest.test( data.iFilter ) ) {\n\t\t\t\t\tvar result, tmp, range1, range2,\n\t\t\t\t\t\ttable = c.table,\n\t\t\t\t\t\tindex = data.index,\n\t\t\t\t\t\tparsed = data.parsed[index],\n\t\t\t\t\t\t// make sure the dash is for a range and not indicating a negative number\n\t\t\t\t\t\tquery = data.iFilter.split( tsfRegex.toSplit );\n\n\t\t\t\t\ttmp = query[0].replace( ts.regex.nondigit, '' ) || '';\n\t\t\t\t\trange1 = ts.formatFloat( tsf.parseFilter( c, tmp, data ), table );\n\t\t\t\t\ttmp = query[1].replace( ts.regex.nondigit, '' ) || '';\n\t\t\t\t\trange2 = ts.formatFloat( tsf.parseFilter( c, tmp, data ), table );\n\t\t\t\t\t// parse filter value in case we're comparing numbers ( dates )\n\t\t\t\t\tif ( parsed || c.parsers[ index ].type === 'numeric' ) {\n\t\t\t\t\t\tresult = c.parsers[ index ].format( '' + query[0], table, c.$headers.eq( index ), index );\n\t\t\t\t\t\trange1 = ( result !== '' && !isNaN( result ) ) ? result : range1;\n\t\t\t\t\t\tresult = c.parsers[ index ].format( '' + query[1], table, c.$headers.eq( index ), index );\n\t\t\t\t\t\trange2 = ( result !== '' && !isNaN( result ) ) ? result : range2;\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( parsed || c.parsers[ index ].type === 'numeric' ) && !isNaN( range1 ) && !isNaN( range2 ) ) {\n\t\t\t\t\t\tresult = data.cache;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttmp = isNaN( data.iExact ) ? data.iExact.replace( ts.regex.nondigit, '' ) : data.iExact;\n\t\t\t\t\t\tresult = ts.formatFloat( tmp, table );\n\t\t\t\t\t}\n\t\t\t\t\tif ( range1 > range2 ) {\n\t\t\t\t\t\ttmp = range1; range1 = range2; range2 = tmp; // swap\n\t\t\t\t\t}\n\t\t\t\t\treturn ( result >= range1 && result <= range2 ) || ( range1 === '' || range2 === '' );\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t// Look for wild card: ? = single, * = multiple, or | = logical OR\n\t\t\twild : function( c, data ) {\n\t\t\t\tif ( tsfRegex.wildOrTest.test( data.iFilter ) ) {\n\t\t\t\t\tvar query = '' + ( tsf.parseFilter( c, data.iFilter, data ) || '' );\n\t\t\t\t\t// look for an exact match with the 'or' unless the 'filter-match' class is found\n\t\t\t\t\tif ( !tsfRegex.wildTest.test( query ) && data.nestedFilters ) {\n\t\t\t\t\t\tquery = data.isMatch ? query : '^(' + query + ')$';\n\t\t\t\t\t}\n\t\t\t\t\t// parsing the filter may not work properly when using wildcards =/\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn new RegExp(\n\t\t\t\t\t\t\tquery.replace( tsfRegex.wild01, '\\\\S{1}' ).replace( tsfRegex.wild0More, '\\\\S*' ),\n\t\t\t\t\t\t\tc.widgetOptions.filter_ignoreCase ? 'i' : ''\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.test( data.exact );\n\t\t\t\t\t} catch ( error ) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t// fuzzy text search; modified from https://github.com/mattyork/fuzzy ( MIT license )\n\t\t\tfuzzy: function( c, data ) {\n\t\t\t\tif ( tsfRegex.fuzzyTest.test( data.iFilter ) ) {\n\t\t\t\t\tvar indx,\n\t\t\t\t\t\tpatternIndx = 0,\n\t\t\t\t\t\tlen = data.iExact.length,\n\t\t\t\t\t\ttxt = data.iFilter.slice( 1 ),\n\t\t\t\t\t\tpattern = tsf.parseFilter( c, txt, data ) || '';\n\t\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\t\t\tif ( data.iExact[ indx ] === pattern[ patternIndx ] ) {\n\t\t\t\t\t\t\tpatternIndx += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn patternIndx === pattern.length;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tinit: function( table ) {\n\t\t\t// filter language options\n\t\t\tts.language = $.extend( true, {}, {\n\t\t\t\tto  : 'to',\n\t\t\t\tor  : 'or',\n\t\t\t\tand : 'and'\n\t\t\t}, ts.language );\n\n\t\t\tvar options, string, txt, $header, column, val, fxn, noSelect,\n\t\t\t\tc = table.config,\n\t\t\t\two = c.widgetOptions,\n\t\t\t\tprocessStr = function(prefix, str, suffix) {\n\t\t\t\t\tstr = str.trim();\n\t\t\t\t\t// don't include prefix/suffix if str is empty\n\t\t\t\t\treturn str === '' ? '' : (prefix || '') + str + (suffix || '');\n\t\t\t\t};\n\t\t\tc.$table.addClass( 'hasFilters' );\n\t\t\tc.lastSearch = [];\n\n\t\t\t// define timers so using clearTimeout won't cause an undefined error\n\t\t\two.filter_searchTimer = null;\n\t\t\two.filter_initTimer = null;\n\t\t\two.filter_formatterCount = 0;\n\t\t\two.filter_formatterInit = [];\n\t\t\two.filter_anyColumnSelector = '[data-column=\"all\"],[data-column=\"any\"]';\n\t\t\two.filter_multipleColumnSelector = '[data-column*=\"-\"],[data-column*=\",\"]';\n\n\t\t\tval = '\\\\{' + tsfRegex.query + '\\\\}';\n\t\t\t$.extend( tsfRegex, {\n\t\t\t\tchild : new RegExp( c.cssChildRow ),\n\t\t\t\tfiltered : new RegExp( wo.filter_filteredRow ),\n\t\t\t\talreadyFiltered : new RegExp( '(\\\\s+(-' + processStr('|', ts.language.or) + processStr('|', ts.language.to) + ')\\\\s+)', 'i' ),\n\t\t\t\ttoTest : new RegExp( '\\\\s+(-' + processStr('|', ts.language.to) + ')\\\\s+', 'i' ),\n\t\t\t\ttoSplit : new RegExp( '(?:\\\\s+(?:-' + processStr('|', ts.language.to) + ')\\\\s+)', 'gi' ),\n\t\t\t\tandTest : new RegExp( '\\\\s+(' + processStr('', ts.language.and, '|') + '&&)\\\\s+', 'i' ),\n\t\t\t\tandSplit : new RegExp( '(?:\\\\s+(?:' + processStr('', ts.language.and, '|') + '&&)\\\\s+)', 'gi' ),\n\t\t\t\torTest : new RegExp( '(\\\\|' + processStr('|\\\\s+', ts.language.or, '\\\\s+') + ')', 'i' ),\n\t\t\t\torSplit : new RegExp( '(?:\\\\|' + processStr('|\\\\s+(?:', ts.language.or, ')\\\\s+') + ')', 'gi' ),\n\t\t\t\tiQuery : new RegExp( val, 'i' ),\n\t\t\t\tigQuery : new RegExp( val, 'ig' ),\n\t\t\t\toperTest : /^[<>]=?/,\n\t\t\t\tgtTest  : />/,\n\t\t\t\tgteTest : />=/,\n\t\t\t\tltTest  : /</,\n\t\t\t\tlteTest : /<=/,\n\t\t\t\tnotTest : /^\\!/,\n\t\t\t\twildOrTest : /[\\?\\*\\|]/,\n\t\t\t\twildTest : /\\?\\*/,\n\t\t\t\tfuzzyTest : /^~/,\n\t\t\t\texactTest : /[=\\\"\\|!]/\n\t\t\t});\n\n\t\t\t// don't build filter row if columnFilters is false or all columns are set to 'filter-false'\n\t\t\t// see issue #156\n\t\t\tval = c.$headers.filter( '.filter-false, .parser-false' ).length;\n\t\t\tif ( wo.filter_columnFilters !== false && val !== c.$headers.length ) {\n\t\t\t\t// build filter row\n\t\t\t\ttsf.buildRow( table, c, wo );\n\t\t\t}\n\n\t\t\ttxt = 'addRows updateCell update updateRows updateComplete appendCache filterReset ' +\n\t\t\t\t'filterAndSortReset filterResetSaved filterEnd search '.split( ' ' ).join( c.namespace + 'filter ' );\n\t\t\tc.$table.bind( txt, function( event, filter ) {\n\t\t\t\tval = wo.filter_hideEmpty &&\n\t\t\t\t\t$.isEmptyObject( c.cache ) &&\n\t\t\t\t\t!( c.delayInit && event.type === 'appendCache' );\n\t\t\t\t// hide filter row using the 'filtered' class name\n\t\t\t\tc.$table.find( '.' + tscss.filterRow ).toggleClass( wo.filter_filteredRow, val ); // fixes #450\n\t\t\t\tif ( !/(search|filter)/.test( event.type ) ) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\ttsf.buildDefault( table, true );\n\t\t\t\t}\n\t\t\t\t// Add filterAndSortReset - see #1361\n\t\t\t\tif ( event.type === 'filterReset' || event.type === 'filterAndSortReset' ) {\n\t\t\t\t\tc.$table.find( '.' + tscss.filter ).add( wo.filter_$externalFilters ).val( '' );\n\t\t\t\t\tif ( event.type === 'filterAndSortReset' ) {\n\t\t\t\t\t\tts.sortReset( this.config, function() {\n\t\t\t\t\t\t\ttsf.searching( table, [] );\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttsf.searching( table, [] );\n\t\t\t\t\t}\n\t\t\t\t} else if ( event.type === 'filterResetSaved' ) {\n\t\t\t\t\tts.storage( table, 'tablesorter-filters', '' );\n\t\t\t\t} else if ( event.type === 'filterEnd' ) {\n\t\t\t\t\ttsf.buildDefault( table, true );\n\t\t\t\t} else {\n\t\t\t\t\t// send false argument to force a new search; otherwise if the filter hasn't changed,\n\t\t\t\t\t// it will return\n\t\t\t\t\tfilter = event.type === 'search' ? filter :\n\t\t\t\t\t\tevent.type === 'updateComplete' ? c.$table.data( 'lastSearch' ) : '';\n\t\t\t\t\tif ( /(update|add)/.test( event.type ) && event.type !== 'updateComplete' ) {\n\t\t\t\t\t\t// force a new search since content has changed\n\t\t\t\t\t\tc.lastCombinedFilter = null;\n\t\t\t\t\t\tc.lastSearch = [];\n\t\t\t\t\t\t// update filterFormatters after update (& small delay) - Fixes #1237\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tc.$table.triggerHandler( 'filterFomatterUpdate' );\n\t\t\t\t\t\t}, 100);\n\t\t\t\t\t}\n\t\t\t\t\t// pass true ( skipFirst ) to prevent the tablesorter.setFilters function from skipping the first\n\t\t\t\t\t// input ensures all inputs are updated when a search is triggered on the table\n\t\t\t\t\t// $( 'table' ).trigger( 'search', [...] );\n\t\t\t\t\ttsf.searching( table, filter, true );\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\t// reset button/link\n\t\t\tif ( wo.filter_reset ) {\n\t\t\t\tif ( wo.filter_reset instanceof $ ) {\n\t\t\t\t\t// reset contains a jQuery object, bind to it\n\t\t\t\t\two.filter_reset.click( function() {\n\t\t\t\t\t\tc.$table.triggerHandler( 'filterReset' );\n\t\t\t\t\t});\n\t\t\t\t} else if ( $( wo.filter_reset ).length ) {\n\t\t\t\t\t// reset is a jQuery selector, use event delegation\n\t\t\t\t\t$( document )\n\t\t\t\t\t\t.undelegate( wo.filter_reset, 'click' + c.namespace + 'filter' )\n\t\t\t\t\t\t.delegate( wo.filter_reset, 'click' + c.namespace + 'filter', function() {\n\t\t\t\t\t\t\t// trigger a reset event, so other functions ( filter_formatter ) know when to reset\n\t\t\t\t\t\t\tc.$table.triggerHandler( 'filterReset' );\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( wo.filter_functions ) {\n\t\t\t\tfor ( column = 0; column < c.columns; column++ ) {\n\t\t\t\t\tfxn = ts.getColumnData( table, wo.filter_functions, column );\n\t\t\t\t\tif ( fxn ) {\n\t\t\t\t\t\t// remove 'filter-select' from header otherwise the options added here are replaced with\n\t\t\t\t\t\t// all options\n\t\t\t\t\t\t$header = c.$headerIndexed[ column ].removeClass( 'filter-select' );\n\t\t\t\t\t\t// don't build select if 'filter-false' or 'parser-false' set\n\t\t\t\t\t\tnoSelect = !( $header.hasClass( 'filter-false' ) || $header.hasClass( 'parser-false' ) );\n\t\t\t\t\t\toptions = '';\n\t\t\t\t\t\tif ( fxn === true && noSelect ) {\n\t\t\t\t\t\t\ttsf.buildSelect( table, column );\n\t\t\t\t\t\t} else if ( typeof fxn === 'object' && noSelect ) {\n\t\t\t\t\t\t\t// add custom drop down list\n\t\t\t\t\t\t\tfor ( string in fxn ) {\n\t\t\t\t\t\t\t\tif ( typeof string === 'string' ) {\n\t\t\t\t\t\t\t\t\toptions += options === '' ?\n\t\t\t\t\t\t\t\t\t\t'<option value=\"\">' +\n\t\t\t\t\t\t\t\t\t\t\t( $header.data( 'placeholder' ) ||\n\t\t\t\t\t\t\t\t\t\t\t\t$header.attr( 'data-placeholder' ) ||\n\t\t\t\t\t\t\t\t\t\t\t\two.filter_placeholder.select ||\n\t\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t\t\t\t'</option>' : '';\n\t\t\t\t\t\t\t\t\tval = string;\n\t\t\t\t\t\t\t\t\ttxt = string;\n\t\t\t\t\t\t\t\t\tif ( string.indexOf( wo.filter_selectSourceSeparator ) >= 0 ) {\n\t\t\t\t\t\t\t\t\t\tval = string.split( wo.filter_selectSourceSeparator );\n\t\t\t\t\t\t\t\t\t\ttxt = val[1];\n\t\t\t\t\t\t\t\t\t\tval = val[0];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\toptions += '<option ' +\n\t\t\t\t\t\t\t\t\t\t( txt === val ? '' : 'data-function-name=\"' + string + '\" ' ) +\n\t\t\t\t\t\t\t\t\t\t'value=\"' + val + '\">' + txt + '</option>';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tc.$table\n\t\t\t\t\t\t\t\t.find( 'thead' )\n\t\t\t\t\t\t\t\t.find( 'select.' + tscss.filter + '[data-column=\"' + column + '\"]' )\n\t\t\t\t\t\t\t\t.append( options );\n\t\t\t\t\t\t\ttxt = wo.filter_selectSource;\n\t\t\t\t\t\t\tfxn = typeof txt === 'function' ? true : ts.getColumnData( table, txt, column );\n\t\t\t\t\t\t\tif ( fxn ) {\n\t\t\t\t\t\t\t\t// updating so the extra options are appended\n\t\t\t\t\t\t\t\ttsf.buildSelect( c.table, column, '', true, $header.hasClass( wo.filter_onlyAvail ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// not really updating, but if the column has both the 'filter-select' class &\n\t\t\t// filter_functions set to true, it would append the same options twice.\n\t\t\ttsf.buildDefault( table, true );\n\n\t\t\ttsf.bindSearch( table, c.$table.find( '.' + tscss.filter ), true );\n\t\t\tif ( wo.filter_external ) {\n\t\t\t\ttsf.bindSearch( table, wo.filter_external );\n\t\t\t}\n\n\t\t\tif ( wo.filter_hideFilters ) {\n\t\t\t\ttsf.hideFilters( c );\n\t\t\t}\n\n\t\t\t// show processing icon\n\t\t\tif ( c.showProcessing ) {\n\t\t\t\ttxt = 'filterStart filterEnd '.split( ' ' ).join( c.namespace + 'filter-sp ' );\n\t\t\t\tc.$table\n\t\t\t\t\t.unbind( txt.replace( ts.regex.spaces, ' ' ) )\n\t\t\t\t\t.bind( txt, function( event, columns ) {\n\t\t\t\t\t// only add processing to certain columns to all columns\n\t\t\t\t\t$header = ( columns ) ?\n\t\t\t\t\t\tc.$table\n\t\t\t\t\t\t\t.find( '.' + tscss.header )\n\t\t\t\t\t\t\t.filter( '[data-column]' )\n\t\t\t\t\t\t\t.filter( function() {\n\t\t\t\t\t\t\t\treturn columns[ $( this ).data( 'column' ) ] !== '';\n\t\t\t\t\t\t\t}) : '';\n\t\t\t\t\tts.isProcessing( table, event.type === 'filterStart', columns ? $header : '' );\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// set filtered rows count ( intially unfiltered )\n\t\t\tc.filteredRows = c.totalRows;\n\n\t\t\t// add default values\n\t\t\ttxt = 'tablesorter-initialized pagerBeforeInitialized '.split( ' ' ).join( c.namespace + 'filter ' );\n\t\t\tc.$table\n\t\t\t.unbind( txt.replace( ts.regex.spaces, ' ' ) )\n\t\t\t.bind( txt, function() {\n\t\t\t\ttsf.completeInit( this );\n\t\t\t});\n\t\t\t// if filter widget is added after pager has initialized; then set filter init flag\n\t\t\tif ( c.pager && c.pager.initialized && !wo.filter_initialized ) {\n\t\t\t\tc.$table.triggerHandler( 'filterFomatterUpdate' );\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\ttsf.filterInitComplete( c );\n\t\t\t\t}, 100 );\n\t\t\t} else if ( !wo.filter_initialized ) {\n\t\t\t\ttsf.completeInit( table );\n\t\t\t}\n\t\t},\n\t\tcompleteInit: function( table ) {\n\t\t\t// redefine 'c' & 'wo' so they update properly inside this callback\n\t\t\tvar c = table.config,\n\t\t\t\two = c.widgetOptions,\n\t\t\t\tfilters = tsf.setDefaults( table, c, wo ) || [];\n\t\t\tif ( filters.length ) {\n\t\t\t\t// prevent delayInit from triggering a cache build if filters are empty\n\t\t\t\tif ( !( c.delayInit && filters.join( '' ) === '' ) ) {\n\t\t\t\t\tts.setFilters( table, filters, true );\n\t\t\t\t}\n\t\t\t}\n\t\t\tc.$table.triggerHandler( 'filterFomatterUpdate' );\n\t\t\t// trigger init after setTimeout to prevent multiple filterStart/End/Init triggers\n\t\t\tsetTimeout( function() {\n\t\t\t\tif ( !wo.filter_initialized ) {\n\t\t\t\t\ttsf.filterInitComplete( c );\n\t\t\t\t}\n\t\t\t}, 100 );\n\t\t},\n\n\t\t// $cell parameter, but not the config, is passed to the filter_formatters,\n\t\t// so we have to work with it instead\n\t\tformatterUpdated: function( $cell, column ) {\n\t\t\t// prevent error if $cell is undefined - see #1056\n\t\t\tvar $table = $cell && $cell.closest( 'table' );\n\t\t\tvar config = $table.length && $table[0].config,\n\t\t\t\two = config && config.widgetOptions;\n\t\t\tif ( wo && !wo.filter_initialized ) {\n\t\t\t\t// add updates by column since this function\n\t\t\t\t// may be called numerous times before initialization\n\t\t\t\two.filter_formatterInit[ column ] = 1;\n\t\t\t}\n\t\t},\n\t\tfilterInitComplete: function( c ) {\n\t\t\tvar indx, len,\n\t\t\t\two = c.widgetOptions,\n\t\t\t\tcount = 0,\n\t\t\t\tcompleted = function() {\n\t\t\t\t\two.filter_initialized = true;\n\t\t\t\t\t// update lastSearch - it gets cleared often\n\t\t\t\t\tc.lastSearch = c.$table.data( 'lastSearch' );\n\t\t\t\t\tc.$table.triggerHandler( 'filterInit', c );\n\t\t\t\t\ttsf.findRows( c.table, c.lastSearch || [] );\n\t\t\t\t\tif (ts.debug(c, 'filter')) {\n\t\t\t\t\t\tconsole.log('Filter >> Widget initialized');\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\tif ( $.isEmptyObject( wo.filter_formatter ) ) {\n\t\t\t\tcompleted();\n\t\t\t} else {\n\t\t\t\tlen = wo.filter_formatterInit.length;\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\t\tif ( wo.filter_formatterInit[ indx ] === 1 ) {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tclearTimeout( wo.filter_initTimer );\n\t\t\t\tif ( !wo.filter_initialized && count === wo.filter_formatterCount ) {\n\t\t\t\t\t// filter widget initialized\n\t\t\t\t\tcompleted();\n\t\t\t\t} else if ( !wo.filter_initialized ) {\n\t\t\t\t\t// fall back in case a filter_formatter doesn't call\n\t\t\t\t\t// $.tablesorter.filter.formatterUpdated( $cell, column ), and the count is off\n\t\t\t\t\two.filter_initTimer = setTimeout( function() {\n\t\t\t\t\t\tcompleted();\n\t\t\t\t\t}, 500 );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// encode or decode filters for storage; see #1026\n\t\tprocessFilters: function( filters, encode ) {\n\t\t\tvar indx,\n\t\t\t\t// fixes #1237; previously returning an encoded \"filters\" value\n\t\t\t\tresult = [],\n\t\t\t\tmode = encode ? encodeURIComponent : decodeURIComponent,\n\t\t\t\tlen = filters.length;\n\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\tif ( filters[ indx ] ) {\n\t\t\t\t\tresult[ indx ] = mode( filters[ indx ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\tsetDefaults: function( table, c, wo ) {\n\t\t\tvar isArray, saved, indx, col, $filters,\n\t\t\t\t// get current ( default ) filters\n\t\t\t\tfilters = ts.getFilters( table ) || [];\n\t\t\tif ( wo.filter_saveFilters && ts.storage ) {\n\t\t\t\tsaved = ts.storage( table, 'tablesorter-filters' ) || [];\n\t\t\t\tisArray = $.isArray( saved );\n\t\t\t\t// make sure we're not just getting an empty array\n\t\t\t\tif ( !( isArray && saved.join( '' ) === '' || !isArray ) ) {\n\t\t\t\t\tfilters = tsf.processFilters( saved );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// if no filters saved, then check default settings\n\t\t\tif ( filters.join( '' ) === '' ) {\n\t\t\t\t// allow adding default setting to external filters\n\t\t\t\t$filters = c.$headers.add( wo.filter_$externalFilters )\n\t\t\t\t\t.filter( '[' + wo.filter_defaultAttrib + ']' );\n\t\t\t\tfor ( indx = 0; indx <= c.columns; indx++ ) {\n\t\t\t\t\t// include data-column='all' external filters\n\t\t\t\t\tcol = indx === c.columns ? 'all' : indx;\n\t\t\t\t\tfilters[ indx ] = $filters\n\t\t\t\t\t\t.filter( '[data-column=\"' + col + '\"]' )\n\t\t\t\t\t\t.attr( wo.filter_defaultAttrib ) || filters[indx] || '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tc.$table.data( 'lastSearch', filters );\n\t\t\treturn filters;\n\t\t},\n\t\tparseFilter: function( c, filter, data, parsed ) {\n\t\t\treturn parsed || data.parsed[ data.index ] ?\n\t\t\t\tc.parsers[ data.index ].format( filter, c.table, [], data.index ) :\n\t\t\t\tfilter;\n\t\t},\n\t\tbuildRow: function( table, c, wo ) {\n\t\t\tvar $filter, col, column, $header, makeSelect, disabled, name, ffxn, tmp,\n\t\t\t\t// c.columns defined in computeThIndexes()\n\t\t\t\tcellFilter = wo.filter_cellFilter,\n\t\t\t\tcolumns = c.columns,\n\t\t\t\tarry = $.isArray( cellFilter ),\n\t\t\t\tbuildFilter = '<tr role=\"search\" class=\"' + tscss.filterRow + ' ' + c.cssIgnoreRow + '\">';\n\t\t\tfor ( column = 0; column < columns; column++ ) {\n\t\t\t\tif ( c.$headerIndexed[ column ].length ) {\n\t\t\t\t\t// account for entire column set with colspan. See #1047\n\t\t\t\t\ttmp = c.$headerIndexed[ column ] && c.$headerIndexed[ column ][0].colSpan || 0;\n\t\t\t\t\tif ( tmp > 1 ) {\n\t\t\t\t\t\tbuildFilter += '<td data-column=\"' + column + '-' + ( column + tmp - 1 ) + '\" colspan=\"' + tmp + '\"';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbuildFilter += '<td data-column=\"' + column + '\"';\n\t\t\t\t\t}\n\t\t\t\t\tif ( arry ) {\n\t\t\t\t\t\tbuildFilter += ( cellFilter[ column ] ? ' class=\"' + cellFilter[ column ] + '\"' : '' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbuildFilter += ( cellFilter !== '' ? ' class=\"' + cellFilter + '\"' : '' );\n\t\t\t\t\t}\n\t\t\t\t\tbuildFilter += '></td>';\n\t\t\t\t}\n\t\t\t}\n\t\t\tc.$filters = $( buildFilter += '</tr>' )\n\t\t\t\t.appendTo( c.$table.children( 'thead' ).eq( 0 ) )\n\t\t\t\t.children( 'td' );\n\t\t\t// build each filter input\n\t\t\tfor ( column = 0; column < columns; column++ ) {\n\t\t\t\tdisabled = false;\n\t\t\t\t// assuming last cell of a column is the main column\n\t\t\t\t$header = c.$headerIndexed[ column ];\n\t\t\t\tif ( $header && $header.length ) {\n\t\t\t\t\t// $filter = c.$filters.filter( '[data-column=\"' + column + '\"]' );\n\t\t\t\t\t$filter = tsf.getColumnElm( c, c.$filters, column );\n\t\t\t\t\tffxn = ts.getColumnData( table, wo.filter_functions, column );\n\t\t\t\t\tmakeSelect = ( wo.filter_functions && ffxn && typeof ffxn !== 'function' ) ||\n\t\t\t\t\t\t$header.hasClass( 'filter-select' );\n\t\t\t\t\t// get data from jQuery data, metadata, headers option or header class name\n\t\t\t\t\tcol = ts.getColumnData( table, c.headers, column );\n\t\t\t\t\tdisabled = ts.getData( $header[0], col, 'filter' ) === 'false' ||\n\t\t\t\t\t\tts.getData( $header[0], col, 'parser' ) === 'false';\n\n\t\t\t\t\tif ( makeSelect ) {\n\t\t\t\t\t\tbuildFilter = $( '<select>' ).appendTo( $filter );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tffxn = ts.getColumnData( table, wo.filter_formatter, column );\n\t\t\t\t\t\tif ( ffxn ) {\n\t\t\t\t\t\t\two.filter_formatterCount++;\n\t\t\t\t\t\t\tbuildFilter = ffxn( $filter, column );\n\t\t\t\t\t\t\t// no element returned, so lets go find it\n\t\t\t\t\t\t\tif ( buildFilter && buildFilter.length === 0 ) {\n\t\t\t\t\t\t\t\tbuildFilter = $filter.children( 'input' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// element not in DOM, so lets attach it\n\t\t\t\t\t\t\tif ( buildFilter && ( buildFilter.parent().length === 0 ||\n\t\t\t\t\t\t\t\t( buildFilter.parent().length && buildFilter.parent()[0] !== $filter[0] ) ) ) {\n\t\t\t\t\t\t\t\t$filter.append( buildFilter );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuildFilter = $( '<input type=\"search\">' ).appendTo( $filter );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( buildFilter ) {\n\t\t\t\t\t\t\ttmp = $header.data( 'placeholder' ) ||\n\t\t\t\t\t\t\t\t$header.attr( 'data-placeholder' ) ||\n\t\t\t\t\t\t\t\two.filter_placeholder.search || '';\n\t\t\t\t\t\t\tbuildFilter.attr( 'placeholder', tmp );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( buildFilter ) {\n\t\t\t\t\t\t// add filter class name\n\t\t\t\t\t\tname = ( $.isArray( wo.filter_cssFilter ) ?\n\t\t\t\t\t\t\t( typeof wo.filter_cssFilter[column] !== 'undefined' ? wo.filter_cssFilter[column] || '' : '' ) :\n\t\t\t\t\t\t\two.filter_cssFilter ) || '';\n\t\t\t\t\t\t// copy data-column from table cell (it will include colspan)\n\t\t\t\t\t\tbuildFilter.addClass( tscss.filter + ' ' + name );\n\t\t\t\t\t\tname = wo.filter_filterLabel;\n\t\t\t\t\t\ttmp = name.match(/{{([^}]+?)}}/g);\n\t\t\t\t\t\tif (!tmp) {\n\t\t\t\t\t\t\ttmp = [ '{{label}}' ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$.each(tmp, function(indx, attr) {\n\t\t\t\t\t\t\tvar regex = new RegExp(attr, 'g'),\n\t\t\t\t\t\t\t\tdata = $header.attr('data-' + attr.replace(/{{|}}/g, '')),\n\t\t\t\t\t\t\t\ttext = typeof data === 'undefined' ? $header.text() : data;\n\t\t\t\t\t\t\tname = name.replace( regex, $.trim( text ) );\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbuildFilter.attr({\n\t\t\t\t\t\t\t'data-column': $filter.attr( 'data-column' ),\n\t\t\t\t\t\t\t'aria-label': name\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif ( disabled ) {\n\t\t\t\t\t\t\tbuildFilter.attr( 'placeholder', '' ).addClass( tscss.filterDisabled )[0].disabled = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbindSearch: function( table, $el, internal ) {\n\t\t\ttable = $( table )[0];\n\t\t\t$el = $( $el ); // allow passing a selector string\n\t\t\tif ( !$el.length ) { return; }\n\t\t\tvar tmp,\n\t\t\t\tc = table.config,\n\t\t\t\two = c.widgetOptions,\n\t\t\t\tnamespace = c.namespace + 'filter',\n\t\t\t\t$ext = wo.filter_$externalFilters;\n\t\t\tif ( internal !== true ) {\n\t\t\t\t// save anyMatch element\n\t\t\t\ttmp = wo.filter_anyColumnSelector + ',' + wo.filter_multipleColumnSelector;\n\t\t\t\two.filter_$anyMatch = $el.filter( tmp );\n\t\t\t\tif ( $ext && $ext.length ) {\n\t\t\t\t\two.filter_$externalFilters = wo.filter_$externalFilters.add( $el );\n\t\t\t\t} else {\n\t\t\t\t\two.filter_$externalFilters = $el;\n\t\t\t\t}\n\t\t\t\t// update values ( external filters added after table initialization )\n\t\t\t\tts.setFilters( table, c.$table.data( 'lastSearch' ) || [], internal === false );\n\t\t\t}\n\t\t\t// unbind events\n\t\t\ttmp = ( 'keypress keyup keydown search change input '.split( ' ' ).join( namespace + ' ' ) );\n\t\t\t$el\n\t\t\t// use data attribute instead of jQuery data since the head is cloned without including\n\t\t\t// the data/binding\n\t\t\t.attr( 'data-lastSearchTime', new Date().getTime() )\n\t\t\t.unbind( tmp.replace( ts.regex.spaces, ' ' ) )\n\t\t\t.bind( 'keydown' + namespace, function( event ) {\n\t\t\t\tif ( event.which === tskeyCodes.escape && !table.config.widgetOptions.filter_resetOnEsc ) {\n\t\t\t\t\t// prevent keypress event\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.bind( 'keyup' + namespace, function( event ) {\n\t\t\t\two = table.config.widgetOptions; // make sure \"wo\" isn't cached\n\t\t\t\tvar column = parseInt( $( this ).attr( 'data-column' ), 10 ),\n\t\t\t\t\tliveSearch = typeof wo.filter_liveSearch === 'boolean' ? wo.filter_liveSearch :\n\t\t\t\t\t\tts.getColumnData( table, wo.filter_liveSearch, column );\n\t\t\t\tif ( typeof liveSearch === 'undefined' ) {\n\t\t\t\t\tliveSearch = wo.filter_liveSearch.fallback || false;\n\t\t\t\t}\n\t\t\t\t$( this ).attr( 'data-lastSearchTime', new Date().getTime() );\n\t\t\t\t// emulate what webkit does.... escape clears the filter\n\t\t\t\tif ( event.which === tskeyCodes.escape ) {\n\t\t\t\t\t// make sure to restore the last value on escape\n\t\t\t\t\tthis.value = wo.filter_resetOnEsc ? '' : c.lastSearch[column];\n\t\t\t\t\t// don't return if the search value is empty ( all rows need to be revealed )\n\t\t\t\t} else if ( this.value !== '' && (\n\t\t\t\t\t// liveSearch can contain a min value length; ignore arrow and meta keys, but allow backspace\n\t\t\t\t\t( typeof liveSearch === 'number' && this.value.length < liveSearch ) ||\n\t\t\t\t\t// let return & backspace continue on, but ignore arrows & non-valid characters\n\t\t\t\t\t( event.which !== tskeyCodes.enter && event.which !== tskeyCodes.backSpace &&\n\t\t\t\t\t\t( event.which < tskeyCodes.space || ( event.which >= tskeyCodes.left && event.which <= tskeyCodes.down ) ) ) ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t\t// live search\n\t\t\t\t} else if ( liveSearch === false ) {\n\t\t\t\t\tif ( this.value !== '' && event.which !== tskeyCodes.enter ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// change event = no delay; last true flag tells getFilters to skip newest timed input\n\t\t\t\ttsf.searching( table, true, true, column );\n\t\t\t})\n\t\t\t// include change for select - fixes #473\n\t\t\t.bind( 'search change keypress input blur '.split( ' ' ).join( namespace + ' ' ), function( event ) {\n\t\t\t\t// don't get cached data, in case data-column changes dynamically\n\t\t\t\tvar column = parseInt( $( this ).attr( 'data-column' ), 10 ),\n\t\t\t\t\teventType = event.type,\n\t\t\t\t\tliveSearch = typeof wo.filter_liveSearch === 'boolean' ?\n\t\t\t\t\t\two.filter_liveSearch :\n\t\t\t\t\t\tts.getColumnData( table, wo.filter_liveSearch, column );\n\t\t\t\tif ( table.config.widgetOptions.filter_initialized &&\n\t\t\t\t\t// immediate search if user presses enter\n\t\t\t\t\t( event.which === tskeyCodes.enter ||\n\t\t\t\t\t\t// immediate search if a \"search\" or \"blur\" is triggered on the input\n\t\t\t\t\t\t( eventType === 'search' || eventType === 'blur' ) ||\n\t\t\t\t\t\t// change & input events must be ignored if liveSearch !== true\n\t\t\t\t\t\t( eventType === 'change' || eventType === 'input' ) &&\n\t\t\t\t\t\t// prevent search if liveSearch is a number\n\t\t\t\t\t\t( liveSearch === true || liveSearch !== true && event.target.nodeName !== 'INPUT' ) &&\n\t\t\t\t\t\t// don't allow 'change' or 'input' event to process if the input value\n\t\t\t\t\t\t// is the same - fixes #685\n\t\t\t\t\t\tthis.value !== c.lastSearch[column]\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t// init search with no delay\n\t\t\t\t\t$( this ).attr( 'data-lastSearchTime', new Date().getTime() );\n\t\t\t\t\ttsf.searching( table, eventType !== 'keypress', true, column );\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tsearching: function( table, filter, skipFirst, column ) {\n\t\t\tvar liveSearch,\n\t\t\t\two = table.config.widgetOptions;\n\t\t\tif (typeof column === 'undefined') {\n\t\t\t\t// no delay\n\t\t\t\tliveSearch = false;\n\t\t\t} else {\n\t\t\t\tliveSearch = typeof wo.filter_liveSearch === 'boolean' ?\n\t\t\t\t\two.filter_liveSearch :\n\t\t\t\t\t// get column setting, or set to fallback value, or default to false\n\t\t\t\t\tts.getColumnData( table, wo.filter_liveSearch, column );\n\t\t\t\tif ( typeof liveSearch === 'undefined' ) {\n\t\t\t\t\tliveSearch = wo.filter_liveSearch.fallback || false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tclearTimeout( wo.filter_searchTimer );\n\t\t\tif ( typeof filter === 'undefined' || filter === true ) {\n\t\t\t\t// delay filtering\n\t\t\t\two.filter_searchTimer = setTimeout( function() {\n\t\t\t\t\ttsf.checkFilters( table, filter, skipFirst );\n\t\t\t\t}, liveSearch ? wo.filter_searchDelay : 10 );\n\t\t\t} else {\n\t\t\t\t// skip delay\n\t\t\t\ttsf.checkFilters( table, filter, skipFirst );\n\t\t\t}\n\t\t},\n\t\tequalFilters: function (c, filter1, filter2) {\n\t\t\tvar indx,\n\t\t\t\tf1 = [],\n\t\t\t\tf2 = [],\n\t\t\t\tlen = c.columns + 1; // add one to include anyMatch filter\n\t\t\tfilter1 = $.isArray(filter1) ? filter1 : [];\n\t\t\tfilter2 = $.isArray(filter2) ? filter2 : [];\n\t\t\tfor (indx = 0; indx < len; indx++) {\n\t\t\t\tf1[indx] = filter1[indx] || '';\n\t\t\t\tf2[indx] = filter2[indx] || '';\n\t\t\t}\n\t\t\treturn f1.join(',') === f2.join(',');\n\t\t},\n\t\tcheckFilters: function( table, filter, skipFirst ) {\n\t\t\tvar c = table.config,\n\t\t\t\two = c.widgetOptions,\n\t\t\t\tfilterArray = $.isArray( filter ),\n\t\t\t\tfilters = ( filterArray ) ? filter : ts.getFilters( table, true ),\n\t\t\t\tcurrentFilters = filters || []; // current filter values\n\t\t\t// prevent errors if delay init is set\n\t\t\tif ( $.isEmptyObject( c.cache ) ) {\n\t\t\t\t// update cache if delayInit set & pager has initialized ( after user initiates a search )\n\t\t\t\tif ( c.delayInit && ( !c.pager || c.pager && c.pager.initialized ) ) {\n\t\t\t\t\tts.updateCache( c, function() {\n\t\t\t\t\t\ttsf.checkFilters( table, false, skipFirst );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// add filter array back into inputs\n\t\t\tif ( filterArray ) {\n\t\t\t\tts.setFilters( table, filters, false, skipFirst !== true );\n\t\t\t\tif ( !wo.filter_initialized ) {\n\t\t\t\t\tc.lastSearch = [];\n\t\t\t\t\tc.lastCombinedFilter = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( wo.filter_hideFilters ) {\n\t\t\t\t// show/hide filter row as needed\n\t\t\t\tc.$table\n\t\t\t\t\t.find( '.' + tscss.filterRow )\n\t\t\t\t\t.triggerHandler( tsf.hideFiltersCheck( c ) ? 'mouseleave' : 'mouseenter' );\n\t\t\t}\n\t\t\t// return if the last search is the same; but filter === false when updating the search\n\t\t\t// see example-widget-filter.html filter toggle buttons\n\t\t\tif ( tsf.equalFilters(c, c.lastSearch, currentFilters) && filter !== false ) {\n\t\t\t\treturn;\n\t\t\t} else if ( filter === false ) {\n\t\t\t\t// force filter refresh\n\t\t\t\tc.lastCombinedFilter = '';\n\t\t\t\tc.lastSearch = [];\n\t\t\t}\n\t\t\t// define filter inside it is false\n\t\t\tfilters = filters || [];\n\t\t\t// convert filters to strings - see #1070\n\t\t\tfilters = Array.prototype.map ?\n\t\t\t\tfilters.map( String ) :\n\t\t\t\t// for IE8 & older browsers - maybe not the best method\n\t\t\t\tfilters.join( '\\ufffd' ).split( '\\ufffd' );\n\n\t\t\tif ( wo.filter_initialized ) {\n\t\t\t\tc.$table.triggerHandler( 'filterStart', [ filters ] );\n\t\t\t}\n\t\t\tif ( c.showProcessing ) {\n\t\t\t\t// give it time for the processing icon to kick in\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\ttsf.findRows( table, filters, currentFilters );\n\t\t\t\t\treturn false;\n\t\t\t\t}, 30 );\n\t\t\t} else {\n\t\t\t\ttsf.findRows( table, filters, currentFilters );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\thideFiltersCheck: function( c ) {\n\t\t\tif (typeof c.widgetOptions.filter_hideFilters === 'function') {\n\t\t\t\tvar val = c.widgetOptions.filter_hideFilters( c );\n\t\t\t\tif (typeof val === 'boolean') {\n\t\t\t\t\treturn val;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ts.getFilters( c.$table ).join( '' ) === '';\n\t\t},\n\t\thideFilters: function( c, $table ) {\n\t\t\tvar timer;\n\t\t\t( $table || c.$table )\n\t\t\t\t.find( '.' + tscss.filterRow )\n\t\t\t\t.addClass( tscss.filterRowHide )\n\t\t\t\t.bind( 'mouseenter mouseleave', function( e ) {\n\t\t\t\t\t// save event object - http://bugs.jquery.com/ticket/12140\n\t\t\t\t\tvar event = e,\n\t\t\t\t\t\t$row = $( this );\n\t\t\t\t\tclearTimeout( timer );\n\t\t\t\t\ttimer = setTimeout( function() {\n\t\t\t\t\t\tif ( /enter|over/.test( event.type ) ) {\n\t\t\t\t\t\t\t$row.removeClass( tscss.filterRowHide );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// don't hide if input has focus\n\t\t\t\t\t\t\t// $( ':focus' ) needs jQuery 1.6+\n\t\t\t\t\t\t\tif ( $( document.activeElement ).closest( 'tr' )[0] !== $row[0] ) {\n\t\t\t\t\t\t\t\t// don't hide row if any filter has a value\n\t\t\t\t\t\t\t\t$row.toggleClass( tscss.filterRowHide, tsf.hideFiltersCheck( c ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 200 );\n\t\t\t\t})\n\t\t\t\t.find( 'input, select' ).bind( 'focus blur', function( e ) {\n\t\t\t\t\tvar event = e,\n\t\t\t\t\t\t$row = $( this ).closest( 'tr' );\n\t\t\t\t\tclearTimeout( timer );\n\t\t\t\t\ttimer = setTimeout( function() {\n\t\t\t\t\t\tclearTimeout( timer );\n\t\t\t\t\t\t// don't hide row if any filter has a value\n\t\t\t\t\t\t$row.toggleClass( tscss.filterRowHide, tsf.hideFiltersCheck( c ) && event.type !== 'focus' );\n\t\t\t\t\t}, 200 );\n\t\t\t\t});\n\t\t},\n\t\tdefaultFilter: function( filter, mask ) {\n\t\t\tif ( filter === '' ) { return filter; }\n\t\t\tvar regex = tsfRegex.iQuery,\n\t\t\t\tmaskLen = mask.match( tsfRegex.igQuery ).length,\n\t\t\t\tquery = maskLen > 1 ? $.trim( filter ).split( /\\s/ ) : [ $.trim( filter ) ],\n\t\t\t\tlen = query.length - 1,\n\t\t\t\tindx = 0,\n\t\t\t\tval = mask;\n\t\t\tif ( len < 1 && maskLen > 1 ) {\n\t\t\t\t// only one 'word' in query but mask has >1 slots\n\t\t\t\tquery[1] = query[0];\n\t\t\t}\n\t\t\t// replace all {query} with query words...\n\t\t\t// if query = 'Bob', then convert mask from '!{query}' to '!Bob'\n\t\t\t// if query = 'Bob Joe Frank', then convert mask '{q} OR {q}' to 'Bob OR Joe OR Frank'\n\t\t\twhile ( regex.test( val ) ) {\n\t\t\t\tval = val.replace( regex, query[indx++] || '' );\n\t\t\t\tif ( regex.test( val ) && indx < len && ( query[indx] || '' ) !== '' ) {\n\t\t\t\t\tval = mask.replace( regex, val );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn val;\n\t\t},\n\t\tgetLatestSearch: function( $input ) {\n\t\t\tif ( $input ) {\n\t\t\t\treturn $input.sort( function( a, b ) {\n\t\t\t\t\treturn $( b ).attr( 'data-lastSearchTime' ) - $( a ).attr( 'data-lastSearchTime' );\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn $input || $();\n\t\t},\n\t\tfindRange: function( c, val, ignoreRanges ) {\n\t\t\t// look for multiple columns '1-3,4-6,8' in data-column\n\t\t\tvar temp, ranges, range, start, end, singles, i, indx, len,\n\t\t\t\tcolumns = [];\n\t\t\tif ( /^[0-9]+$/.test( val ) ) {\n\t\t\t\t// always return an array\n\t\t\t\treturn [ parseInt( val, 10 ) ];\n\t\t\t}\n\t\t\t// process column range\n\t\t\tif ( !ignoreRanges && /-/.test( val ) ) {\n\t\t\t\tranges = val.match( /(\\d+)\\s*-\\s*(\\d+)/g );\n\t\t\t\tlen = ranges ? ranges.length : 0;\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\t\trange = ranges[indx].split( /\\s*-\\s*/ );\n\t\t\t\t\tstart = parseInt( range[0], 10 ) || 0;\n\t\t\t\t\tend = parseInt( range[1], 10 ) || ( c.columns - 1 );\n\t\t\t\t\tif ( start > end ) {\n\t\t\t\t\t\ttemp = start; start = end; end = temp; // swap\n\t\t\t\t\t}\n\t\t\t\t\tif ( end >= c.columns ) {\n\t\t\t\t\t\tend = c.columns - 1;\n\t\t\t\t\t}\n\t\t\t\t\tfor ( ; start <= end; start++ ) {\n\t\t\t\t\t\tcolumns[ columns.length ] = start;\n\t\t\t\t\t}\n\t\t\t\t\t// remove processed range from val\n\t\t\t\t\tval = val.replace( ranges[ indx ], '' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// process single columns\n\t\t\tif ( !ignoreRanges && /,/.test( val ) ) {\n\t\t\t\tsingles = val.split( /\\s*,\\s*/ );\n\t\t\t\tlen = singles.length;\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( singles[ i ] !== '' ) {\n\t\t\t\t\t\tindx = parseInt( singles[ i ], 10 );\n\t\t\t\t\t\tif ( indx < c.columns ) {\n\t\t\t\t\t\t\tcolumns[ columns.length ] = indx;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return all columns\n\t\t\tif ( !columns.length ) {\n\t\t\t\tfor ( indx = 0; indx < c.columns; indx++ ) {\n\t\t\t\t\tcolumns[ columns.length ] = indx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn columns;\n\t\t},\n\t\tgetColumnElm: function( c, $elements, column ) {\n\t\t\t// data-column may contain multiple columns '1-3,5-6,8'\n\t\t\t// replaces: c.$filters.filter( '[data-column=\"' + column + '\"]' );\n\t\t\treturn $elements.filter( function() {\n\t\t\t\tvar cols = tsf.findRange( c, $( this ).attr( 'data-column' ) );\n\t\t\t\treturn $.inArray( column, cols ) > -1;\n\t\t\t});\n\t\t},\n\t\tmultipleColumns: function( c, $input ) {\n\t\t\t// look for multiple columns '1-3,4-6,8' in data-column\n\t\t\tvar wo = c.widgetOptions,\n\t\t\t\t// only target 'all' column inputs on initialization\n\t\t\t\t// & don't target 'all' column inputs if they don't exist\n\t\t\t\ttargets = wo.filter_initialized || !$input.filter( wo.filter_anyColumnSelector ).length,\n\t\t\t\tval = $.trim( tsf.getLatestSearch( $input ).attr( 'data-column' ) || '' );\n\t\t\treturn tsf.findRange( c, val, !targets );\n\t\t},\n\t\tprocessTypes: function( c, data, vars ) {\n\t\t\tvar ffxn,\n\t\t\t\tfilterMatched = null,\n\t\t\t\tmatches = null;\n\t\t\tfor ( ffxn in tsf.types ) {\n\t\t\t\tif ( $.inArray( ffxn, vars.excludeMatch ) < 0 && matches === null ) {\n\t\t\t\t\tmatches = tsf.types[ffxn]( c, data, vars );\n\t\t\t\t\tif ( matches !== null ) {\n\t\t\t\t\t\tdata.matchedOn = ffxn;\n\t\t\t\t\t\tfilterMatched = matches;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn filterMatched;\n\t\t},\n\t\tmatchType: function( c, columnIndex ) {\n\t\t\tvar isMatch,\n\t\t\t\two = c.widgetOptions,\n\t\t\t\t$el = c.$headerIndexed[ columnIndex ];\n\t\t\t// filter-exact > filter-match > filter_matchType for type\n\t\t\tif ( $el.hasClass( 'filter-exact' ) ) {\n\t\t\t\tisMatch = false;\n\t\t\t} else if ( $el.hasClass( 'filter-match' ) ) {\n\t\t\t\tisMatch = true;\n\t\t\t} else {\n\t\t\t\t// filter-select is not applied when filter_functions are used, so look for a select\n\t\t\t\tif ( wo.filter_columnFilters ) {\n\t\t\t\t\t$el = c.$filters\n\t\t\t\t\t\t.find( '.' + tscss.filter )\n\t\t\t\t\t\t.add( wo.filter_$externalFilters )\n\t\t\t\t\t\t.filter( '[data-column=\"' + columnIndex + '\"]' );\n\t\t\t\t} else if ( wo.filter_$externalFilters ) {\n\t\t\t\t\t$el = wo.filter_$externalFilters.filter( '[data-column=\"' + columnIndex + '\"]' );\n\t\t\t\t}\n\t\t\t\tisMatch = $el.length ?\n\t\t\t\t\tc.widgetOptions.filter_matchType[ ( $el[ 0 ].nodeName || '' ).toLowerCase() ] === 'match' :\n\t\t\t\t\t// default to exact, if no inputs found\n\t\t\t\t\tfalse;\n\t\t\t}\n\t\t\treturn isMatch;\n\t\t},\n\t\tprocessRow: function( c, data, vars ) {\n\t\t\tvar result, filterMatched,\n\t\t\t\tfxn, ffxn, txt,\n\t\t\t\two = c.widgetOptions,\n\t\t\t\tshowRow = true,\n\t\t\t\thasAnyMatchInput = wo.filter_$anyMatch && wo.filter_$anyMatch.length,\n\n\t\t\t\t// if wo.filter_$anyMatch data-column attribute is changed dynamically\n\t\t\t\t// we don't want to do an \"anyMatch\" search on one column using data\n\t\t\t\t// for the entire row - see #998\n\t\t\t\tcolumnIndex = wo.filter_$anyMatch && wo.filter_$anyMatch.length ?\n\t\t\t\t\t// look for multiple columns '1-3,4-6,8'\n\t\t\t\t\ttsf.multipleColumns( c, wo.filter_$anyMatch ) :\n\t\t\t\t\t[];\n\t\t\tdata.$cells = data.$row.children();\n\t\t\tdata.matchedOn = null;\n\t\t\tif ( data.anyMatchFlag && columnIndex.length > 1 || ( data.anyMatchFilter && !hasAnyMatchInput ) ) {\n\t\t\t\tdata.anyMatch = true;\n\t\t\t\tdata.isMatch = true;\n\t\t\t\tdata.rowArray = data.$cells.map( function( i ) {\n\t\t\t\t\tif ( $.inArray( i, columnIndex ) > -1 || ( data.anyMatchFilter && !hasAnyMatchInput ) ) {\n\t\t\t\t\t\tif ( data.parsed[ i ] ) {\n\t\t\t\t\t\t\ttxt = data.cacheArray[ i ];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttxt = data.rawArray[ i ];\n\t\t\t\t\t\t\ttxt = $.trim( wo.filter_ignoreCase ? txt.toLowerCase() : txt );\n\t\t\t\t\t\t\tif ( c.sortLocaleCompare ) {\n\t\t\t\t\t\t\t\ttxt = ts.replaceAccents( txt );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn txt;\n\t\t\t\t\t}\n\t\t\t\t}).get();\n\t\t\t\tdata.filter = data.anyMatchFilter;\n\t\t\t\tdata.iFilter = data.iAnyMatchFilter;\n\t\t\t\tdata.exact = data.rowArray.join( ' ' );\n\t\t\t\tdata.iExact = wo.filter_ignoreCase ? data.exact.toLowerCase() : data.exact;\n\t\t\t\tdata.cache = data.cacheArray.slice( 0, -1 ).join( ' ' );\n\t\t\t\tvars.excludeMatch = vars.noAnyMatch;\n\t\t\t\tfilterMatched = tsf.processTypes( c, data, vars );\n\t\t\t\tif ( filterMatched !== null ) {\n\t\t\t\t\tshowRow = filterMatched;\n\t\t\t\t} else {\n\t\t\t\t\tif ( wo.filter_startsWith ) {\n\t\t\t\t\t\tshowRow = false;\n\t\t\t\t\t\t// data.rowArray may not contain all columns\n\t\t\t\t\t\tcolumnIndex = Math.min( c.columns, data.rowArray.length );\n\t\t\t\t\t\twhile ( !showRow && columnIndex > 0 ) {\n\t\t\t\t\t\t\tcolumnIndex--;\n\t\t\t\t\t\t\tshowRow = showRow || data.rowArray[ columnIndex ].indexOf( data.iFilter ) === 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tshowRow = ( data.iExact + data.childRowText ).indexOf( data.iFilter ) >= 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdata.anyMatch = false;\n\t\t\t\t// no other filters to process\n\t\t\t\tif ( data.filters.join( '' ) === data.filter ) {\n\t\t\t\t\treturn showRow;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( columnIndex = 0; columnIndex < c.columns; columnIndex++ ) {\n\t\t\t\tdata.filter = data.filters[ columnIndex ];\n\t\t\t\tdata.index = columnIndex;\n\n\t\t\t\t// filter types to exclude, per column\n\t\t\t\tvars.excludeMatch = vars.excludeFilter[ columnIndex ];\n\n\t\t\t\t// ignore if filter is empty or disabled\n\t\t\t\tif ( data.filter ) {\n\t\t\t\t\tdata.cache = data.cacheArray[ columnIndex ];\n\t\t\t\t\tresult = data.parsed[ columnIndex ] ? data.cache : data.rawArray[ columnIndex ] || '';\n\t\t\t\t\tdata.exact = c.sortLocaleCompare ? ts.replaceAccents( result ) : result; // issue #405\n\t\t\t\t\tdata.iExact = !tsfRegex.type.test( typeof data.exact ) && wo.filter_ignoreCase ?\n\t\t\t\t\t\tdata.exact.toLowerCase() : data.exact;\n\t\t\t\t\tdata.isMatch = tsf.matchType( c, columnIndex );\n\n\t\t\t\t\tresult = showRow; // if showRow is true, show that row\n\n\t\t\t\t\t// in case select filter option has a different value vs text 'a - z|A through Z'\n\t\t\t\t\tffxn = wo.filter_columnFilters ?\n\t\t\t\t\t\tc.$filters.add( wo.filter_$externalFilters )\n\t\t\t\t\t\t\t.filter( '[data-column=\"' + columnIndex + '\"]' )\n\t\t\t\t\t\t\t.find( 'select option:selected' )\n\t\t\t\t\t\t\t.attr( 'data-function-name' ) || '' : '';\n\t\t\t\t\t// replace accents - see #357\n\t\t\t\t\tif ( c.sortLocaleCompare ) {\n\t\t\t\t\t\tdata.filter = ts.replaceAccents( data.filter );\n\t\t\t\t\t}\n\n\t\t\t\t\t// replace column specific default filters - see #1088\n\t\t\t\t\tif ( wo.filter_defaultFilter && tsfRegex.iQuery.test( vars.defaultColFilter[ columnIndex ] ) ) {\n\t\t\t\t\t\tdata.filter = tsf.defaultFilter( data.filter, vars.defaultColFilter[ columnIndex ] );\n\t\t\t\t\t}\n\n\t\t\t\t\t// data.iFilter = case insensitive ( if wo.filter_ignoreCase is true ),\n\t\t\t\t\t// data.filter = case sensitive\n\t\t\t\t\tdata.iFilter = wo.filter_ignoreCase ? ( data.filter || '' ).toLowerCase() : data.filter;\n\t\t\t\t\tfxn = vars.functions[ columnIndex ];\n\t\t\t\t\tfilterMatched = null;\n\t\t\t\t\tif ( fxn ) {\n\t\t\t\t\t\tif ( typeof fxn === 'function' ) {\n\t\t\t\t\t\t\t// filter callback( exact cell content, parser normalized content,\n\t\t\t\t\t\t\t// filter input value, column index, jQuery row object )\n\t\t\t\t\t\t\tfilterMatched = fxn( data.exact, data.cache, data.filter, columnIndex, data.$row, c, data );\n\t\t\t\t\t\t} else if ( typeof fxn[ ffxn || data.filter ] === 'function' ) {\n\t\t\t\t\t\t\t// selector option function\n\t\t\t\t\t\t\ttxt = ffxn || data.filter;\n\t\t\t\t\t\t\tfilterMatched =\n\t\t\t\t\t\t\t\tfxn[ txt ]( data.exact, data.cache, data.filter, columnIndex, data.$row, c, data );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( filterMatched === null ) {\n\t\t\t\t\t\t// cycle through the different filters\n\t\t\t\t\t\t// filters return a boolean or null if nothing matches\n\t\t\t\t\t\tfilterMatched = tsf.processTypes( c, data, vars );\n\t\t\t\t\t\t// select with exact match; ignore \"and\" or \"or\" within the text; fixes #1486\n\t\t\t\t\t\ttxt = fxn === true && (data.matchedOn === 'and' || data.matchedOn === 'or');\n\t\t\t\t\t\tif ( filterMatched !== null && !txt) {\n\t\t\t\t\t\t\tresult = filterMatched;\n\t\t\t\t\t\t// Look for match, and add child row data for matching\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// check fxn (filter-select in header) after filter types are checked\n\t\t\t\t\t\t\t// without this, the filter + jQuery UI selectmenu demo was breaking\n\t\t\t\t\t\t\tif ( fxn === true ) {\n\t\t\t\t\t\t\t\t// default selector uses exact match unless 'filter-match' class is found\n\t\t\t\t\t\t\t\tresult = data.isMatch ?\n\t\t\t\t\t\t\t\t\t// data.iExact may be a number\n\t\t\t\t\t\t\t\t\t( '' + data.iExact ).search( data.iFilter ) >= 0 :\n\t\t\t\t\t\t\t\t\tdata.filter === data.exact;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttxt = ( data.iExact + data.childRowText ).indexOf( tsf.parseFilter( c, data.iFilter, data ) );\n\t\t\t\t\t\t\t\tresult = ( ( !wo.filter_startsWith && txt >= 0 ) || ( wo.filter_startsWith && txt === 0 ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = filterMatched;\n\t\t\t\t\t}\n\t\t\t\t\tshowRow = ( result ) ? showRow : false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn showRow;\n\t\t},\n\t\tfindRows: function( table, filters, currentFilters ) {\n\t\t\tif (\n\t\t\t\ttsf.equalFilters(table.config, table.config.lastSearch, currentFilters) ||\n\t\t\t\t!table.config.widgetOptions.filter_initialized\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar len, norm_rows, rowData, $rows, $row, rowIndex, tbodyIndex, $tbody, columnIndex,\n\t\t\t\tisChild, childRow, lastSearch, showRow, showParent, time, val, indx,\n\t\t\t\tnotFiltered, searchFiltered, query, injected, res, id, txt,\n\t\t\t\tstoredFilters = $.extend( [], filters ),\n\t\t\t\tc = table.config,\n\t\t\t\two = c.widgetOptions,\n\t\t\t\tdebug = ts.debug(c, 'filter'),\n\t\t\t\t// data object passed to filters; anyMatch is a flag for the filters\n\t\t\t\tdata = {\n\t\t\t\t\tanyMatch: false,\n\t\t\t\t\tfilters: filters,\n\t\t\t\t\t// regex filter type cache\n\t\t\t\t\tfilter_regexCache : []\n\t\t\t\t},\n\t\t\t\tvars = {\n\t\t\t\t\t// anyMatch really screws up with these types of filters\n\t\t\t\t\tnoAnyMatch: [ 'range',  'operators' ],\n\t\t\t\t\t// cache filter variables that use ts.getColumnData in the main loop\n\t\t\t\t\tfunctions : [],\n\t\t\t\t\texcludeFilter : [],\n\t\t\t\t\tdefaultColFilter : [],\n\t\t\t\t\tdefaultAnyFilter : ts.getColumnData( table, wo.filter_defaultFilter, c.columns, true ) || ''\n\t\t\t\t};\n\t\t\t// parse columns after formatter, in case the class is added at that point\n\t\t\tdata.parsed = [];\n\t\t\tfor ( columnIndex = 0; columnIndex < c.columns; columnIndex++ ) {\n\t\t\t\tdata.parsed[ columnIndex ] = wo.filter_useParsedData ||\n\t\t\t\t\t// parser has a \"parsed\" parameter\n\t\t\t\t\t( c.parsers && c.parsers[ columnIndex ] && c.parsers[ columnIndex ].parsed ||\n\t\t\t\t\t// getData may not return 'parsed' if other 'filter-' class names exist\n\t\t\t\t\t// ( e.g. <th class=\"filter-select filter-parsed\"> )\n\t\t\t\t\tts.getData && ts.getData( c.$headerIndexed[ columnIndex ],\n\t\t\t\t\t\tts.getColumnData( table, c.headers, columnIndex ), 'filter' ) === 'parsed' ||\n\t\t\t\t\tc.$headerIndexed[ columnIndex ].hasClass( 'filter-parsed' ) );\n\n\t\t\t\tvars.functions[ columnIndex ] =\n\t\t\t\t\tts.getColumnData( table, wo.filter_functions, columnIndex ) ||\n\t\t\t\t\tc.$headerIndexed[ columnIndex ].hasClass( 'filter-select' );\n\t\t\t\tvars.defaultColFilter[ columnIndex ] =\n\t\t\t\t\tts.getColumnData( table, wo.filter_defaultFilter, columnIndex ) || '';\n\t\t\t\tvars.excludeFilter[ columnIndex ] =\n\t\t\t\t\t( ts.getColumnData( table, wo.filter_excludeFilter, columnIndex, true ) || '' ).split( /\\s+/ );\n\t\t\t}\n\n\t\t\tif ( debug ) {\n\t\t\t\tconsole.log( 'Filter >> Starting filter widget search', filters );\n\t\t\t\ttime = new Date();\n\t\t\t}\n\t\t\t// filtered rows count\n\t\t\tc.filteredRows = 0;\n\t\t\tc.totalRows = 0;\n\t\t\tcurrentFilters = ( storedFilters || [] );\n\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < c.$tbodies.length; tbodyIndex++ ) {\n\t\t\t\t$tbody = ts.processTbody( table, c.$tbodies.eq( tbodyIndex ), true );\n\t\t\t\t// skip child rows & widget added ( removable ) rows - fixes #448 thanks to @hempel!\n\t\t\t\t// $rows = $tbody.children( 'tr' ).not( c.selectorRemove );\n\t\t\t\tcolumnIndex = c.columns;\n\t\t\t\t// convert stored rows into a jQuery object\n\t\t\t\tnorm_rows = c.cache[ tbodyIndex ].normalized;\n\t\t\t\t$rows = $( $.map( norm_rows, function( el ) {\n\t\t\t\t\treturn el[ columnIndex ].$row.get();\n\t\t\t\t}) );\n\n\t\t\t\tif ( currentFilters.join('') === '' || wo.filter_serversideFiltering ) {\n\t\t\t\t\t$rows\n\t\t\t\t\t\t.removeClass( wo.filter_filteredRow )\n\t\t\t\t\t\t.not( '.' + c.cssChildRow )\n\t\t\t\t\t\t.css( 'display', '' );\n\t\t\t\t} else {\n\t\t\t\t\t// filter out child rows\n\t\t\t\t\t$rows = $rows.not( '.' + c.cssChildRow );\n\t\t\t\t\tlen = $rows.length;\n\n\t\t\t\t\tif ( ( wo.filter_$anyMatch && wo.filter_$anyMatch.length ) ||\n\t\t\t\t\t\ttypeof filters[c.columns] !== 'undefined' ) {\n\t\t\t\t\t\tdata.anyMatchFlag = true;\n\t\t\t\t\t\tdata.anyMatchFilter = '' + (\n\t\t\t\t\t\t\tfilters[ c.columns ] ||\n\t\t\t\t\t\t\two.filter_$anyMatch && tsf.getLatestSearch( wo.filter_$anyMatch ).val() ||\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( wo.filter_columnAnyMatch ) {\n\t\t\t\t\t\t\t// specific columns search\n\t\t\t\t\t\t\tquery = data.anyMatchFilter.split( tsfRegex.andSplit );\n\t\t\t\t\t\t\tinjected = false;\n\t\t\t\t\t\t\tfor ( indx = 0; indx < query.length; indx++ ) {\n\t\t\t\t\t\t\t\tres = query[ indx ].split( ':' );\n\t\t\t\t\t\t\t\tif ( res.length > 1 ) {\n\t\t\t\t\t\t\t\t\t// make the column a one-based index ( non-developers start counting from one :P )\n\t\t\t\t\t\t\t\t\tif ( isNaN( res[0] ) ) {\n\t\t\t\t\t\t\t\t\t\t$.each( c.headerContent, function( i, txt ) {\n\t\t\t\t\t\t\t\t\t\t\t// multiple matches are possible\n\t\t\t\t\t\t\t\t\t\t\tif ( txt.toLowerCase().indexOf( res[0] ) > -1 ) {\n\t\t\t\t\t\t\t\t\t\t\t\tid = i;\n\t\t\t\t\t\t\t\t\t\t\t\tfilters[ id ] = res[1];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tid = parseInt( res[0], 10 ) - 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif ( id >= 0 && id < c.columns ) { // if id is an integer\n\t\t\t\t\t\t\t\t\t\tfilters[ id ] = res[1];\n\t\t\t\t\t\t\t\t\t\tquery.splice( indx, 1 );\n\t\t\t\t\t\t\t\t\t\tindx--;\n\t\t\t\t\t\t\t\t\t\tinjected = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( injected ) {\n\t\t\t\t\t\t\t\tdata.anyMatchFilter = query.join( ' && ' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// optimize searching only through already filtered rows - see #313\n\t\t\t\t\tsearchFiltered = wo.filter_searchFiltered;\n\t\t\t\t\tlastSearch = c.lastSearch || c.$table.data( 'lastSearch' ) || [];\n\t\t\t\t\tif ( searchFiltered ) {\n\t\t\t\t\t\t// cycle through all filters; include last ( columnIndex + 1 = match any column ). Fixes #669\n\t\t\t\t\t\tfor ( indx = 0; indx < columnIndex + 1; indx++ ) {\n\t\t\t\t\t\t\tval = filters[indx] || '';\n\t\t\t\t\t\t\t// break out of loop if we've already determined not to search filtered rows\n\t\t\t\t\t\t\tif ( !searchFiltered ) { indx = columnIndex; }\n\t\t\t\t\t\t\t// search already filtered rows if...\n\t\t\t\t\t\t\tsearchFiltered = searchFiltered && lastSearch.length &&\n\t\t\t\t\t\t\t\t// there are no changes from beginning of filter\n\t\t\t\t\t\t\t\tval.indexOf( lastSearch[indx] || '' ) === 0 &&\n\t\t\t\t\t\t\t\t// if there is NOT a logical 'or', or range ( 'to' or '-' ) in the string\n\t\t\t\t\t\t\t\t!tsfRegex.alreadyFiltered.test( val ) &&\n\t\t\t\t\t\t\t\t// if we are not doing exact matches, using '|' ( logical or ) or not '!'\n\t\t\t\t\t\t\t\t!tsfRegex.exactTest.test( val ) &&\n\t\t\t\t\t\t\t\t// don't search only filtered if the value is negative\n\t\t\t\t\t\t\t\t// ( '> -10' => '> -100' will ignore hidden rows )\n\t\t\t\t\t\t\t\t!( tsfRegex.isNeg1.test( val ) || tsfRegex.isNeg2.test( val ) ) &&\n\t\t\t\t\t\t\t\t// if filtering using a select without a 'filter-match' class ( exact match ) - fixes #593\n\t\t\t\t\t\t\t\t!( val !== '' && c.$filters && c.$filters.filter( '[data-column=\"' + indx + '\"]' ).find( 'select' ).length &&\n\t\t\t\t\t\t\t\t\t!tsf.matchType( c, indx ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnotFiltered = $rows.not( '.' + wo.filter_filteredRow ).length;\n\t\t\t\t\t// can't search when all rows are hidden - this happens when looking for exact matches\n\t\t\t\t\tif ( searchFiltered && notFiltered === 0 ) { searchFiltered = false; }\n\t\t\t\t\tif ( debug ) {\n\t\t\t\t\t\tconsole.log( 'Filter >> Searching through ' +\n\t\t\t\t\t\t\t( searchFiltered && notFiltered < len ? notFiltered : 'all' ) + ' rows' );\n\t\t\t\t\t}\n\t\t\t\t\tif ( data.anyMatchFlag ) {\n\t\t\t\t\t\tif ( c.sortLocaleCompare ) {\n\t\t\t\t\t\t\t// replace accents\n\t\t\t\t\t\t\tdata.anyMatchFilter = ts.replaceAccents( data.anyMatchFilter );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( wo.filter_defaultFilter && tsfRegex.iQuery.test( vars.defaultAnyFilter ) ) {\n\t\t\t\t\t\t\tdata.anyMatchFilter = tsf.defaultFilter( data.anyMatchFilter, vars.defaultAnyFilter );\n\t\t\t\t\t\t\t// clear search filtered flag because default filters are not saved to the last search\n\t\t\t\t\t\t\tsearchFiltered = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// make iAnyMatchFilter lowercase unless both filter widget & core ignoreCase options are true\n\t\t\t\t\t\t// when c.ignoreCase is true, the cache contains all lower case data\n\t\t\t\t\t\tdata.iAnyMatchFilter = !( wo.filter_ignoreCase && c.ignoreCase ) ?\n\t\t\t\t\t\t\tdata.anyMatchFilter :\n\t\t\t\t\t\t\tdata.anyMatchFilter.toLowerCase();\n\t\t\t\t\t}\n\n\t\t\t\t\t// loop through the rows\n\t\t\t\t\tfor ( rowIndex = 0; rowIndex < len; rowIndex++ ) {\n\n\t\t\t\t\t\ttxt = $rows[ rowIndex ].className;\n\t\t\t\t\t\t// the first row can never be a child row\n\t\t\t\t\t\tisChild = rowIndex && tsfRegex.child.test( txt );\n\t\t\t\t\t\t// skip child rows & already filtered rows\n\t\t\t\t\t\tif ( isChild || ( searchFiltered && tsfRegex.filtered.test( txt ) ) ) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata.$row = $rows.eq( rowIndex );\n\t\t\t\t\t\tdata.rowIndex = rowIndex;\n\t\t\t\t\t\tdata.cacheArray = norm_rows[ rowIndex ];\n\t\t\t\t\t\trowData = data.cacheArray[ c.columns ];\n\t\t\t\t\t\tdata.rawArray = rowData.raw;\n\t\t\t\t\t\tdata.childRowText = '';\n\n\t\t\t\t\t\tif ( !wo.filter_childByColumn ) {\n\t\t\t\t\t\t\ttxt = '';\n\t\t\t\t\t\t\t// child row cached text\n\t\t\t\t\t\t\tchildRow = rowData.child;\n\t\t\t\t\t\t\t// so, if 'table.config.widgetOptions.filter_childRows' is true and there is\n\t\t\t\t\t\t\t// a match anywhere in the child row, then it will make the row visible\n\t\t\t\t\t\t\t// checked here so the option can be changed dynamically\n\t\t\t\t\t\t\tfor ( indx = 0; indx < childRow.length; indx++ ) {\n\t\t\t\t\t\t\t\ttxt += ' ' + childRow[indx].join( ' ' ) || '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdata.childRowText = wo.filter_childRows ?\n\t\t\t\t\t\t\t\t( wo.filter_ignoreCase ? txt.toLowerCase() : txt ) :\n\t\t\t\t\t\t\t\t'';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tshowRow = false;\n\t\t\t\t\t\tshowParent = tsf.processRow( c, data, vars );\n\t\t\t\t\t\t$row = rowData.$row;\n\n\t\t\t\t\t\t// don't pass reference to val\n\t\t\t\t\t\tval = showParent ? true : false;\n\t\t\t\t\t\tchildRow = rowData.$row.filter( ':gt(0)' );\n\t\t\t\t\t\tif ( wo.filter_childRows && childRow.length ) {\n\t\t\t\t\t\t\tif ( wo.filter_childByColumn ) {\n\t\t\t\t\t\t\t\tif ( !wo.filter_childWithSibs ) {\n\t\t\t\t\t\t\t\t\t// hide all child rows\n\t\t\t\t\t\t\t\t\tchildRow.addClass( wo.filter_filteredRow );\n\t\t\t\t\t\t\t\t\t// if only showing resulting child row, only include parent\n\t\t\t\t\t\t\t\t\t$row = $row.eq( 0 );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// cycle through each child row\n\t\t\t\t\t\t\t\tfor ( indx = 0; indx < childRow.length; indx++ ) {\n\t\t\t\t\t\t\t\t\tdata.$row = childRow.eq( indx );\n\t\t\t\t\t\t\t\t\tdata.cacheArray = rowData.child[ indx ];\n\t\t\t\t\t\t\t\t\tdata.rawArray = data.cacheArray;\n\t\t\t\t\t\t\t\t\tval = tsf.processRow( c, data, vars );\n\t\t\t\t\t\t\t\t\t// use OR comparison on child rows\n\t\t\t\t\t\t\t\t\tshowRow = showRow || val;\n\t\t\t\t\t\t\t\t\tif ( !wo.filter_childWithSibs && val ) {\n\t\t\t\t\t\t\t\t\t\tchildRow.eq( indx ).removeClass( wo.filter_filteredRow );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// keep parent row match even if no child matches... see #1020\n\t\t\t\t\t\t\tshowRow = showRow || showParent;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshowRow = val;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$row\n\t\t\t\t\t\t\t.toggleClass( wo.filter_filteredRow, !showRow )[0]\n\t\t\t\t\t\t\t.display = showRow ? '' : 'none';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tc.filteredRows += $rows.not( '.' + wo.filter_filteredRow ).length;\n\t\t\t\tc.totalRows += $rows.length;\n\t\t\t\tts.processTbody( table, $tbody, false );\n\t\t\t}\n\t\t\t// lastCombinedFilter is no longer used internally\n\t\t\tc.lastCombinedFilter = storedFilters.join(''); // save last search\n\t\t\t// don't save 'filters' directly since it may have altered ( AnyMatch column searches )\n\t\t\tc.lastSearch = storedFilters;\n\t\t\tc.$table.data( 'lastSearch', storedFilters );\n\t\t\tif ( wo.filter_saveFilters && ts.storage ) {\n\t\t\t\tts.storage( table, 'tablesorter-filters', tsf.processFilters( storedFilters, true ) );\n\t\t\t}\n\t\t\tif ( debug ) {\n\t\t\t\tconsole.log( 'Filter >> Completed search' + ts.benchmark(time) );\n\t\t\t}\n\t\t\tif ( wo.filter_initialized ) {\n\t\t\t\tc.$table.triggerHandler( 'filterBeforeEnd', c );\n\t\t\t\tc.$table.triggerHandler( 'filterEnd', c );\n\t\t\t}\n\t\t\tsetTimeout( function() {\n\t\t\t\tts.applyWidget( c.table ); // make sure zebra widget is applied\n\t\t\t}, 0 );\n\t\t},\n\t\tgetOptionSource: function( table, column, onlyAvail ) {\n\t\t\ttable = $( table )[0];\n\t\t\tvar c = table.config,\n\t\t\t\two = c.widgetOptions,\n\t\t\t\tarry = false,\n\t\t\t\tsource = wo.filter_selectSource,\n\t\t\t\tlast = c.$table.data( 'lastSearch' ) || [],\n\t\t\t\tfxn = typeof source === 'function' ? true : ts.getColumnData( table, source, column );\n\n\t\t\tif ( onlyAvail && last[column] !== '' ) {\n\t\t\t\tonlyAvail = false;\n\t\t\t}\n\n\t\t\t// filter select source option\n\t\t\tif ( fxn === true ) {\n\t\t\t\t// OVERALL source\n\t\t\t\tarry = source( table, column, onlyAvail );\n\t\t\t} else if ( fxn instanceof $ || ( $.type( fxn ) === 'string' && fxn.indexOf( '</option>' ) >= 0 ) ) {\n\t\t\t\t// selectSource is a jQuery object or string of options\n\t\t\t\treturn fxn;\n\t\t\t} else if ( $.isArray( fxn ) ) {\n\t\t\t\tarry = fxn;\n\t\t\t} else if ( $.type( source ) === 'object' && fxn ) {\n\t\t\t\t// custom select source function for a SPECIFIC COLUMN\n\t\t\t\tarry = fxn( table, column, onlyAvail );\n\t\t\t\t// abort - updating the selects from an external method\n\t\t\t\tif (arry === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( arry === false ) {\n\t\t\t\t// fall back to original method\n\t\t\t\tarry = tsf.getOptions( table, column, onlyAvail );\n\t\t\t}\n\n\t\t\treturn tsf.processOptions( table, column, arry );\n\n\t\t},\n\t\tprocessOptions: function( table, column, arry ) {\n\t\t\tif ( !$.isArray( arry ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ttable = $( table )[0];\n\t\t\tvar cts, txt, indx, len, parsedTxt, str,\n\t\t\t\tc = table.config,\n\t\t\t\tvalidColumn = typeof column !== 'undefined' && column !== null && column >= 0 && column < c.columns,\n\t\t\t\tdirection = validColumn ? c.$headerIndexed[ column ].hasClass( 'filter-select-sort-desc' ) : false,\n\t\t\t\tparsed = [];\n\t\t\t// get unique elements and sort the list\n\t\t\t// if $.tablesorter.sortText exists ( not in the original tablesorter ),\n\t\t\t// then natural sort the list otherwise use a basic sort\n\t\t\tarry = $.grep( arry, function( value, indx ) {\n\t\t\t\tif ( value.text ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn $.inArray( value, arry ) === indx;\n\t\t\t});\n\t\t\tif ( validColumn && c.$headerIndexed[ column ].hasClass( 'filter-select-nosort' ) ) {\n\t\t\t\t// unsorted select options\n\t\t\t\treturn arry;\n\t\t\t} else {\n\t\t\t\tlen = arry.length;\n\t\t\t\t// parse select option values\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\t\ttxt = arry[ indx ];\n\t\t\t\t\t// check for object\n\t\t\t\t\tstr = txt.text ? txt.text : txt;\n\t\t\t\t\t// sortNatural breaks if you don't pass it strings\n\t\t\t\t\tparsedTxt = ( validColumn && c.parsers && c.parsers.length &&\n\t\t\t\t\t\tc.parsers[ column ].format( str, table, [], column ) || str ).toString();\n\t\t\t\t\tparsedTxt = c.widgetOptions.filter_ignoreCase ? parsedTxt.toLowerCase() : parsedTxt;\n\t\t\t\t\t// parse array data using set column parser; this DOES NOT pass the original\n\t\t\t\t\t// table cell to the parser format function\n\t\t\t\t\tif ( txt.text ) {\n\t\t\t\t\t\ttxt.parsed = parsedTxt;\n\t\t\t\t\t\tparsed[ parsed.length ] = txt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparsed[ parsed.length ] = {\n\t\t\t\t\t\t\ttext : txt,\n\t\t\t\t\t\t\t// check parser length - fixes #934\n\t\t\t\t\t\t\tparsed : parsedTxt\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// sort parsed select options\n\t\t\t\tcts = c.textSorter || '';\n\t\t\t\tparsed.sort( function( a, b ) {\n\t\t\t\t\tvar x = direction ? b.parsed : a.parsed,\n\t\t\t\t\t\ty = direction ? a.parsed : b.parsed;\n\t\t\t\t\tif ( validColumn && typeof cts === 'function' ) {\n\t\t\t\t\t\t// custom OVERALL text sorter\n\t\t\t\t\t\treturn cts( x, y, true, column, table );\n\t\t\t\t\t} else if ( validColumn && typeof cts === 'object' && cts.hasOwnProperty( column ) ) {\n\t\t\t\t\t\t// custom text sorter for a SPECIFIC COLUMN\n\t\t\t\t\t\treturn cts[column]( x, y, true, column, table );\n\t\t\t\t\t} else if ( ts.sortNatural ) {\n\t\t\t\t\t\t// fall back to natural sort\n\t\t\t\t\t\treturn ts.sortNatural( x, y );\n\t\t\t\t\t}\n\t\t\t\t\t// using an older version! do a basic sort\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t\t// rebuild arry from sorted parsed data\n\t\t\t\tarry = [];\n\t\t\t\tlen = parsed.length;\n\t\t\t\tfor ( indx = 0; indx < len; indx++ ) {\n\t\t\t\t\tarry[ arry.length ] = parsed[indx];\n\t\t\t\t}\n\t\t\t\treturn arry;\n\t\t\t}\n\t\t},\n\t\tgetOptions: function( table, column, onlyAvail ) {\n\t\t\ttable = $( table )[0];\n\t\t\tvar rowIndex, tbodyIndex, len, row, cache, indx, child, childLen,\n\t\t\t\tc = table.config,\n\t\t\t\two = c.widgetOptions,\n\t\t\t\tarry = [];\n\t\t\tfor ( tbodyIndex = 0; tbodyIndex < c.$tbodies.length; tbodyIndex++ ) {\n\t\t\t\tcache = c.cache[tbodyIndex];\n\t\t\t\tlen = c.cache[tbodyIndex].normalized.length;\n\t\t\t\t// loop through the rows\n\t\t\t\tfor ( rowIndex = 0; rowIndex < len; rowIndex++ ) {\n\t\t\t\t\t// get cached row from cache.row ( old ) or row data object\n\t\t\t\t\t// ( new; last item in normalized array )\n\t\t\t\t\trow = cache.row ?\n\t\t\t\t\t\tcache.row[ rowIndex ] :\n\t\t\t\t\t\tcache.normalized[ rowIndex ][ c.columns ].$row[0];\n\t\t\t\t\t// check if has class filtered\n\t\t\t\t\tif ( onlyAvail && row.className.match( wo.filter_filteredRow ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t// get non-normalized cell content\n\t\t\t\t\tif ( wo.filter_useParsedData ||\n\t\t\t\t\t\tc.parsers[column].parsed ||\n\t\t\t\t\t\tc.$headerIndexed[column].hasClass( 'filter-parsed' ) ) {\n\t\t\t\t\t\tarry[ arry.length ] = '' + cache.normalized[ rowIndex ][ column ];\n\t\t\t\t\t\t// child row parsed data\n\t\t\t\t\t\tif ( wo.filter_childRows && wo.filter_childByColumn ) {\n\t\t\t\t\t\t\tchildLen = cache.normalized[ rowIndex ][ c.columns ].$row.length - 1;\n\t\t\t\t\t\t\tfor ( indx = 0; indx < childLen; indx++ ) {\n\t\t\t\t\t\t\t\tarry[ arry.length ] = '' + cache.normalized[ rowIndex ][ c.columns ].child[ indx ][ column ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// get raw cached data instead of content directly from the cells\n\t\t\t\t\t\tarry[ arry.length ] = cache.normalized[ rowIndex ][ c.columns ].raw[ column ];\n\t\t\t\t\t\t// child row unparsed data\n\t\t\t\t\t\tif ( wo.filter_childRows && wo.filter_childByColumn ) {\n\t\t\t\t\t\t\tchildLen = cache.normalized[ rowIndex ][ c.columns ].$row.length;\n\t\t\t\t\t\t\tfor ( indx = 1; indx < childLen; indx++ ) {\n\t\t\t\t\t\t\t\tchild =  cache.normalized[ rowIndex ][ c.columns ].$row.eq( indx ).children().eq( column );\n\t\t\t\t\t\t\t\tarry[ arry.length ] = '' + ts.getElementText( c, child, column );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn arry;\n\t\t},\n\t\tbuildSelect: function( table, column, arry, updating, onlyAvail ) {\n\t\t\ttable = $( table )[0];\n\t\t\tcolumn = parseInt( column, 10 );\n\t\t\tif ( !table.config.cache || $.isEmptyObject( table.config.cache ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar indx, val, txt, t, $filters, $filter, option,\n\t\t\t\tc = table.config,\n\t\t\t\two = c.widgetOptions,\n\t\t\t\tnode = c.$headerIndexed[ column ],\n\t\t\t\t// t.data( 'placeholder' ) won't work in jQuery older than 1.4.3\n\t\t\t\toptions = '<option value=\"\">' +\n\t\t\t\t\t( node.data( 'placeholder' ) ||\n\t\t\t\t\t\tnode.attr( 'data-placeholder' ) ||\n\t\t\t\t\t\two.filter_placeholder.select || ''\n\t\t\t\t\t) + '</option>',\n\t\t\t\t// Get curent filter value\n\t\t\t\tcurrentValue = c.$table\n\t\t\t\t\t.find( 'thead' )\n\t\t\t\t\t.find( 'select.' + tscss.filter + '[data-column=\"' + column + '\"]' )\n\t\t\t\t\t.val();\n\n\t\t\t// nothing included in arry ( external source ), so get the options from\n\t\t\t// filter_selectSource or column data\n\t\t\tif ( typeof arry === 'undefined' || arry === '' ) {\n\t\t\t\tarry = tsf.getOptionSource( table, column, onlyAvail );\n\t\t\t\t// abort, selects are updated by an external method\n\t\t\t\tif (arry === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( $.isArray( arry ) ) {\n\t\t\t\t// build option list\n\t\t\t\tfor ( indx = 0; indx < arry.length; indx++ ) {\n\t\t\t\t\toption = arry[ indx ];\n\t\t\t\t\tif ( option.text ) {\n\t\t\t\t\t\t// OBJECT!! add data-function-name in case the value is set in filter_functions\n\t\t\t\t\t\toption['data-function-name'] = typeof option.value === 'undefined' ? option.text : option.value;\n\n\t\t\t\t\t\t// support jQuery < v1.8, otherwise the below code could be shortened to\n\t\t\t\t\t\t// options += $( '<option>', option )[ 0 ].outerHTML;\n\t\t\t\t\t\toptions += '<option';\n\t\t\t\t\t\tfor ( val in option ) {\n\t\t\t\t\t\t\tif ( option.hasOwnProperty( val ) && val !== 'text' ) {\n\t\t\t\t\t\t\t\toptions += ' ' + val + '=\"' + option[ val ].replace( tsfRegex.quote, '&quot;' ) + '\"';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( !option.value ) {\n\t\t\t\t\t\t\toptions += ' value=\"' + option.text.replace( tsfRegex.quote, '&quot;' ) + '\"';\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptions += '>' + option.text.replace( tsfRegex.quote, '&quot;' ) + '</option>';\n\t\t\t\t\t\t// above code is needed in jQuery < v1.8\n\n\t\t\t\t\t\t// make sure we don't turn an object into a string (objects without a \"text\" property)\n\t\t\t\t\t} else if ( '' + option !== '[object Object]' ) {\n\t\t\t\t\t\ttxt = option = ( '' + option ).replace( tsfRegex.quote, '&quot;' );\n\t\t\t\t\t\tval = txt;\n\t\t\t\t\t\t// allow including a symbol in the selectSource array\n\t\t\t\t\t\t// 'a-z|A through Z' so that 'a-z' becomes the option value\n\t\t\t\t\t\t// and 'A through Z' becomes the option text\n\t\t\t\t\t\tif ( txt.indexOf( wo.filter_selectSourceSeparator ) >= 0 ) {\n\t\t\t\t\t\t\tt = txt.split( wo.filter_selectSourceSeparator );\n\t\t\t\t\t\t\tval = t[0];\n\t\t\t\t\t\t\ttxt = t[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// replace quotes - fixes #242 & ignore empty strings\n\t\t\t\t\t\t// see http://stackoverflow.com/q/14990971/145346\n\t\t\t\t\t\toptions += option !== '' ?\n\t\t\t\t\t\t\t'<option ' +\n\t\t\t\t\t\t\t\t( val === txt ? '' : 'data-function-name=\"' + option + '\" ' ) +\n\t\t\t\t\t\t\t\t'value=\"' + val + '\">' + txt +\n\t\t\t\t\t\t\t'</option>' : '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// clear arry so it doesn't get appended twice\n\t\t\t\tarry = [];\n\t\t\t}\n\n\t\t\t// update all selects in the same column ( clone thead in sticky headers &\n\t\t\t// any external selects ) - fixes 473\n\t\t\t$filters = ( c.$filters ? c.$filters : c.$table.children( 'thead' ) )\n\t\t\t\t.find( '.' + tscss.filter );\n\t\t\tif ( wo.filter_$externalFilters ) {\n\t\t\t\t$filters = $filters && $filters.length ?\n\t\t\t\t\t$filters.add( wo.filter_$externalFilters ) :\n\t\t\t\t\two.filter_$externalFilters;\n\t\t\t}\n\t\t\t$filter = $filters.filter( 'select[data-column=\"' + column + '\"]' );\n\n\t\t\t// make sure there is a select there!\n\t\t\tif ( $filter.length ) {\n\t\t\t\t$filter[ updating ? 'html' : 'append' ]( options );\n\t\t\t\tif ( !$.isArray( arry ) ) {\n\t\t\t\t\t// append options if arry is provided externally as a string or jQuery object\n\t\t\t\t\t// options ( default value ) was already added\n\t\t\t\t\t$filter.append( arry ).val( currentValue );\n\t\t\t\t}\n\t\t\t\t$filter.val( currentValue );\n\t\t\t}\n\t\t},\n\t\tbuildDefault: function( table, updating ) {\n\t\t\tvar columnIndex, $header, noSelect,\n\t\t\t\tc = table.config,\n\t\t\t\two = c.widgetOptions,\n\t\t\t\tcolumns = c.columns;\n\t\t\t// build default select dropdown\n\t\t\tfor ( columnIndex = 0; columnIndex < columns; columnIndex++ ) {\n\t\t\t\t$header = c.$headerIndexed[columnIndex];\n\t\t\t\tnoSelect = !( $header.hasClass( 'filter-false' ) || $header.hasClass( 'parser-false' ) );\n\t\t\t\t// look for the filter-select class; build/update it if found\n\t\t\t\tif ( ( $header.hasClass( 'filter-select' ) ||\n\t\t\t\t\tts.getColumnData( table, wo.filter_functions, columnIndex ) === true ) && noSelect ) {\n\t\t\t\t\ttsf.buildSelect( table, columnIndex, '', updating, $header.hasClass( wo.filter_onlyAvail ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// filter regex variable\n\ttsfRegex = tsf.regex;\n\n\tts.getFilters = function( table, getRaw, setFilters, skipFirst ) {\n\t\tvar i, $filters, $column, cols,\n\t\t\tfilters = [],\n\t\t\tc = table ? $( table )[0].config : '',\n\t\t\two = c ? c.widgetOptions : '';\n\t\tif ( ( getRaw !== true && wo && !wo.filter_columnFilters ) ||\n\t\t\t// setFilters called, but last search is exactly the same as the current\n\t\t\t// fixes issue #733 & #903 where calling update causes the input values to reset\n\t\t\t( $.isArray(setFilters) && tsf.equalFilters(c, setFilters, c.lastSearch) )\n\t\t) {\n\t\t\treturn $( table ).data( 'lastSearch' ) || [];\n\t\t}\n\t\tif ( c ) {\n\t\t\tif ( c.$filters ) {\n\t\t\t\t$filters = c.$filters.find( '.' + tscss.filter );\n\t\t\t}\n\t\t\tif ( wo.filter_$externalFilters ) {\n\t\t\t\t$filters = $filters && $filters.length ?\n\t\t\t\t\t$filters.add( wo.filter_$externalFilters ) :\n\t\t\t\t\two.filter_$externalFilters;\n\t\t\t}\n\t\t\tif ( $filters && $filters.length ) {\n\t\t\t\tfilters = setFilters || [];\n\t\t\t\tfor ( i = 0; i < c.columns + 1; i++ ) {\n\t\t\t\t\tcols = ( i === c.columns ?\n\t\t\t\t\t\t// 'all' columns can now include a range or set of columms ( data-column='0-2,4,6-7' )\n\t\t\t\t\t\two.filter_anyColumnSelector + ',' + wo.filter_multipleColumnSelector :\n\t\t\t\t\t\t'[data-column=\"' + i + '\"]' );\n\t\t\t\t\t$column = $filters.filter( cols );\n\t\t\t\t\tif ( $column.length ) {\n\t\t\t\t\t\t// move the latest search to the first slot in the array\n\t\t\t\t\t\t$column = tsf.getLatestSearch( $column );\n\t\t\t\t\t\tif ( $.isArray( setFilters ) ) {\n\t\t\t\t\t\t\t// skip first ( latest input ) to maintain cursor position while typing\n\t\t\t\t\t\t\tif ( skipFirst && $column.length > 1 ) {\n\t\t\t\t\t\t\t\t$column = $column.slice( 1 );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( i === c.columns ) {\n\t\t\t\t\t\t\t\t// prevent data-column='all' from filling data-column='0,1' ( etc )\n\t\t\t\t\t\t\t\tcols = $column.filter( wo.filter_anyColumnSelector );\n\t\t\t\t\t\t\t\t$column = cols.length ? cols : $column;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$column\n\t\t\t\t\t\t\t\t.val( setFilters[ i ] )\n\t\t\t\t\t\t\t\t// must include a namespace here; but not c.namespace + 'filter'?\n\t\t\t\t\t\t\t\t.trigger( 'change' + c.namespace );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilters[i] = $column.val() || '';\n\t\t\t\t\t\t\t// don't change the first... it will move the cursor\n\t\t\t\t\t\t\tif ( i === c.columns ) {\n\t\t\t\t\t\t\t\t// don't update range columns from 'all' setting\n\t\t\t\t\t\t\t\t$column\n\t\t\t\t\t\t\t\t\t.slice( 1 )\n\t\t\t\t\t\t\t\t\t.filter( '[data-column*=\"' + $column.attr( 'data-column' ) + '\"]' )\n\t\t\t\t\t\t\t\t\t.val( filters[ i ] );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$column\n\t\t\t\t\t\t\t\t\t.slice( 1 )\n\t\t\t\t\t\t\t\t\t.val( filters[ i ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// save any match input dynamically\n\t\t\t\t\t\tif ( i === c.columns && $column.length ) {\n\t\t\t\t\t\t\two.filter_$anyMatch = $column;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn filters;\n\t};\n\n\tts.setFilters = function( table, filter, apply, skipFirst ) {\n\t\tvar c = table ? $( table )[0].config : '',\n\t\t\tvalid = ts.getFilters( table, true, filter, skipFirst );\n\t\t// default apply to \"true\"\n\t\tif ( typeof apply === 'undefined' ) {\n\t\t\tapply = true;\n\t\t}\n\t\tif ( c && apply ) {\n\t\t\t// ensure new set filters are applied, even if the search is the same\n\t\t\tc.lastCombinedFilter = null;\n\t\t\tc.lastSearch = [];\n\t\t\ttsf.searching( c.table, filter, skipFirst );\n\t\t\tc.$table.triggerHandler( 'filterFomatterUpdate' );\n\t\t}\n\t\treturn valid.length !== 0;\n\t};\n\n})( jQuery );\n\n/*! Widget: stickyHeaders - updated 9/27/2017 (v2.29.0) *//*\n * Requires tablesorter v2.8+ and jQuery 1.4.3+\n * by Rob Garrison\n */\n;(function ($, window) {\n\t'use strict';\n\tvar ts = $.tablesorter || {};\n\n\t$.extend(ts.css, {\n\t\tsticky    : 'tablesorter-stickyHeader', // stickyHeader\n\t\tstickyVis : 'tablesorter-sticky-visible',\n\t\tstickyHide: 'tablesorter-sticky-hidden',\n\t\tstickyWrap: 'tablesorter-sticky-wrapper'\n\t});\n\n\t// Add a resize event to table headers\n\tts.addHeaderResizeEvent = function(table, disable, settings) {\n\t\ttable = $(table)[0]; // make sure we're using a dom element\n\t\tif ( !table.config ) { return; }\n\t\tvar defaults = {\n\t\t\t\ttimer : 250\n\t\t\t},\n\t\t\toptions = $.extend({}, defaults, settings),\n\t\t\tc = table.config,\n\t\t\two = c.widgetOptions,\n\t\t\tcheckSizes = function( triggerEvent ) {\n\t\t\t\tvar index, headers, $header, sizes, width, height,\n\t\t\t\t\tlen = c.$headers.length;\n\t\t\t\two.resize_flag = true;\n\t\t\t\theaders = [];\n\t\t\t\tfor ( index = 0; index < len; index++ ) {\n\t\t\t\t\t$header = c.$headers.eq( index );\n\t\t\t\t\tsizes = $header.data( 'savedSizes' ) || [ 0, 0 ]; // fixes #394\n\t\t\t\t\twidth = $header[0].offsetWidth;\n\t\t\t\t\theight = $header[0].offsetHeight;\n\t\t\t\t\tif ( width !== sizes[0] || height !== sizes[1] ) {\n\t\t\t\t\t\t$header.data( 'savedSizes', [ width, height ] );\n\t\t\t\t\t\theaders.push( $header[0] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( headers.length && triggerEvent !== false ) {\n\t\t\t\t\tc.$table.triggerHandler( 'resize', [ headers ] );\n\t\t\t\t}\n\t\t\t\two.resize_flag = false;\n\t\t\t};\n\t\tclearInterval(wo.resize_timer);\n\t\tif (disable) {\n\t\t\two.resize_flag = false;\n\t\t\treturn false;\n\t\t}\n\t\tcheckSizes( false );\n\t\two.resize_timer = setInterval(function() {\n\t\t\tif (wo.resize_flag) { return; }\n\t\t\tcheckSizes();\n\t\t}, options.timer);\n\t};\n\n\tfunction getStickyOffset(c, wo) {\n\t\tvar $el = isNaN(wo.stickyHeaders_offset) ? $(wo.stickyHeaders_offset) : [];\n\t\treturn $el.length ?\n\t\t\t$el.height() || 0 :\n\t\t\tparseInt(wo.stickyHeaders_offset, 10) || 0;\n\t}\n\n\t// Sticky headers based on this awesome article:\n\t// http://css-tricks.com/13465-persistent-headers/\n\t// and https://github.com/jmosbech/StickyTableHeaders by Jonas Mosbech\n\t// **************************\n\tts.addWidget({\n\t\tid: 'stickyHeaders',\n\t\tpriority: 54, // sticky widget must be initialized after the filter & before pager widget!\n\t\toptions: {\n\t\t\tstickyHeaders : '',       // extra class name added to the sticky header row\n\t\t\tstickyHeaders_appendTo : null, // jQuery selector or object to phycially attach the sticky headers\n\t\t\tstickyHeaders_attachTo : null, // jQuery selector or object to attach scroll listener to (overridden by xScroll & yScroll settings)\n\t\t\tstickyHeaders_xScroll : null, // jQuery selector or object to monitor horizontal scroll position (defaults: xScroll > attachTo > window)\n\t\t\tstickyHeaders_yScroll : null, // jQuery selector or object to monitor vertical scroll position (defaults: yScroll > attachTo > window)\n\t\t\tstickyHeaders_offset : 0, // number or jquery selector targeting the position:fixed element\n\t\t\tstickyHeaders_filteredToTop: true, // scroll table top into view after filtering\n\t\t\tstickyHeaders_cloneId : '-sticky', // added to table ID, if it exists\n\t\t\tstickyHeaders_addResizeEvent : true, // trigger 'resize' event on headers\n\t\t\tstickyHeaders_includeCaption : true, // if false and a caption exist, it won't be included in the sticky header\n\t\t\tstickyHeaders_zIndex : 2 // The zIndex of the stickyHeaders, allows the user to adjust this to their needs\n\t\t},\n\t\tformat: function(table, c, wo) {\n\t\t\t// filter widget doesn't initialize on an empty table. Fixes #449\n\t\t\tif ( c.$table.hasClass('hasStickyHeaders') || ($.inArray('filter', c.widgets) >= 0 && !c.$table.hasClass('hasFilters')) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar index, len, $t,\n\t\t\t\t$table = c.$table,\n\t\t\t\t// add position: relative to attach element, hopefully it won't cause trouble.\n\t\t\t\t$attach = $(wo.stickyHeaders_attachTo || wo.stickyHeaders_appendTo),\n\t\t\t\tnamespace = c.namespace + 'stickyheaders ',\n\t\t\t\t// element to watch for the scroll event\n\t\t\t\t$yScroll = $(wo.stickyHeaders_yScroll || wo.stickyHeaders_attachTo || window),\n\t\t\t\t$xScroll = $(wo.stickyHeaders_xScroll || wo.stickyHeaders_attachTo || window),\n\t\t\t\t$thead = $table.children('thead:first'),\n\t\t\t\t$header = $thead.children('tr').not('.sticky-false').children(),\n\t\t\t\t$tfoot = $table.children('tfoot'),\n\t\t\t\tstickyOffset = getStickyOffset(c, wo),\n\t\t\t\t// is this table nested? If so, find parent sticky header wrapper (div, not table)\n\t\t\t\t$nestedSticky = $table.parent().closest('.' + ts.css.table).hasClass('hasStickyHeaders') ?\n\t\t\t\t\t$table.parent().closest('table.tablesorter')[0].config.widgetOptions.$sticky.parent() : [],\n\t\t\t\tnestedStickyTop = $nestedSticky.length ? $nestedSticky.height() : 0,\n\t\t\t\t// clone table, then wrap to make sticky header\n\t\t\t\t$stickyTable = wo.$sticky = $table.clone()\n\t\t\t\t\t.addClass('containsStickyHeaders ' + ts.css.sticky + ' ' + wo.stickyHeaders + ' ' + c.namespace.slice(1) + '_extra_table' )\n\t\t\t\t\t.wrap('<div class=\"' + ts.css.stickyWrap + '\">'),\n\t\t\t\t$stickyWrap = $stickyTable.parent()\n\t\t\t\t\t.addClass(ts.css.stickyHide)\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition   : $attach.length ? 'absolute' : 'fixed',\n\t\t\t\t\t\tpadding    : parseInt( $stickyTable.parent().parent().css('padding-left'), 10 ),\n\t\t\t\t\t\ttop        : stickyOffset + nestedStickyTop,\n\t\t\t\t\t\tleft       : 0,\n\t\t\t\t\t\tvisibility : 'hidden',\n\t\t\t\t\t\tzIndex     : wo.stickyHeaders_zIndex || 2\n\t\t\t\t\t}),\n\t\t\t\t$stickyThead = $stickyTable.children('thead:first'),\n\t\t\t\t$stickyCells,\n\t\t\t\tlaststate = '',\n\t\t\t\tsetWidth = function($orig, $clone) {\n\t\t\t\t\tvar index, width, border, $cell, $this,\n\t\t\t\t\t\t$cells = $orig.filter(':visible'),\n\t\t\t\t\t\tlen = $cells.length;\n\t\t\t\t\tfor ( index = 0; index < len; index++ ) {\n\t\t\t\t\t\t$cell = $clone.filter(':visible').eq(index);\n\t\t\t\t\t\t$this = $cells.eq(index);\n\t\t\t\t\t\t// code from https://github.com/jmosbech/StickyTableHeaders\n\t\t\t\t\t\tif ($this.css('box-sizing') === 'border-box') {\n\t\t\t\t\t\t\twidth = $this.outerWidth();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif ($cell.css('border-collapse') === 'collapse') {\n\t\t\t\t\t\t\t\tif (window.getComputedStyle) {\n\t\t\t\t\t\t\t\t\twidth = parseFloat( window.getComputedStyle($this[0], null).width );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// ie8 only\n\t\t\t\t\t\t\t\t\tborder = parseFloat( $this.css('border-width') );\n\t\t\t\t\t\t\t\t\twidth = $this.outerWidth() - parseFloat( $this.css('padding-left') ) - parseFloat( $this.css('padding-right') ) - border;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twidth = $this.width();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$cell.css({\n\t\t\t\t\t\t\t'width': width,\n\t\t\t\t\t\t\t'min-width': width,\n\t\t\t\t\t\t\t'max-width': width\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tgetLeftPosition = function(yWindow) {\n\t\t\t\t\tif (yWindow === false && $nestedSticky.length) {\n\t\t\t\t\t\treturn $table.position().left;\n\t\t\t\t\t}\n\t\t\t\t\treturn $attach.length ?\n\t\t\t\t\t\tparseInt($attach.css('padding-left'), 10) || 0 :\n\t\t\t\t\t\t$table.offset().left - parseInt($table.css('margin-left'), 10) - $(window).scrollLeft();\n\t\t\t\t},\n\t\t\t\tresizeHeader = function() {\n\t\t\t\t\t$stickyWrap.css({\n\t\t\t\t\t\tleft : getLeftPosition(),\n\t\t\t\t\t\twidth: $table.outerWidth()\n\t\t\t\t\t});\n\t\t\t\t\tsetWidth( $table, $stickyTable );\n\t\t\t\t\tsetWidth( $header, $stickyCells );\n\t\t\t\t},\n\t\t\t\tscrollSticky = function( resizing ) {\n\t\t\t\t\tif (!$table.is(':visible')) { return; } // fixes #278\n\t\t\t\t\t// Detect nested tables - fixes #724\n\t\t\t\t\tnestedStickyTop = $nestedSticky.length ? $nestedSticky.offset().top - $yScroll.scrollTop() + $nestedSticky.height() : 0;\n\t\t\t\t\tvar tmp,\n\t\t\t\t\t\toffset = $table.offset(),\n\t\t\t\t\t\tstickyOffset = getStickyOffset(c, wo),\n\t\t\t\t\t\tyWindow = $.isWindow( $yScroll[0] ), // $.isWindow needs jQuery 1.4.3\n\t\t\t\t\t\tyScroll = yWindow ?\n\t\t\t\t\t\t\t$yScroll.scrollTop() :\n\t\t\t\t\t\t\t// use parent sticky position if nested AND inside of a scrollable element - see #1512\n\t\t\t\t\t\t\t$nestedSticky.length ? parseInt($nestedSticky[0].style.top, 10) : $yScroll.offset().top,\n\t\t\t\t\t\tattachTop = $attach.length ? yScroll : $yScroll.scrollTop(),\n\t\t\t\t\t\tcaptionHeight = wo.stickyHeaders_includeCaption ? 0 : $table.children( 'caption' ).height() || 0,\n\t\t\t\t\t\tscrollTop = attachTop + stickyOffset + nestedStickyTop - captionHeight,\n\t\t\t\t\t\ttableHeight = $table.height() - ($stickyWrap.height() + ($tfoot.height() || 0)) - captionHeight,\n\t\t\t\t\t\tisVisible = ( scrollTop > offset.top ) && ( scrollTop < offset.top + tableHeight ) ? 'visible' : 'hidden',\n\t\t\t\t\t\tstate = isVisible === 'visible' ? ts.css.stickyVis : ts.css.stickyHide,\n\t\t\t\t\t\tneedsUpdating = !$stickyWrap.hasClass( state ),\n\t\t\t\t\t\tcssSettings = { visibility : isVisible };\n\t\t\t\t\tif ($attach.length) {\n\t\t\t\t\t\t// attached sticky headers always need updating\n\t\t\t\t\t\tneedsUpdating = true;\n\t\t\t\t\t\tcssSettings.top = yWindow ? scrollTop - $attach.offset().top : $attach.scrollTop();\n\t\t\t\t\t}\n\t\t\t\t\t// adjust when scrolling horizontally - fixes issue #143\n\t\t\t\t\ttmp = getLeftPosition(yWindow);\n\t\t\t\t\tif (tmp !== parseInt($stickyWrap.css('left'), 10)) {\n\t\t\t\t\t\tneedsUpdating = true;\n\t\t\t\t\t\tcssSettings.left = tmp;\n\t\t\t\t\t}\n\t\t\t\t\tcssSettings.top = ( cssSettings.top || 0 ) +\n\t\t\t\t\t\t// If nested AND inside of a scrollable element, only add parent sticky height\n\t\t\t\t\t\t(!yWindow && $nestedSticky.length ? $nestedSticky.height() : stickyOffset + nestedStickyTop);\n\t\t\t\t\tif (needsUpdating) {\n\t\t\t\t\t\t$stickyWrap\n\t\t\t\t\t\t\t.removeClass( ts.css.stickyVis + ' ' + ts.css.stickyHide )\n\t\t\t\t\t\t\t.addClass( state )\n\t\t\t\t\t\t\t.css(cssSettings);\n\t\t\t\t\t}\n\t\t\t\t\tif (isVisible !== laststate || resizing) {\n\t\t\t\t\t\t// make sure the column widths match\n\t\t\t\t\t\tresizeHeader();\n\t\t\t\t\t\tlaststate = isVisible;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t// only add a position relative if a position isn't already defined\n\t\t\tif ($attach.length && !$attach.css('position')) {\n\t\t\t\t$attach.css('position', 'relative');\n\t\t\t}\n\t\t\t// fix clone ID, if it exists - fixes #271\n\t\t\tif ($stickyTable.attr('id')) { $stickyTable[0].id += wo.stickyHeaders_cloneId; }\n\t\t\t// clear out cloned table, except for sticky header\n\t\t\t// include caption & filter row (fixes #126 & #249) - don't remove cells to get correct cell indexing\n\t\t\t$stickyTable.find('> thead:gt(0), tr.sticky-false').hide();\n\t\t\t$stickyTable.find('> tbody, > tfoot').remove();\n\t\t\t$stickyTable.find('caption').toggle(wo.stickyHeaders_includeCaption);\n\t\t\t// issue #172 - find td/th in sticky header\n\t\t\t$stickyCells = $stickyThead.children().children();\n\t\t\t$stickyTable.css({ height:0, width:0, margin: 0 });\n\t\t\t// remove resizable block\n\t\t\t$stickyCells.find('.' + ts.css.resizer).remove();\n\t\t\t// update sticky header class names to match real header after sorting\n\t\t\t$table\n\t\t\t\t.addClass('hasStickyHeaders')\n\t\t\t\t.bind('pagerComplete' + namespace, function() {\n\t\t\t\t\tresizeHeader();\n\t\t\t\t});\n\n\t\t\tts.bindEvents(table, $stickyThead.children().children('.' + ts.css.header));\n\n\t\t\tif (wo.stickyHeaders_appendTo) {\n\t\t\t\t$(wo.stickyHeaders_appendTo).append( $stickyWrap );\n\t\t\t} else {\n\t\t\t\t// add stickyheaders AFTER the table. If the table is selected by ID, the original one (first) will be returned.\n\t\t\t\t$table.after( $stickyWrap );\n\t\t\t}\n\n\t\t\t// onRenderHeader is defined, we need to do something about it (fixes #641)\n\t\t\tif (c.onRenderHeader) {\n\t\t\t\t$t = $stickyThead.children('tr').children();\n\t\t\t\tlen = $t.length;\n\t\t\t\tfor ( index = 0; index < len; index++ ) {\n\t\t\t\t\t// send second parameter\n\t\t\t\t\tc.onRenderHeader.apply( $t.eq( index ), [ index, c, $stickyTable ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// make it sticky!\n\t\t\t$xScroll.add($yScroll)\n\t\t\t\t.unbind( ('scroll resize '.split(' ').join( namespace )).replace(/\\s+/g, ' ') )\n\t\t\t\t.bind('scroll resize '.split(' ').join( namespace ), function( event ) {\n\t\t\t\t\tscrollSticky( event.type === 'resize' );\n\t\t\t\t});\n\t\t\tc.$table\n\t\t\t\t.unbind('stickyHeadersUpdate' + namespace)\n\t\t\t\t.bind('stickyHeadersUpdate' + namespace, function() {\n\t\t\t\t\tscrollSticky( true );\n\t\t\t\t});\n\n\t\t\tif (wo.stickyHeaders_addResizeEvent) {\n\t\t\t\tts.addHeaderResizeEvent(table);\n\t\t\t}\n\n\t\t\t// look for filter widget\n\t\t\tif ($table.hasClass('hasFilters') && wo.filter_columnFilters) {\n\t\t\t\t// scroll table into view after filtering, if sticky header is active - #482\n\t\t\t\t$table.bind('filterEnd' + namespace, function() {\n\t\t\t\t\t// $(':focus') needs jQuery 1.6+\n\t\t\t\t\tvar $td = $(document.activeElement).closest('td'),\n\t\t\t\t\t\tcolumn = $td.parent().children().index($td);\n\t\t\t\t\t// only scroll if sticky header is active\n\t\t\t\t\tif ($stickyWrap.hasClass(ts.css.stickyVis) && wo.stickyHeaders_filteredToTop) {\n\t\t\t\t\t\t// scroll to original table (not sticky clone)\n\t\t\t\t\t\twindow.scrollTo(0, $table.position().top);\n\t\t\t\t\t\t// give same input/select focus; check if c.$filters exists; fixes #594\n\t\t\t\t\t\tif (column >= 0 && c.$filters) {\n\t\t\t\t\t\t\tc.$filters.eq(column).find('a, select, input').filter(':visible').focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tts.filter.bindSearch( $table, $stickyCells.find('.' + ts.css.filter) );\n\t\t\t\t// support hideFilters\n\t\t\t\tif (wo.filter_hideFilters) {\n\t\t\t\t\tts.filter.hideFilters(c, $stickyTable);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// resize table (Firefox)\n\t\t\tif (wo.stickyHeaders_addResizeEvent) {\n\t\t\t\t$table.bind('resize' + c.namespace + 'stickyheaders', function() {\n\t\t\t\t\tresizeHeader();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// make sure sticky is visible if page is partially scrolled\n\t\t\tscrollSticky( true );\n\t\t\t$table.triggerHandler('stickyHeadersInit');\n\n\t\t},\n\t\tremove: function(table, c, wo) {\n\t\t\tvar namespace = c.namespace + 'stickyheaders ';\n\t\t\tc.$table\n\t\t\t\t.removeClass('hasStickyHeaders')\n\t\t\t\t.unbind( ('pagerComplete resize filterEnd stickyHeadersUpdate '.split(' ').join(namespace)).replace(/\\s+/g, ' ') )\n\t\t\t\t.next('.' + ts.css.stickyWrap).remove();\n\t\t\tif (wo.$sticky && wo.$sticky.length) { wo.$sticky.remove(); } // remove cloned table\n\t\t\t$(window)\n\t\t\t\t.add(wo.stickyHeaders_xScroll)\n\t\t\t\t.add(wo.stickyHeaders_yScroll)\n\t\t\t\t.add(wo.stickyHeaders_attachTo)\n\t\t\t\t.unbind( ('scroll resize '.split(' ').join(namespace)).replace(/\\s+/g, ' ') );\n\t\t\tts.addHeaderResizeEvent(table, true);\n\t\t}\n\t});\n\n})(jQuery, window);\n\n/*! Widget: resizable - updated 2018-03-26 (v2.30.2) */\n/*jshint browser:true, jquery:true, unused:false */\n;(function ($, window) {\n\t'use strict';\n\tvar ts = $.tablesorter || {};\n\n\t$.extend(ts.css, {\n\t\tresizableContainer : 'tablesorter-resizable-container',\n\t\tresizableHandle    : 'tablesorter-resizable-handle',\n\t\tresizableNoSelect  : 'tablesorter-disableSelection',\n\t\tresizableStorage   : 'tablesorter-resizable'\n\t});\n\n\t// Add extra scroller css\n\t$(function() {\n\t\tvar s = '<style>' +\n\t\t\t'body.' + ts.css.resizableNoSelect + ' { -ms-user-select: none; -moz-user-select: -moz-none;' +\n\t\t\t\t'-khtml-user-select: none; -webkit-user-select: none; user-select: none; }' +\n\t\t\t'.' + ts.css.resizableContainer + ' { position: relative; height: 1px; }' +\n\t\t\t// make handle z-index > than stickyHeader z-index, so the handle stays above sticky header\n\t\t\t'.' + ts.css.resizableHandle + ' { position: absolute; display: inline-block; width: 8px;' +\n\t\t\t\t'top: 1px; cursor: ew-resize; z-index: 3; user-select: none; -moz-user-select: none; }' +\n\t\t\t'</style>';\n\t\t$('head').append(s);\n\t});\n\n\tts.resizable = {\n\t\tinit : function( c, wo ) {\n\t\t\tif ( c.$table.hasClass( 'hasResizable' ) ) { return; }\n\t\t\tc.$table.addClass( 'hasResizable' );\n\n\t\t\tvar noResize, $header, column, storedSizes, tmp,\n\t\t\t\t$table = c.$table,\n\t\t\t\t$parent = $table.parent(),\n\t\t\t\tmarginTop = parseInt( $table.css( 'margin-top' ), 10 ),\n\n\t\t\t// internal variables\n\t\t\tvars = wo.resizable_vars = {\n\t\t\t\tuseStorage : ts.storage && wo.resizable !== false,\n\t\t\t\t$wrap : $parent,\n\t\t\t\tmouseXPosition : 0,\n\t\t\t\t$target : null,\n\t\t\t\t$next : null,\n\t\t\t\toverflow : $parent.css('overflow') === 'auto' ||\n\t\t\t\t\t$parent.css('overflow') === 'scroll' ||\n\t\t\t\t\t$parent.css('overflow-x') === 'auto' ||\n\t\t\t\t\t$parent.css('overflow-x') === 'scroll',\n\t\t\t\tstoredSizes : []\n\t\t\t};\n\n\t\t\t// set default widths\n\t\t\tts.resizableReset( c.table, true );\n\n\t\t\t// now get measurements!\n\t\t\tvars.tableWidth = $table.width();\n\t\t\t// attempt to autodetect\n\t\t\tvars.fullWidth = Math.abs( $parent.width() - vars.tableWidth ) < 20;\n\n\t\t\t/*\n\t\t\t// Hacky method to determine if table width is set to 'auto'\n\t\t\t// http://stackoverflow.com/a/20892048/145346\n\t\t\tif ( !vars.fullWidth ) {\n\t\t\t\ttmp = $table.width();\n\t\t\t\t$header = $table.wrap('<span>').parent(); // temp variable\n\t\t\t\tstoredSizes = parseInt( $table.css( 'margin-left' ), 10 ) || 0;\n\t\t\t\t$table.css( 'margin-left', storedSizes + 50 );\n\t\t\t\tvars.tableWidth = $header.width() > tmp ? 'auto' : tmp;\n\t\t\t\t$table.css( 'margin-left', storedSizes ? storedSizes : '' );\n\t\t\t\t$header = null;\n\t\t\t\t$table.unwrap('<span>');\n\t\t\t}\n\t\t\t*/\n\n\t\t\tif ( vars.useStorage && vars.overflow ) {\n\t\t\t\t// save table width\n\t\t\t\tts.storage( c.table, 'tablesorter-table-original-css-width', vars.tableWidth );\n\t\t\t\ttmp = ts.storage( c.table, 'tablesorter-table-resized-width' ) || 'auto';\n\t\t\t\tts.resizable.setWidth( $table, tmp, true );\n\t\t\t}\n\t\t\two.resizable_vars.storedSizes = storedSizes = ( vars.useStorage ?\n\t\t\t\tts.storage( c.table, ts.css.resizableStorage ) :\n\t\t\t\t[] ) || [];\n\t\t\tts.resizable.setWidths( c, wo, storedSizes );\n\t\t\tts.resizable.updateStoredSizes( c, wo );\n\n\t\t\two.$resizable_container = $( '<div class=\"' + ts.css.resizableContainer + '\">' )\n\t\t\t\t.css({ top : marginTop })\n\t\t\t\t.insertBefore( $table );\n\t\t\t// add container\n\t\t\tfor ( column = 0; column < c.columns; column++ ) {\n\t\t\t\t$header = c.$headerIndexed[ column ];\n\t\t\t\ttmp = ts.getColumnData( c.table, c.headers, column );\n\t\t\t\tnoResize = ts.getData( $header, tmp, 'resizable' ) === 'false';\n\t\t\t\tif ( !noResize ) {\n\t\t\t\t\t$( '<div class=\"' + ts.css.resizableHandle + '\">' )\n\t\t\t\t\t\t.appendTo( wo.$resizable_container )\n\t\t\t\t\t\t.attr({\n\t\t\t\t\t\t\t'data-column' : column,\n\t\t\t\t\t\t\t'unselectable' : 'on'\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.data( 'header', $header )\n\t\t\t\t\t\t.bind( 'selectstart', false );\n\t\t\t\t}\n\t\t\t}\n\t\t\tts.resizable.bindings( c, wo );\n\t\t},\n\n\t\tupdateStoredSizes : function( c, wo ) {\n\t\t\tvar column, $header,\n\t\t\t\tlen = c.columns,\n\t\t\t\tvars = wo.resizable_vars;\n\t\t\tvars.storedSizes = [];\n\t\t\tfor ( column = 0; column < len; column++ ) {\n\t\t\t\t$header = c.$headerIndexed[ column ];\n\t\t\t\tvars.storedSizes[ column ] = $header.is(':visible') ? $header.width() : 0;\n\t\t\t}\n\t\t},\n\n\t\tsetWidth : function( $el, width, overflow ) {\n\t\t\t// overflow tables need min & max width set as well\n\t\t\t$el.css({\n\t\t\t\t'width' : width,\n\t\t\t\t'min-width' : overflow ? width : '',\n\t\t\t\t'max-width' : overflow ? width : ''\n\t\t\t});\n\t\t},\n\n\t\tsetWidths : function( c, wo, storedSizes ) {\n\t\t\tvar column, $temp,\n\t\t\t\tvars = wo.resizable_vars,\n\t\t\t\t$extra = $( c.namespace + '_extra_headers' ),\n\t\t\t\t$col = c.$table.children( 'colgroup' ).children( 'col' );\n\t\t\tstoredSizes = storedSizes || vars.storedSizes || [];\n\t\t\t// process only if table ID or url match\n\t\t\tif ( storedSizes.length ) {\n\t\t\t\tfor ( column = 0; column < c.columns; column++ ) {\n\t\t\t\t\t// set saved resizable widths\n\t\t\t\t\tts.resizable.setWidth( c.$headerIndexed[ column ], storedSizes[ column ], vars.overflow );\n\t\t\t\t\tif ( $extra.length ) {\n\t\t\t\t\t\t// stickyHeaders needs to modify min & max width as well\n\t\t\t\t\t\t$temp = $extra.eq( column ).add( $col.eq( column ) );\n\t\t\t\t\t\tts.resizable.setWidth( $temp, storedSizes[ column ], vars.overflow );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$temp = $( c.namespace + '_extra_table' );\n\t\t\t\tif ( $temp.length && !ts.hasWidget( c.table, 'scroller' ) ) {\n\t\t\t\t\tts.resizable.setWidth( $temp, c.$table.outerWidth(), vars.overflow );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tsetHandlePosition : function( c, wo ) {\n\t\t\tvar startPosition,\n\t\t\t\ttableHeight = c.$table.height(),\n\t\t\t\t$handles = wo.$resizable_container.children(),\n\t\t\t\thandleCenter = Math.floor( $handles.width() / 2 );\n\n\t\t\tif ( ts.hasWidget( c.table, 'scroller' ) ) {\n\t\t\t\ttableHeight = 0;\n\t\t\t\tc.$table.closest( '.' + ts.css.scrollerWrap ).children().each(function() {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\t// center table has a max-height set\n\t\t\t\t\ttableHeight += $this.filter('[style*=\"height\"]').length ? $this.height() : $this.children('table').height();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif ( !wo.resizable_includeFooter && c.$table.children('tfoot').length ) {\n\t\t\t\ttableHeight -= c.$table.children('tfoot').height();\n\t\t\t}\n\t\t\t// subtract out table left position from resizable handles. Fixes #864\n\t\t\t// jQuery v3.3.0+ appears to include the start position with the $header.position().left; see #1544\n\t\t\tstartPosition = parseFloat($.fn.jquery) >= 3.3 ? 0 : c.$table.position().left;\n\t\t\t$handles.each( function() {\n\t\t\t\tvar $this = $(this),\n\t\t\t\t\tcolumn = parseInt( $this.attr( 'data-column' ), 10 ),\n\t\t\t\t\tcolumns = c.columns - 1,\n\t\t\t\t\t$header = $this.data( 'header' );\n\t\t\t\tif ( !$header ) { return; } // see #859\n\t\t\t\tif (\n\t\t\t\t\t!$header.is(':visible') ||\n\t\t\t\t\t( !wo.resizable_addLastColumn && ts.resizable.checkVisibleColumns(c, column) )\n\t\t\t\t) {\n\t\t\t\t\t$this.hide();\n\t\t\t\t} else if ( column < columns || column === columns && wo.resizable_addLastColumn ) {\n\t\t\t\t\t$this.css({\n\t\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\t\theight : tableHeight,\n\t\t\t\t\t\tleft : $header.position().left - startPosition + $header.outerWidth() - handleCenter\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t// Fixes #1485\n\t\tcheckVisibleColumns: function( c, column ) {\n\t\t\tvar i,\n\t\t\t\tlen = 0;\n\t\t\tfor ( i = column + 1; i < c.columns; i++ ) {\n\t\t\t\tlen += c.$headerIndexed[i].is( ':visible' ) ? 1 : 0;\n\t\t\t}\n\t\t\treturn len === 0;\n\t\t},\n\n\t\t// prevent text selection while dragging resize bar\n\t\ttoggleTextSelection : function( c, wo, toggle ) {\n\t\t\tvar namespace = c.namespace + 'tsresize';\n\t\t\two.resizable_vars.disabled = toggle;\n\t\t\t$( 'body' ).toggleClass( ts.css.resizableNoSelect, toggle );\n\t\t\tif ( toggle ) {\n\t\t\t\t$( 'body' )\n\t\t\t\t\t.attr( 'unselectable', 'on' )\n\t\t\t\t\t.bind( 'selectstart' + namespace, false );\n\t\t\t} else {\n\t\t\t\t$( 'body' )\n\t\t\t\t\t.removeAttr( 'unselectable' )\n\t\t\t\t\t.unbind( 'selectstart' + namespace );\n\t\t\t}\n\t\t},\n\n\t\tbindings : function( c, wo ) {\n\t\t\tvar namespace = c.namespace + 'tsresize';\n\t\t\two.$resizable_container.children().bind( 'mousedown', function( event ) {\n\t\t\t\t// save header cell and mouse position\n\t\t\t\tvar column,\n\t\t\t\t\tvars = wo.resizable_vars,\n\t\t\t\t\t$extras = $( c.namespace + '_extra_headers' ),\n\t\t\t\t\t$header = $( event.target ).data( 'header' );\n\n\t\t\t\tcolumn = parseInt( $header.attr( 'data-column' ), 10 );\n\t\t\t\tvars.$target = $header = $header.add( $extras.filter('[data-column=\"' + column + '\"]') );\n\t\t\t\tvars.target = column;\n\n\t\t\t\t// if table is not as wide as it's parent, then resize the table\n\t\t\t\tvars.$next = event.shiftKey || wo.resizable_targetLast ?\n\t\t\t\t\t$header.parent().children().not( '.resizable-false' ).filter( ':last' ) :\n\t\t\t\t\t$header.nextAll( ':not(.resizable-false)' ).eq( 0 );\n\n\t\t\t\tcolumn = parseInt( vars.$next.attr( 'data-column' ), 10 );\n\t\t\t\tvars.$next = vars.$next.add( $extras.filter('[data-column=\"' + column + '\"]') );\n\t\t\t\tvars.next = column;\n\n\t\t\t\tvars.mouseXPosition = event.pageX;\n\t\t\t\tts.resizable.updateStoredSizes( c, wo );\n\t\t\t\tts.resizable.toggleTextSelection(c, wo, true );\n\t\t\t});\n\n\t\t\t$( document )\n\t\t\t\t.bind( 'mousemove' + namespace, function( event ) {\n\t\t\t\t\tvar vars = wo.resizable_vars;\n\t\t\t\t\t// ignore mousemove if no mousedown\n\t\t\t\t\tif ( !vars.disabled || vars.mouseXPosition === 0 || !vars.$target ) { return; }\n\t\t\t\t\tif ( wo.resizable_throttle ) {\n\t\t\t\t\t\tclearTimeout( vars.timer );\n\t\t\t\t\t\tvars.timer = setTimeout( function() {\n\t\t\t\t\t\t\tts.resizable.mouseMove( c, wo, event );\n\t\t\t\t\t\t}, isNaN( wo.resizable_throttle ) ? 5 : wo.resizable_throttle );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tts.resizable.mouseMove( c, wo, event );\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.bind( 'mouseup' + namespace, function() {\n\t\t\t\t\tif (!wo.resizable_vars.disabled) { return; }\n\t\t\t\t\tts.resizable.toggleTextSelection( c, wo, false );\n\t\t\t\t\tts.resizable.stopResize( c, wo );\n\t\t\t\t\tts.resizable.setHandlePosition( c, wo );\n\t\t\t\t});\n\n\t\t\t// resizeEnd event triggered by scroller widget\n\t\t\t$( window ).bind( 'resize' + namespace + ' resizeEnd' + namespace, function() {\n\t\t\t\tts.resizable.setHandlePosition( c, wo );\n\t\t\t});\n\n\t\t\t// right click to reset columns to default widths\n\t\t\tc.$table\n\t\t\t\t.bind( 'columnUpdate pagerComplete resizableUpdate '.split( ' ' ).join( namespace + ' ' ), function() {\n\t\t\t\t\tts.resizable.setHandlePosition( c, wo );\n\t\t\t\t})\n\t\t\t\t.bind( 'resizableReset' + namespace, function() {\n\t\t\t\t\tts.resizableReset( c.table );\n\t\t\t\t})\n\t\t\t\t.find( 'thead:first' )\n\t\t\t\t.add( $( c.namespace + '_extra_table' ).find( 'thead:first' ) )\n\t\t\t\t.bind( 'contextmenu' + namespace, function() {\n\t\t\t\t\t// $.isEmptyObject() needs jQuery 1.4+; allow right click if already reset\n\t\t\t\t\tvar allowClick = wo.resizable_vars.storedSizes.length === 0;\n\t\t\t\t\tts.resizableReset( c.table );\n\t\t\t\t\tts.resizable.setHandlePosition( c, wo );\n\t\t\t\t\two.resizable_vars.storedSizes = [];\n\t\t\t\t\treturn allowClick;\n\t\t\t\t});\n\n\t\t},\n\n\t\tmouseMove : function( c, wo, event ) {\n\t\t\tif ( wo.resizable_vars.mouseXPosition === 0 || !wo.resizable_vars.$target ) { return; }\n\t\t\t// resize columns\n\t\t\tvar column,\n\t\t\t\ttotal = 0,\n\t\t\t\tvars = wo.resizable_vars,\n\t\t\t\t$next = vars.$next,\n\t\t\t\ttar = vars.storedSizes[ vars.target ],\n\t\t\t\tleftEdge = event.pageX - vars.mouseXPosition;\n\t\t\tif ( vars.overflow ) {\n\t\t\t\tif ( tar + leftEdge > 0 ) {\n\t\t\t\t\tvars.storedSizes[ vars.target ] += leftEdge;\n\t\t\t\t\tts.resizable.setWidth( vars.$target, vars.storedSizes[ vars.target ], true );\n\t\t\t\t\t// update the entire table width\n\t\t\t\t\tfor ( column = 0; column < c.columns; column++ ) {\n\t\t\t\t\t\ttotal += vars.storedSizes[ column ];\n\t\t\t\t\t}\n\t\t\t\t\tts.resizable.setWidth( c.$table.add( $( c.namespace + '_extra_table' ) ), total );\n\t\t\t\t}\n\t\t\t\tif ( !$next.length ) {\n\t\t\t\t\t// if expanding right-most column, scroll the wrapper\n\t\t\t\t\tvars.$wrap[0].scrollLeft = c.$table.width();\n\t\t\t\t}\n\t\t\t} else if ( vars.fullWidth ) {\n\t\t\t\tvars.storedSizes[ vars.target ] += leftEdge;\n\t\t\t\tvars.storedSizes[ vars.next ] -= leftEdge;\n\t\t\t\tts.resizable.setWidths( c, wo );\n\t\t\t} else {\n\t\t\t\tvars.storedSizes[ vars.target ] += leftEdge;\n\t\t\t\tts.resizable.setWidths( c, wo );\n\t\t\t}\n\t\t\tvars.mouseXPosition = event.pageX;\n\t\t\t// dynamically update sticky header widths\n\t\t\tc.$table.triggerHandler('stickyHeadersUpdate');\n\t\t},\n\n\t\tstopResize : function( c, wo ) {\n\t\t\tvar vars = wo.resizable_vars;\n\t\t\tts.resizable.updateStoredSizes( c, wo );\n\t\t\tif ( vars.useStorage ) {\n\t\t\t\t// save all column widths\n\t\t\t\tts.storage( c.table, ts.css.resizableStorage, vars.storedSizes );\n\t\t\t\tts.storage( c.table, 'tablesorter-table-resized-width', c.$table.width() );\n\t\t\t}\n\t\t\tvars.mouseXPosition = 0;\n\t\t\tvars.$target = vars.$next = null;\n\t\t\t// will update stickyHeaders, just in case, see #912\n\t\t\tc.$table.triggerHandler('stickyHeadersUpdate');\n\t\t\tc.$table.triggerHandler('resizableComplete');\n\t\t}\n\t};\n\n\t// this widget saves the column widths if\n\t// $.tablesorter.storage function is included\n\t// **************************\n\tts.addWidget({\n\t\tid: 'resizable',\n\t\tpriority: 40,\n\t\toptions: {\n\t\t\tresizable : true, // save column widths to storage\n\t\t\tresizable_addLastColumn : false,\n\t\t\tresizable_includeFooter: true,\n\t\t\tresizable_widths : [],\n\t\t\tresizable_throttle : false, // set to true (5ms) or any number 0-10 range\n\t\t\tresizable_targetLast : false\n\t\t},\n\t\tinit: function(table, thisWidget, c, wo) {\n\t\t\tts.resizable.init( c, wo );\n\t\t},\n\t\tformat: function( table, c, wo ) {\n\t\t\tts.resizable.setHandlePosition( c, wo );\n\t\t},\n\t\tremove: function( table, c, wo, refreshing ) {\n\t\t\tif (wo.$resizable_container) {\n\t\t\t\tvar namespace = c.namespace + 'tsresize';\n\t\t\t\tc.$table.add( $( c.namespace + '_extra_table' ) )\n\t\t\t\t\t.removeClass('hasResizable')\n\t\t\t\t\t.children( 'thead' )\n\t\t\t\t\t.unbind( 'contextmenu' + namespace );\n\n\t\t\t\two.$resizable_container.remove();\n\t\t\t\tts.resizable.toggleTextSelection( c, wo, false );\n\t\t\t\tts.resizableReset( table, refreshing );\n\t\t\t\t$( document ).unbind( 'mousemove' + namespace + ' mouseup' + namespace );\n\t\t\t}\n\t\t}\n\t});\n\n\tts.resizableReset = function( table, refreshing ) {\n\t\t$( table ).each(function() {\n\t\t\tvar index, $t,\n\t\t\t\tc = this.config,\n\t\t\t\two = c && c.widgetOptions,\n\t\t\t\tvars = wo.resizable_vars;\n\t\t\tif ( table && c && c.$headerIndexed.length ) {\n\t\t\t\t// restore the initial table width\n\t\t\t\tif ( vars.overflow && vars.tableWidth ) {\n\t\t\t\t\tts.resizable.setWidth( c.$table, vars.tableWidth, true );\n\t\t\t\t\tif ( vars.useStorage ) {\n\t\t\t\t\t\tts.storage( table, 'tablesorter-table-resized-width', vars.tableWidth );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor ( index = 0; index < c.columns; index++ ) {\n\t\t\t\t\t$t = c.$headerIndexed[ index ];\n\t\t\t\t\tif ( wo.resizable_widths && wo.resizable_widths[ index ] ) {\n\t\t\t\t\t\tts.resizable.setWidth( $t, wo.resizable_widths[ index ], vars.overflow );\n\t\t\t\t\t} else if ( !$t.hasClass( 'resizable-false' ) ) {\n\t\t\t\t\t\t// don't clear the width of any column that is not resizable\n\t\t\t\t\t\tts.resizable.setWidth( $t, '', vars.overflow );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// reset stickyHeader widths\n\t\t\t\tc.$table.triggerHandler( 'stickyHeadersUpdate' );\n\t\t\t\tif ( ts.storage && !refreshing ) {\n\t\t\t\t\tts.storage( this, ts.css.resizableStorage, [] );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n})( jQuery, window );\n\n/*! Widget: saveSort - updated 2018-03-19 (v2.30.1) *//*\n* Requires tablesorter v2.16+\n* by Rob Garrison\n*/\n;(function ($) {\n\t'use strict';\n\tvar ts = $.tablesorter || {};\n\n\tfunction getStoredSortList(c) {\n\t\tvar stored = ts.storage( c.table, 'tablesorter-savesort' );\n\t\treturn (stored && stored.hasOwnProperty('sortList') && $.isArray(stored.sortList)) ? stored.sortList : [];\n\t}\n\n\tfunction sortListChanged(c, sortList) {\n\t\treturn (sortList || getStoredSortList(c)).join(',') !== c.sortList.join(',');\n\t}\n\n\t// this widget saves the last sort only if the\n\t// saveSort widget option is true AND the\n\t// $.tablesorter.storage function is included\n\t// **************************\n\tts.addWidget({\n\t\tid: 'saveSort',\n\t\tpriority: 20,\n\t\toptions: {\n\t\t\tsaveSort : true\n\t\t},\n\t\tinit: function(table, thisWidget, c, wo) {\n\t\t\t// run widget format before all other widgets are applied to the table\n\t\t\tthisWidget.format(table, c, wo, true);\n\t\t},\n\t\tformat: function(table, c, wo, init) {\n\t\t\tvar time,\n\t\t\t\t$table = c.$table,\n\t\t\t\tsaveSort = wo.saveSort !== false, // make saveSort active/inactive; default to true\n\t\t\t\tsortList = { 'sortList' : c.sortList },\n\t\t\t\tdebug = ts.debug(c, 'saveSort');\n\t\t\tif (debug) {\n\t\t\t\ttime = new Date();\n\t\t\t}\n\t\t\tif ($table.hasClass('hasSaveSort')) {\n\t\t\t\tif (saveSort && table.hasInitialized && ts.storage && sortListChanged(c)) {\n\t\t\t\t\tts.storage( table, 'tablesorter-savesort', sortList );\n\t\t\t\t\tif (debug) {\n\t\t\t\t\t\tconsole.log('saveSort >> Saving last sort: ' + c.sortList + ts.benchmark(time));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// set table sort on initial run of the widget\n\t\t\t\t$table.addClass('hasSaveSort');\n\t\t\t\tsortList = '';\n\t\t\t\t// get data\n\t\t\t\tif (ts.storage) {\n\t\t\t\t\tsortList = getStoredSortList(c);\n\t\t\t\t\tif (debug) {\n\t\t\t\t\t\tconsole.log('saveSort >> Last sort loaded: \"' + sortList + '\"' + ts.benchmark(time));\n\t\t\t\t\t}\n\t\t\t\t\t$table.bind('saveSortReset', function(event) {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\tts.storage( table, 'tablesorter-savesort', '' );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// init is true when widget init is run, this will run this widget before all other widgets have initialized\n\t\t\t\t// this method allows using this widget in the original tablesorter plugin; but then it will run all widgets twice.\n\t\t\t\tif (init && sortList && sortList.length > 0) {\n\t\t\t\t\tc.sortList = sortList;\n\t\t\t\t} else if (table.hasInitialized && sortList && sortList.length > 0) {\n\t\t\t\t\t// update sort change\n\t\t\t\t\tif (sortListChanged(c, sortList)) {\n\t\t\t\t\t\tts.sortOn(c, sortList);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tremove: function(table, c) {\n\t\t\tc.$table.removeClass('hasSaveSort');\n\t\t\t// clear storage\n\t\t\tif (ts.storage) { ts.storage( table, 'tablesorter-savesort', '' ); }\n\t\t}\n\t});\n\n})(jQuery);\nreturn jQuery.tablesorter;}));\n"],"sourceRoot":""}