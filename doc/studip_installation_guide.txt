Stud.IP Installation Guide
Version 0.9.0

1 Installation

Stud.IP setzt auf LAMP (Linux - Apache - MySQL - PHP). Die folgende
Anleitung versteht sich selber als QuickstartGuide.

WICHTIGER HINWEIS: Dieser >>Quick Installation Guide<< setzt root Rechte
bezüglich des Webservers (inclusive PHP Interpreter) und der MySQL
Datenbank voraus.

VERY IMPORTANT NOTE: This is a quick installation guide to get you
started if you have an installation where you control the web server,
PHP interpreter and database server completely. They are not suitable
for a web hosting setup where you have only limited to no control
over the installation.

1.1 Datei entpacken

Die heruntergeladene Datei mit bunzip2 in ein temporäres Verzeichnis
entpacken. Dieses Verzeichnis kann nach erfolgreicher Installation
gelöscht oder als Referenz aufbewahrt werden.

Kurzübersicht der Verzeichnisse:
- studip-db             SQL-Dateien für mysql-Datenbankeinrichtung
- studip-doc            This quick installation guide ;-)
- install        Installations-Skript, getestet mit SuSe 8.0
- studip-config  Default-Konfigurationsdateien (local.inc, config.inc.php)
- studip-htdocs  Der Stud.IP-Kern, später sichtbar für Webserver
- studip-phplib  Angepasste phplib-Version für Stud.IP
- studip-update  Migrationsskripte für ältere Stud.IP-Versionen
                 (Für Versionsupgrade bitte README lesen!)
- studip-varlib  Rumpfstruktur für Datenverzeichnisse außerhalb
                 des Apache-Document-Root-Verzeichnisses.

1.1 Konfiguration von Apache und PHP

Für Stud.IP werden der Apache Webserver in der Version 1.3.9 oder höher
und die Apache Module für PHP4 benötigt. Die Funktionsfähigkeit von
php läßt sich mit einem einfachen <?php phpinfo() ?> Skript feststellen.
Benötigte PHP Module:
Stud.IP-core: mysql, gettext
export: xml, xslt (PHP > 4.1)
chat: sysvshm, sysvsem

1.2 phplib - studip-phplib

Stud.IP verwendet die phplib-7.2d mit leichten Modifikationen. Das Orginal
ist unter http://phplib.sourceforge.net/ zu finden.

Folgende Dateien wurden hinzugefügt:
  - email-validation.inc (check von Email-Adressen und anderen Angaben)
  - smtp.inc (versenden von Mails auf einem Linux-System)
  - ct_sql_patched.inc (kleiner bugfix der ct_sql.inc, nur für MySQL)

Folgende Dateien wurden verändert:
  - prepend.php (autoinclude der beiden obigen)

Die Datei local.inc ist auf unser System zugeschnitten und
muss bis auf die lokale Anpassung folgender Punkte so übernommen werden:
- Setzen von Datenbankrechner, -benutzer, -passwort und -name
  ($DB_STUDIP_HOST, $DB_STUDIP_USER, $DB_STUDIP_PASSWORD, $DB_STUDIP_DATABASE)
- Anpassung des Mailhostes, wenn Mails nicht über ein lokales Sendmail,
  sondern einen externen Rechner verschickt werden sollen. ($MAIL_HOST_NAME)
- Absoluter Pfad zu Stud.IP-Dateien, sichtbar für den Webserver
  ($ABSOLUTE_PATH_STUDIP)
- Absoluter Pfad zum Upload-Verzeichnis, muss nicht für den Webserver
  sichtbar sein ($UPLOAD_PATH)
- Absoluter Pfad zum Archiv-Verzeichnis, muss nicht für den Webserver
  sichtbar sein ($ARCHIV_PATH)
- Evtl. Setzen der Datenbankparameter und Aktivierung der ILIAS-Anbindung

Die angepasste Version der phplib befindet sich im Verzeichnis /studip-phplib
und sollte in das Apache-Root-Verzeichnis kopiert werden. Ist dies z.B.
/usr/local/httpd, dann sind die Dateien folglich nach /usr/local/httpd/php
zu kopieren. Bitte dieses Include-Verzeichnis nicht unterhalb des
Document-Root des Webservers einfügen!
Seit SuSE 8.1 befindet sich das Root-Verzeichnis des Webservers in /srv/www .
Für debian-Linux 3.0 ist z.B. das Verzeichnis /usr/lib/apache eine gute Wahl.

Die Anpassungen der php ini Werte sollte nach Möglichkeit über eine <Directory>
Anweisung in der Apache Konfigurationsdatei vorgenommen werden. Auf diese Weise
werden andere laufende PHP Applikationen nicht beeinflusst.
Im Installationsarchiv unter /studip-config befindet sich eine Datei namens
studip-httpd.conf, die alle notwendigen Einstellungen enthält. Mit einer 
aktuellen SuSE Distribution wäre die Vorgehensweise folgende:
- Kopieren von studip-httpd.conf nach zB. /etc/httpd/studip-httpd.conf
- Anpassen der Pfadangaben in studip-httpd.conf
- in /etc/sysconfig/apache 
  HTTPD_CONF_INCLUDE_FILES="/etc/httpd/studip-httpd.conf"
  setzen
- SuSEconfig aufrufen
- Webserver neustarten
In anderen Distributionen kann man den Inhalt von studip-httpd.conf einfach in 
die httpd.conf kopieren, oder eine include Anweisung verwenden, um 
studip-httpd.conf einzubinden.

Sollte die beschriebene Vorgehensweise nicht möglich sein, kann man auch die 
Datei php.ini direkt anpassen, die sich nach der Installation von php in 
/etc/httpd/ (bzw. bei SuSE ab 7.2 in /etc, bei debian in /etc/php4/apache) 
befinden sollte.
Dabei muss auto_prepend_file auf prepend.php zeigen:

; automatically add files before or after any PHP document

auto_prepend_file       =       /usr/local/httpd/php/prepend.php

Und der include_path muss das soeben kopierte php Verzeichnis enthalten.
In unserem Beispiel also:

; Paths and Directories ;

include_path            =       /usr/local/httpd/php

Außerdem wichtig:
register_globals = On

Damit das Registrierungsmodul von Stud.IP funktioniert, muss der Mailversand
konfiguriert sein, d.h. der Webserver muss in der Lage sein Mails über den in
$MAIL_HOST_NAME angegebenen Mailserver zu verschicken. In den verschickten Mails
ist Reply-To auf abuse@<SERVER_NAME> gesetzt, Mails an diese Adresse sollten an
einen der Administratoren weitergeleitet werden.


1.3 Anlegen der MySQL Datenbank >>studip<<

Stud.IP setzt eine installierte MySQL Datenbank in der Version 3.22.30
oder höher voraus (Eigentlich sollte es ab 3.17 funktionieren ;-).
Zur in Betriebnahme von Stud.IP muss eine Datenbank, der Einfachheit
halber nennen wir sie 'studip', angelegt werden.

mysql -e "create database studip"

und die entsprechenden Tabellen hinzugefügt werden

mysql studip < studip-db/studip_x.x.x.sql

(hiermit wird auch der Admin-Acount für studip angelegt: root@studip ;
password: testing)

Desweiteren muss ein Datenbankbenutzer für studip angelegt werden.
In der phplib Datei local.inc, die auf Stud.IP angepasst wurde, muss
dieser unter $DB_STUDIP_USER mit entsprechendem Passwort ($DB_STUDIP_PASSWORD)
eingetragen werden. Dieser Datenbankbenutzer benötigt die Rechte: SELECT, 
INSERT,UPDATE,DELETE,CREATE,DROP (letztere für temporäre Tabellen).

Die Datei studip-db/studip_x.x.x_demo_data.sql enthält Beispiel Daten (FAQ
- StudIP). Wer Lust hat, kann diese importieren und so bereits auf
Inhalte treffen ;-)

Nicht vergessen, die MySQL Datenbank neu zu starten (reload!).

Als einfach zu bedienende Tools haben sich bei uns kmysqladmin und
phpMyAdmin (http://www.phpwizard.net/projects/phpMyAdmin/) bewährt.

1.4 Konfiguration von Stud.IP

Die Dateien von Stud.IP befinden sich im Verzeichnis /studip-htdocs. Dieses
sollte ins Document-Root-Verzeichnis des Webservers kopiert werden.
In unserem Beispiel also nach /usr/local/httpd/htdocs/studip.
Wer einen anderen Verzeichnisnamen benutzt, muss daran denken in der
local.inc $ABSOLUTE_PATH_STUDIP entsprechend zu ändern.

In den in der local.inc angegebenen Verzeichnissen $UPLOAD_PATH, $ARCHIV_PATH,
$TMP_PATH und $TEXCACHE_PATH (bei Verwendung des LaTeX-Renderers) 
muss der Webserver-User(zumeist ist das wwwrun.nogroup, zur Sicherheit am besten
in der httpd.conf nachsehen) Schreibrechte haben. Seit der Version 0.7.5 können 
die Verzeichniss upload_doc und archiv auch ausserhalb des DocumentRoot angelegt
werden. Die Default-Konfiguration in der local.inc erwartet diese beiden 
Verzeichnisse in '/var/lib/studip'.

1.5 Benötigte Libaries und sonstige Packete

In der local.inc (s.o.) sind Pfade zu weitergehenden Libraries zu setzen, die
für Stud.IP notwendig sind.

Benötigt für die Grundfunktionalität:
- zip
- giftopnm, pnmscale, djpeg, cjpeg (Konvertierung von hochgeladenen 
  Benutzerbildern)
  (Bei debian 3.0 befinden sich die notwendigen Binaries in den packages netpbm,
   und libjpeg-progs)

Benötigt für den LaTeX-Renderer:
- Vollständig konfiguriertes LaTeX-System
- dvips
- ImageMagick

Der LaTeX-Renderer kann in der local.inc unter $LATEXRENDER_ENABLE ein- bzw.
ausgeschaltet werden (default: ein). Wenn er eingeschaltet ist, können an
verschiedenen Stellen in Stud.IP LaTex-Formeln durch [tex]...[/tex] gesetzt
werden.

Benötigt für das Export-Modul:
Für den Export von Daten als HTML, PDF etc. wird die XSLT-Unterstützung
für PHP benötigt. Falls die in der verwendeten PHP-Installation nicht
vorhanden ist, sind die Sablotron und expat Bibliotheken zu installieren
(www.gingerall.com) und PHP entsprechend neu zu konfigurieren (configure
--enable-xslt --with-xslt-sablot). Für Debian erledigt beides das Paket 
php4-xslt (apt-get install php4-xslt).
Für den Export als PDF ist zusätzlich FOP (Formatting Objects Processor) aus dem
Apache XML Projekt notwendig. (http://xml.apache.org/fop/download.html)
FOP ist in Java realisiert, es wird also auch ein lauffähiges JRE benötigt.
$FOP_SH_CALL muss den kompletten Pfad zum FOP Startskript enthalten. In 
$JAVA_ENV_CALL muss evtl. der Pfad zu einem Skript zum Setzen der Java
Umgebungsvariablen eingetragen werden (/etc/profile.d/alljava.sh bei einer SuSE
Distribution)

Benötigt für das Modul Chat:
Das Chat Modul benötigt die PHP Module sysvshm und sysvsem. Sollten diese Module
nicht verfügbar sein, kann man auch $CHAT_SERVER_NAME auf "ChatFileServer"
umstellen, in diesem Fall läuft die Datenspeicherung dateibasiert (sehr
schlechte Performance, nicht für größere Installationen zu empfehlen!).

Benötigt für das Modul Extern:
Für das Modul "Externe Seiten" kann ein zusätzlicher Datenbankbenutzer,der nur 
lesenden Zugriff auf die Datenbank hat angelegt werden. Dieser Benutzer muss mit
Namen und Passwort unter $DB_INSTITUT_USER und $DB_INSTITUT_PASSWORD eingetragen
werden. Wenn kein zusätzlicher Datenbankbenutzer angelegt werden soll bitte hier
einfach den Datenbankbenutzer eintragen, der auch in $DB_STUDIP_USER hinterlegt
ist.

Benötigt für das Modul Ilias Connect:
Für das Modul "Ilias Connect", dass die Verbindung zu Ilias Lernmodulen
ermöglicht, wird eine laufende Ilias Installation der Version 2.3.3 oder größer
(nicht 3.x !) benötigt. Die Datei studip-htdocs/lernmodule/studip2ilias.php muss
ins Ilias Stammverzeichnis kopiert werden. Es muss ein Datenbankbenutzer mit
Passwort in $DB_ILIAS_USER und $DB_ILIAS_PASSWORD eingetragen werden, dieser
braucht SELECT,INSERT,UPDATE und DELETE Rechte für die Ilias Datenbank. In 
$ABSOLUTE_PATH_ILIAS muss die komplette URL der Ilias Installation eingetragen
werden.

 
2 Start Stud.IP

Unter http://localhost/studip sollte jetzt die Startseite von StudIP
erreichbar sein. Mit dem Import von studip.sql ist auch ein root für
das Stud.IP System angelegt worden.
Benutzername: 	root@studip
Password: 	testing

Also einfach auf login, Benutzername und Passwort des root eingeben
...

Zum Anlegen neuer BenutzerInnen auf der Startseite >>Registrierung<<
auswählen. Die zu registrierende BenutzerIn wird zunächst mit der
Berechtigung >>user<< angelegt, abgeschlossen wird der Registrierungsprozeß
erst durch eine Bestätigungsmail (und das setzt eine korrekte Mail-Server-
Konfiguration voraus!), wodurch die BenutzerIn die Berechtigung >>autor<<
und damit auch weitergehende Lese/Schreibrechte erhält.



- The Stud.IP Crew <crew@studip.de>

$Id$
