Stud.IP Installation Guide
Version 0.9.5

Inhalt:

1 Installation
1.1 benötigte Programme und Module
1.2 Dateien entpacken
1.3 Einrichten der phplib
1.3.1 Anpassen der local.inc
1.3.2 grundlegende Modulkonfiguration
1.3.3 weitere optionale Paramter in der local.inc
1.4 Anpassung der php.ini Werte
1.4.1 Eintragen der Werte in die php.ini
1.4.2 Verändern der php.ini Werte über eine <Directory>-Anweisung
1.4.3 Verändern der php.ini Werte über eine .htaccess Datei
1.5 Mailversand
1.6 Anlegen der MySQL Datenbank 
1.7 Konfiguration des Stud.IP Basissystems
1.7.1 Verzeichnisse und Pfade
1.7.2 config.inc.php
1.8 Konfiguration der Stud.IP Module und optionalen Features
2 Der erste Start von Stud.IP


1 Installation

Stud.IP setzt für den produktiven Einsatz ein LAMP-System 
(Linux/Apache/MySQL/PHP) voraus. Alternativ ist eine Installation auf 
auf einem WAMP-System (Windows-System) möglich, wird jedoch von uns 
nicht empfohlen, da einige Kernfunktionen wie etwa das Versenden von 
eMails oder die Bilbearbeitung nicht funktionieren.
Die folgende Anleitung versteht sich als QuickstartGuide und beschreibt
lediglich den Einsatz einer auf Linux/Unix basierten Umgebung.

WICHTIGER HINWEIS: Dieser >>Quick Installation Guide<< setzt root Rechte
bezüglich des Webservers (inclusive PHP Interpreter) und der MySQL
Datenbank voraus.

VERY IMPORTANT NOTE: This is a quick installation guide to get you
started if you have an installation where you control the web server,
PHP interpreter and database server completely. They are not suitable
for a web hosting setup where you have only limited to no control
over the installation.

1.1 benötigte Programme und Module

Für Stud.IP werden folgende Programme benötigt:

Basiskomponenten

- Apache Webserver (Version 1.3.9 oder besser)
- MySQL-Datenbankserver (Version 3.23 oder besser)
- PHP-Apache Modul (Version 4.2.1 oder besser)

Tools

Für die Grundfunktionalität werden folgende Tools benötigt:
- zip
- giftopnm
- pnmscale
- djpeg
- cjpeg 

Benötigt für den optionalen LaTeX-Renderer:
- vollständig konfiguriertes LaTeX-System
- dvips
- ImageMagick

PHP-Module

Die folgenden Module müssen in PHP einkompiliert sein. Für die Grund-
funktionalität werden folgende Module benötigt:
- mysql
- gettext

Um den Chat zu nutzen, werden folgende Module benötigt:
- sysvshm
- sysvsem
(näheres im Abschnitt 1.8 "Konfiguration der Stud.IP Module")

Um das Export-Tool zu nutzen, werden zusätzlich folgende Module benötigt:
- xml
- xslt 
Zudem muß der FOP (Formating Objects Processor) und die Java Runtine Environment,
JRE, installiert sein.
(näheres im Abschnitt 1.8 "Konfiguration der Stud.IP Module")

Die Installation des eigentlichen LAMP-System wird vorausgesetzt - geeignete 
Anleitungen finden sich in einer großen Anzahl im Web.
Die korrekte Funktionsfähigkeit von PHP im Zusammenspiel mit dem Apache und 
MySQL  läßt sich mit einem einfachen Script feststellen:

<?
php phpinfo() 
?>

Dabei werden alle einkompilierten Module angezeigt und es können die Einstellungen 
der php.ini überprüft werden (siehe dazu im Abschnitt 1.3).


1.2 Dateien entpacken

Die heruntergeladene Datei sollte mit bunzip2 in ein temporäres Verzeichnis
entpackt werden. Dieses Verzeichnis kann nach erfolgreicher Installation
gelöscht oder als Referenz aufbewahrt werden.

Kurzübersicht der im Paket vorhandenen Verzeichnisse:

- studip-db		SQL-Dumps für mysql-Datenbankeinrichtung und 
			Dumps mit Demo-Daten.
- studip-doc		Dokumentation zur Installation
- install		Installations-Skript, getestet mit SuSe 8.0
- studip-config		Default-Konfigurationsdateien (local.inc, config.inc.php)
- studip-htdocs		Der Stud.IP-Kern, später sichtbar für Webserver
- studip-phplib		Angepasste phplib-Version für Stud.IP
- studip-update		Migrationsskripte für ältere Stud.IP-Versionen
			(Für Versionsupgrade bitte README lesen!)
- studip-varlib		Default-Sruktur für Datenverzeichnisse außerhalb
			des Apache-Document-Root-Verzeichnisses.


1.3 Einrichten der phplib 

Stud.IP verwendet die phplib-7.2d mit leichten Modifikationen. Das Orginal
ist unter http://phplib.sourceforge.net/ zu finden. 

Folgende Dateien wurden hinzugefügt:
- email-validation.inc (check von Email-Adressen und anderen Angaben)
- smtp.inc (versenden von Mails auf einem Linux-System)
- ct_sql_patched.inc (kleiner bugfix der ct_sql.inc, nur für MySQL)

Folgende Dateien wurden verändert:
- prepend.php (obengenannte Dateien werden automatisch eingebunden)
- page.inc (Funktionalität zum Abbrechen des Logins)
  
Die angepasste Version befindet sich im Verzeichnis studip-phplib 
des Installations-Paketes und sollte in das Apache-Root-Verzeichnis kopiert
werden. Ist dies z.B. /usr/local/httpd, dann sind die Dateien folglich nach 
/usr/local/httpd/php zu kopieren. 
ACHTUNG: Bitte dieses Include-Verzeichnis nicht unterhalb des Document-Root 
des Webservers einfügen, da hier u.a. die Datenbankpasswörter gespeichert
werden!
Seit SuSE 8.1 befindet sich das Root-Verzeichnis des Webservers in /srv/www .
Für debian-Linux 3.0 ist z.B. das Verzeichnis /usr/lib/apache eine gute Wahl.

1.3.1 Anpassen der local.inc

Die local.inc im Verzeichnis der phplib ist eine der beiden zentralen 
Konfiguratsdateien des Stud.IP-Systems. Hier werden vor allem grundlegende 
technische Einstellungen festgelegt. 
(weitere Einstellungen können in der config.inc.php vorgnommen - dort sind vor 
allem inhaltliche Einstellungen wie diversen Bezeichungen oder Semesterdaten
enthalten).
Benennen Sie die enthaltene Datei local.inc.dist in local.inc um (eine "frische"
Kopie der local.inc.dist befindet sich zusätzlich im Verzeichnis studip-config).
Folgende Parameter müssen an die lokalen Gegebenheiten angepasst werden bzw. 
sollten überprüft werden:

- Eintragen von $UNI_NAME_CLEAN: Hier tragen Sie bitten den Namen ihrer Einrichtung
  ein (der Namen muss "clean", also ohne html-Entitäten eingtragen werden!)
- Festlegen der Datenbankanbindung
  ($DB_STUDIP_HOST, $DB_STUDIP_USER, $DB_STUDIP_PASSWORD, $DB_STUDIP_DATABASE)
  Wenn Sie die Module Ilias-Anbindung oder  SRI-Schnittstelle (externe
  Seiten) nutzen wollen, müssen weitere Einträge analog für DB_ILIAS und DB_INSTITUT
  vorgenommen werden.
  (siehe 1.6 "Anlegen der MySQL Datenbank")
- Anpassung des Mailhostes, wenn Mails nicht über ein lokales Sendmail,
  sondern einen externen Rechner verschickt werden sollen. ($MAIL_HOST_NAME)
- Absoluter Pfad zu den Stud.IP-Programmdateien, sichtbar für den Webserver
  ($ABSOLUTE_PATH_STUDIP)
- Anpassung des Pfades zum Upload-Verzeichnis, muss nicht für den Webserver
  sichtbar sein ($UPLOAD_PATH)
  ACHTUNG: Für dieses Verzeichnis benötigt der Webserver Schreibrechte!
- Absoluter Pfad zum Archiv-Verzeichnis, muss nicht für den Webserver
  sichtbar sein ($ARCHIV_PATH)
  ACHTUNG: Für dieses Verzeichnis benötigt der Webserver Schreibrechte!
- Angabe des Temp-Verzeichnisses, falls nötig
- Anpassung der Pfade zu allen benötigten Tools für die Bildbearbeitung 
- Anpassung der Pfade für den Latexrenderer, falls dieser benutzt werden 
  soll. Ansonsten kann das Modul hier abgeschaltet werden.
  
1.3.2 grundlegende Modulkonfiguration

In der local.inc können Sie auch die Modulkonfiguration in dem aentsprechenden 
Abschnitt einstellen. Für jedes Modul gibt es einen Schalter $<MODULNAME>_ENABLE, 
über den Sie das Modul ein- und ausschalten können. 
Einige Module verlangen weitere Angaben wie Pfadangaben oder andere Einstellungs-
option, die Sie im Normalfall einfach so lassen, wie im Auslieferungszustand 
eingestellt.
Wichtig sind nur folgende Optionen:
- Falls Sie das Modul Export benutzen wollen, so müssen die Werte $FOP_SH_CALL und
  $JAVA_ENV_CALL entsprechend gesetzt werden.
- Falls Sie das Modul Ilias-Anbindung benutzen, müssen Sie für den Wert
  $ABSOLUTE_PATH_ILIAS den absoluten Pfad (URL) Ihrer Ilias-Installation angeben.
- Falls Sie das Modul SRI-Schnittstellen (Externe Seiten) nutzen wollen, müssen
  Sie Ihren Servernamen für $EXTERN_SERVER_NAME festlegen und für 
  $EXTERN_CONFIG_FILE_PATH ein Verzeichnis festlegen, in dem die Konfigurations-
  dateien abgelegt werden.
  ACHTUNG: Für dieses Verzeichnis benötigt der Webserver Schreibrechte!

1.3.3 weitere optionale Paramter in der local.inc

Neben den oben beschrieben Optionen gibt es noch weitere Parameter, die in der 
local.inc optional festgelegt werden können:
- $ALLOW_GROUPING_SEMINARS, $ALLOW_SELFASSIGN_STUDYCOURSE, $SHOW_TERMS_ON_FIRST_LOGIN
  sind Paramter, die Sie unter Umständen umstellen können, etwa wenn Sie mit einer
  externen Authetifizierung (LDAP o.ä.) arbeiten
- Einstellungen für die Internationalisierung von Stud.IP (braucht im Normalfall 
  nicht angepasst zu werden)
- Einstellungen für Authentifizierungs-Plugins (brauche nur angepasst werden, wenn
  Sie eine externe Authentifizierung einsetzen).
- Weitere Optionen zur Authentifizierung: $ALLOW_CHANGE_USERNAME, $ALLOW_CHANGE_EMAIL, 
  $ENABLE_SELF_REGISTRATION können in Verbindung mit der Standard-Authentifiezierung
  (also dem Auslierfurngszustand) angepasst werden,
  
1.4 Anpassung der php.ini Werte

Um Stud.IP ordnungegemäß zum laufen zu bringen, müssen einige der Werte der php.ini
angepasst werden. Dabei sind drei unterschiedliche Varianten möglich:
- Setzen Sie direkt die entsprechenden Werte in der php.ini. Wenn Sie auf dem Server
  Stud.IP als einizige PHP-Software einsetzen, ist dies eine gute Wahl.
- Sie können die Werte auch direkt in der httpd.conf des Apache per <Directory>
  Anweisung setzen. Auf diese Weise werden umsetzen lassen. Das hat den Vorteil, 
  dass verschiedene PHP-Programme nebeneinander installiert werden können und 
  verschiedene Einstellungen der php.ini-Optionen je nach Verzeichnis gelten.
- Schließlich können Sie auch die Werte direkt in einer .htaccess Datei ablegen und 
  damit direkt im Verzeichnis der Software die Einstellungen setzen. Diese Variante
  hat den Vorteil, dass die keinen Zugriff auf den Webserbenötigen - etwa bei einer 
  Installation auf dem Rechner eines externen Providers.

ACHTUNG: Sie müssen eine der beiden letzten Varianten wählen, um Stud.IP un ILIAS auf 
einem Server zumsammen betreiben zu können!

1.4.1 Eintragen der Werte in die php.ini

Die php.ini sollte sich nach der Installation von php in /etc/httpd/ 
(bzw. bei SuSE ab 7.2 in /etc, bei debian in /etc/php4/apache) befinden.
Sie sollten diese Variante der Konfiguration nur wählen, wenn Sie nur ein PHP-Programm
installiert haben. 
Wir empfehlen für einen reibungslosen Betrieb die beiden letzten Varianten.

Folge Werte müssen angepasst werden:

auto_prepend_file       =       /usr/local/httpd/php/prepend.php

Damit wird vor jedem Seitenaufruf die phplib initialisiert.

include_path            =       /usr/local/httpd/php

Der include_path muss auf das Verzeichnis der phplib, das zuvor erstellt wurde, 
verweisen, In unserem Beispiel ist das /usr/local/httpd/php.

register_globals = on

Diese Option muss auf jeden Fall gesetzt werden, da Stud.IP zur Zeit noch mit
globalen Variablen arbeitet.

upload_max_filesize = 8M

Dieser Wert beeinflusst direkt die maximale Größe von Datei-Uploads. Wenn Sie größere
Dateien zulassen wollen, müssen Sie diesen Wert entsprechend hoch einstellen.

memory_limit = 8M

Dieser Wert muss mit upload_max_filesize korrespondieren.

max_execution_time = 300

Dieser Wert beeinflusst die maximale Ausführungsdauer eines Scriptes. Ein höherer
Wert hat sich hier bewährt.

1.4.2 Verändern der php.ini Werte über eine <Directory>-Anweisung

Nach Möglichkeit sollte die Anpassungen der php ini Werte über eine <Directory>
Anweisung in der Apache Konfigurationsdatei vorgenommen werden. Auf diese Weise
werden andere laufende PHP-Applikationen nicht beeinflusst.
Im Installationsarchiv unter /studip-config befindet sich eine Datei 
studip-httpd.conf, die alle notwendigen Einstellungen enthält. Mit einer 
aktuellen SuSE Distribution wäre die Vorgehensweise folgende:

- Kopieren von studip-httpd.conf nach zB. /etc/httpd/studip-httpd.conf
- Anpassen der Pfadangaben in studip-httpd.conf
- in /etc/sysconfig/apache 
  HTTPD_CONF_INCLUDE_FILES="/etc/httpd/studip-httpd.conf" 
  setzen
- SuSEconfig aufrufen
- Webserver neustarten

In anderen Distributionen kann man den Inhalt von studip-httpd.conf einfach in 
die httpd.conf kopieren, oder eine include Anweisung verwenden, um 
studip-httpd.conf einzubinden.

1.4.3 Verändern der php.ini Werte über eine .htaccess Datei

Ähnlich verhält es sich, wenn die Werte über eine .htaccess Datei verändert
werden. Diese Variante hat den Vorteil, dass man kein Zugriff auf den Webserver 
bzw. die Konfigurationsdatei des Webserver haben muss.
Dazu muss in der httpd.conf lediglich der Eintrag

AllowOverride All

entweder global für alle Verzeichnisse oder das verwendete Verzeichnis als <Directory>-
Anweisung eingetragen werden.
Anschließend legt man im entsprechenden Verzeichnis (also dem Wurzelverzeichnis
der Stud.IP-Installation) eine .htaccess-Datei an, die die entsprechenden Werte
der php.ini wnthält.
Im Installations-Paket unter /studip-config befindet sich eine .htaccess-
Datei, die alle notwendigen Einstellungen enthält. 


1.5 Mailversand

Damit das Registrierungsmodul von Stud.IP funktioniert, muss der Mailversand
konfiguriert sein, d.h. der Webserver muss in der Lage sein Mails über den in
$MAIL_HOST_NAME angegebenen Mailserver zu verschicken. In den verschickten Mails
ist Reply-To auf abuse@<SERVER_NAME> gesetzt, Mails an diese Adresse sollten an
einen der Administratoren weitergeleitet werden.


1.6 Anlegen der MySQL Datenbank 

Stud.IP setzt eine installierte MySQL Datenbank in der Version 3.23 oder besser
voraus.
Zur Inbetriebnahme von Stud.IP muss eine Datenbank, der Einfachheit
halber nennen wir sie 'studip', angelegt werden.

mysql -e "create database studip"

und die entsprechenden Tabellen hinzugefügt werden.

mysql studip < studip-db/studip_x.sql

Im Verzeichnis /studip-db werden folgende Datenbankdumps mitgeliefert:

- studip.sql: Enthält die Grundstruktur aller benötigten Tabellen. 
  Dieser Dump muss installiert werden.
- studip_root_user.sql: Mit diesem Dump wird ein Stud.IP-Nutzer vom Status root
  (innerhalb des Systems) angelegt. 
  Accountname: root@studip
  Password: testing
  ACHTUNG: Das Passwort sollte, wenn das System erfolgreich aufgesetzt wurde, 
  sofort geändert werden!
- studip_demo_data.sql: Mit diesem Dump werden einige Demonstrations-Daten ins
  Systen eimgespielt. Das Einspielen dieses Dumps ist obligatorisch, zum Betrieb 
  ist er nicht notwendig.
  
Zwei weitere Dumps müssen bzw. können nur eingespielt werden, wenn die 
Ressourcenverwaltung genutzt werden soll:

- studip_resources_default_data.sql: Dieser Dumo enthält notwendige Defaults für
  die Ressourcenverwaltung. Er ist zum Betrieb notwendig.
- studip_resources_demo_data.sql: Demonstrationsdaten für die Ressourcenverwaltung.
  Das Einspielen ist ebenfalls obligatorisch.

Zudem muss ein Datenbankbenutzer für studip angelegt werden.
In der phplib Datei local.inc, die auf Stud.IP angepasst wurde, muss
dieser unter $DB_STUDIP_USER mit entsprechendem Passwort ($DB_STUDIP_PASSWORD)
eingetragen werden. Dieser Datenbankbenutzer benötigt die Rechte: SELECT, 
INSERT,UPDATE,DELETE,CREATE,DROP (letztere für temporäre Tabellen).

Entsprechende Datenbankbenutzer müssen unter Umständen für die Anbindung der externen 
Seiten (Abschnitt $DB_INSTITUT) und die Ilias-Anbindung ($DB_ILIAS) erstellt werden.
Der Nutzer $DB_INSTITUT benötigt nur SELECT Privilegien, der Nutzer für $DB_ILIAS
braucht dieselben Privilegien wie $DB_STUDIP.
Wenn Sie wollen können sie allerdings für alle Datenbankklassen den 
gleichen Nutzer verwenden.

Am Ende bitte nicht vergessen, die MySQL Datenbank neu zu starten (reload!).

Als einfach zu bedienendes Tool haben sich bei uns kmysqladmin und
phpMyAdmin (http://www.phpwizard.net/projects/phpMyAdmin/) bewährt. Unter Windows bietet 
sich MySQL-Front an.

1.7 Konfiguration des Stud.IP Basissystems

Die Dateien von Stud.IP befinden sich im Verzeichnis /studip-htdocs. Dieses
sollte ins Document-Root-Verzeichnis des Webservers kopiert werden.
In unserem Beispiel also nach /usr/local/httpd/htdocs/studip.
Wer einen anderen Verzeichnisnamen benutzt, muss daran denken in der
local.inc $ABSOLUTE_PATH_STUDIP entsprechend zu ändern.

1.7.1 Verzeichnisse und Pfade

In den in der local.inc angegebenen Verzeichnissen $UPLOAD_PATH, $ARCHIV_PATH,
$TMP_PATH und $TEXCACHE_PATH (bei Verwendung des LaTeX-Renderers) und 
$EXTERN_CONFIG_FILE_PATH (wenn die SRI-Schnittstelle benutzt wird) muss der 
Webserver-User(zumeist ist das wwwrun.nogroup, zur Sicherheit am besten
in der httpd.conf nachsehen) Schreibrechte haben. 
Folge Verzeichnisse werden per Default gesetzt:

- Uploadverzeichnis für alle Dokumente:
  /var/lib/studip/upload_doc/
- Ablage für die Dateien der archivierten Veranstaltungen:
  /var/lib/studip/archiv/
- Ablage für Konfigurationsdateien der externen Seiten (SRI-Schnittstelle; nur
  wenn aktiviert)
  /var/lib/studip/extern_config/
- Cache für gerendenderte TeX-Elemente (nur wenn aktiviert)
  <Document-Root>/pictures/tex/

Die ersten drei Verzeichnisse dürfen NICHT von außen über den Webserver erreichbar sein, 
der TeX-Cache jedoch MUSS erreichbar sein.

Zudem schreibt Stud.IP in das Verzeichnis  <Document-Root>/user. Hier werden die 
Bilder der Nutzer abgelegt. Dafür existiert zur Zeit noch keine Konfigurationsoption.

Der Zugriff auf das Temp-Verzeichnis (per default /tmp) muss ebenfalls gewährleistet 
sein.

1.7.2 config.inc.php

Zum Betrieb von Stud.IP muss im Stammverzeichnis der Stud.IP Installation die
config.inc.php angelegt werden. Sie finden dort bereits eine Distributionsversion 
mit dem Namen config.inc.dist. Benennen Sie die Datei in config.inc um (eine "frische" 
Kopie der config.inc.dist befindet sich zusätzlich im Verzeichnis studip-config).

In der config.inc sollten Sie zunächst nur die allgemeinen Daten wie $UNI_URL, 
$UNI_LOGOUT_ADD, $UNI_CONTACT und $UNI_INFO setzen.
Wichtig für den Regelbetrieb sind auch die Abschnitte $HOLIDAY und $SEMESTER, die
an ihre Gegebenheiten angepasst werden sollten.
Alle weiteren Einstellungen sollten als Default gut funktionieren - verändertn Sie
diese Optionen bitte erst, wenn sie mit dem System bereits vertraut sind.
ACHTUNG: Wenn Sie das System im Regelbetrieb einsetzen, sollten nachträglich ausser
den obengenannten Optionen möglichst keine Einstellungen mehr verändert werden, da 
sonst Inkonsistenzen in der Datenbank auftreten können.


1.8 Konfiguration der Stud.IP Module und optionalen Features

Neben dem Basissystem existieren einige Stud.IP Module, die besondere Voraussetzungen 
zum Betrieb benötigen oder speziell konfiguriert werden müssen. In Auslieferungszustand
werden diese Module mit installiert, daher sollten sie im entsprechenden Abschnitt der 
local.inc einen Blick darauf werden, welche Module existieren und welche überhaupt 
benötigt werden (siehe unter 1.3.2 "grundlegende Modulkonfiguration").

Latex-Renderer
Der LaTeX-Renderer kann in der local.inc unter $LATEXRENDER_ENABLE ein- bzw.
ausgeschaltet werden (default: ein). Wenn er eingeschaltet ist, können an
verschiedenen Stellen in Stud.IP LaTex-Formeln durch [tex]...[/tex] gesetzt
werden.

Export-Modul:
Für den Export von Daten als HTML, PDF etc. wird die XSLT-Unterstützung
für PHP benötigt. Falls die in der verwendeten PHP-Installation nicht
vorhanden ist, sind die Sablotron und expat Bibliotheken zu installieren
(www.gingerall.com) und PHP entsprechend neu zu konfigurieren (configure
--enable-xslt --with-xslt-sablot). Für Debian erledigt beides das Paket 
php4-xslt (apt-get install php4-xslt).
Für den Export als PDF ist zusätzlich FOP (Formatting Objects Processor) aus dem
Apache XML Projekt notwendig. (http://xml.apache.org/fop/download.html)
FOP ist in Java realisiert, es wird also auch ein lauffähiges JRE benötigt.
$FOP_SH_CALL muss den kompletten Pfad zum FOP Startskript enthalten. In 
$JAVA_ENV_CALL muss evtl. der Pfad zu einem Skript zum Setzen der Java
Umgebungsvariablen eingetragen werden (/etc/profile.d/alljava.sh bei einer SuSE
Distribution)

Chat-Modul:
Das Chat Modul benötigt die PHP Module sysvshm und sysvsem. Sollten diese Module
nicht verfügbar sein, kann man auch $CHAT_SERVER_NAME auf "ChatFileServer"
umstellen, in diesem Fall läuft die Datenspeicherung dateibasiert (sehr
schlechte Performance, nicht für größere Installationen zu empfehlen!).

SRI-Schnistelle (Extern-Modul):
Für das Modul "Externe Seiten" kann ein zusätzlicher Datenbankbenutzer,der nur 
lesenden Zugriff auf die Datenbank hat, angelegt werden. Dieser Benutzer muss mit
Namen und Passwort unter $DB_INSTITUT_USER und $DB_INSTITUT_PASSWORD eingetragen
werden. Wenn kein zusätzlicher Datenbankbenutzer angelegt werden soll, bitte hier
einfach den Datenbankbenutzer eintragen, der auch in $DB_STUDIP_USER hinterlegt
ist.

Ilias-Connect-Modul:
Für das Modul "Ilias Connect", dass die Verbindung zu Ilias Lernmodulen
ermöglicht, wird eine laufende Ilias Installation der Version 2.3.3 oder besser
(nicht 3.x !) benötigt. Die Datei studip-htdocs/lernmodule/studip2ilias.php muss
ins Ilias Stammverzeichnis kopiert werden. Es muss ein Datenbankbenutzer mit
Passwort in $DB_ILIAS_USER und $DB_ILIAS_PASSWORD eingetragen werden, dieser
braucht SELECT,INSERT,UPDATE und DELETE Rechte für die Ilias Datenbank. In 
$ABSOLUTE_PATH_ILIAS muss die komplette URL der Ilias Installation eingetragen
werden.

Weitere Module wie der Kalender, die Ressourcenverwaltung, das Wiki- oder das
Vote-Module benötigen keine spezielle Konfiguration oder Zusatzsoftware.
 
2 Der erste Start von Stud.IP

Unter http://localhost/studip sollte jetzt die Startseite von StudIP
erreichbar sein. Wenn Sie studip_root_user.sql importiert haben, ist 
ein root-Benutzer für das Stud.IP System angelegt worden:
Benutzername: 	root@studip
Password: 	testing

Also einfach auf login, Benutzername und Passwort des root eingeben
...

Zum Anlegen neuer BenutzerInnen auf der Startseite >>Registrierung<<
auswählen. Die zu registrierende BenutzerIn wird zunächst mit der
Berechtigung >>user<< angelegt, abgeschlossen wird der Registrierungsprozeß
erst durch eine Bestätigungsmail (und das setzt eine korrekte Mail-Server-
Konfiguration voraus!), wodurch die BenutzerIn die Berechtigung >>autor<<
und damit auch weitergehende Lese/Schreibrechte erhält.



- The Stud.IP Crew <crew@studip.de>

$Id$
